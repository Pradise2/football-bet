{
	"id": "80d4383c1912f33509854e388c81a1eb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"MarketRouter.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.19;\r\n\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\ninterface PredictionMarket {\r\n    function placeBet(uint256 marketId, uint256 outcome, uint256 amount) external;\r\n    function claimWinnings(uint256 marketId) external returns (uint256);\r\n}\r\n\r\ncontract MarketRouter is ReentrancyGuard {\r\n    using SafeERC20 for IERC20;\r\n    \r\n    struct BatchBet {\r\n        address market;\r\n        uint256 marketId;\r\n        uint256 outcome;\r\n        uint256 amount;\r\n    }\r\n    \r\n    struct BatchClaim {\r\n        address market;\r\n        uint256 marketId;\r\n    }\r\n    \r\n    event BatchBetPlaced(address indexed user, uint256 totalAmount, uint256 marketCount);\r\n    event BatchClaimExecuted(address indexed user, uint256 totalClaimed, uint256 marketCount);\r\n    \r\n    function placeBatchBets(BatchBet[] calldata bets, IERC20 token) external nonReentrant {\r\n        require(bets.length > 0, \"No bets provided\");\r\n        \r\n        uint256 totalAmount = 0;\r\n        for (uint256 i = 0; i < bets.length; ) {\r\n            totalAmount += bets[i].amount;\r\n            unchecked { i++; }\r\n        }\r\n        \r\n        // Pull tokens once\r\n        token.safeTransferFrom(msg.sender, address(this), totalAmount);\r\n\r\n        // Track refunds\r\n        uint256 refunded = 0;\r\n     for (uint256 i = 0; i < bets.length; ) {\r\n    BatchBet memory bet = bets[i];\r\n\r\n    // Safe allowance handling\r\n    token.forceApprove(bet.market, bet.amount);\r\n    \r\n    try PredictionMarket(bet.market).placeBet(bet.marketId, bet.outcome, bet.amount) {\r\n        // success\r\n    } catch {\r\n        refunded += bet.amount;\r\n        token.safeTransfer(msg.sender, bet.amount);\r\n    }\r\n\r\n    unchecked { i++; }\r\n}\r\n\r\n        \r\n        emit BatchBetPlaced(msg.sender, totalAmount - refunded, bets.length);\r\n    }\r\n    \r\n    function batchClaim(BatchClaim[] calldata claims) external nonReentrant {\r\n        require(claims.length > 0, \"No claims provided\");\r\n        \r\n        uint256 totalClaimed = 0;\r\n        uint256 successfulClaims = 0;\r\n        \r\n        for (uint256 i = 0; i < claims.length; ) {\r\n            BatchClaim memory claim = claims[i];\r\n            \r\n            try PredictionMarket(claim.market).claimWinnings(claim.marketId) returns (uint256 claimed) {\r\n                totalClaimed += claimed;\r\n                successfulClaims++;\r\n            } catch {\r\n                // skip failed claim\r\n            }\r\n\r\n            unchecked { i++; }\r\n        }\r\n        \r\n        emit BatchClaimExecuted(msg.sender, totalClaimed, successfulClaims);\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 100,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212206b9870605e8f38fc4a6903431092b7b868bc6456ab2e01df7bceb217cd8674d764736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212206b9870605e8f38fc4a6903431092b7b868bc6456ab2e01df7bceb217cd8674d764736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x9870605E8F38FC4A69034310 SWAP3 0xB7 0xB8 PUSH9 0xBC6456AB2E01DF7BCE 0xB2 OR 0xCD DUP7 PUSH21 0xD764736F6C634300081E0033000000000000000000 ",
							"sourceMap": "698:9376:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212206b9870605e8f38fc4a6903431092b7b868bc6456ab2e01df7bceb217cd8674d764736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x9870605E8F38FC4A69034310 SWAP3 0xB7 0xB8 PUSH9 0xBC6456AB2E01DF7BCE 0xB2 OR 0xCD DUP7 PUSH21 0xD764736F6C634300081E0033000000000000000000 ",
							"sourceMap": "698:9376:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206b9870605e8f38fc4a6903431092b7b868bc6456ab2e01df7bceb217cd8674d764736f6c634300081e0033",
									".code": [
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"MarketRouter.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"MarketRouter.sol": {
				"MarketRouter": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "marketCount",
									"type": "uint256"
								}
							],
							"name": "BatchBetPlaced",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalClaimed",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "marketCount",
									"type": "uint256"
								}
							],
							"name": "BatchClaimExecuted",
							"type": "event"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "market",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "marketId",
											"type": "uint256"
										}
									],
									"internalType": "struct MarketRouter.BatchClaim[]",
									"name": "claims",
									"type": "tuple[]"
								}
							],
							"name": "batchClaim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "market",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "marketId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "outcome",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										}
									],
									"internalType": "struct MarketRouter.BatchBet[]",
									"name": "bets",
									"type": "tuple[]"
								},
								{
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								}
							],
							"name": "placeBatchBets",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"MarketRouter.sol\":445:2721  contract MarketRouter is ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"MarketRouter.sol\":445:2721  contract MarketRouter is ReentrancyGuard {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"MarketRouter.sol\":445:2721  contract MarketRouter is ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8a48ca85\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xead99b61\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"MarketRouter.sol\":1975:2718  function batchClaim(BatchClaim[] calldata claims) external nonReentrant {... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      stop\n        /* \"MarketRouter.sol\":954:1963  function placeBatchBets(BatchBet[] calldata bets, IERC20 token) external nonReentrant {... */\n    tag_4:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      stop\n        /* \"MarketRouter.sol\":1975:2718  function batchClaim(BatchClaim[] calldata claims) external nonReentrant {... */\n    tag_8:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_14\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_15\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_14:\n        /* \"MarketRouter.sol\":2082:2083  0 */\n      0x00\n        /* \"MarketRouter.sol\":2066:2072  claims */\n      dup3\n      dup3\n        /* \"MarketRouter.sol\":2066:2079  claims.length */\n      swap1\n      pop\n        /* \"MarketRouter.sol\":2066:2083  claims.length > 0 */\n      gt\n        /* \"MarketRouter.sol\":2058:2106  require(claims.length > 0, \"No claims provided\") */\n      tag_17\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_18\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_17:\n        /* \"MarketRouter.sol\":2127:2147  uint256 totalClaimed */\n      0x00\n        /* \"MarketRouter.sol\":2150:2151  0 */\n      0x00\n        /* \"MarketRouter.sol\":2127:2151  uint256 totalClaimed = 0 */\n      swap1\n      pop\n        /* \"MarketRouter.sol\":2162:2186  uint256 successfulClaims */\n      0x00\n        /* \"MarketRouter.sol\":2189:2190  0 */\n      0x00\n        /* \"MarketRouter.sol\":2162:2190  uint256 successfulClaims = 0 */\n      swap1\n      pop\n        /* \"MarketRouter.sol\":2216:2225  uint256 i */\n      0x00\n        /* \"MarketRouter.sol\":2228:2229  0 */\n      0x00\n        /* \"MarketRouter.sol\":2216:2229  uint256 i = 0 */\n      swap1\n      pop\n        /* \"MarketRouter.sol\":2211:2623  for (uint256 i = 0; i < claims.length; ) {... */\n    tag_20:\n        /* \"MarketRouter.sol\":2235:2241  claims */\n      dup5\n      dup5\n        /* \"MarketRouter.sol\":2235:2248  claims.length */\n      swap1\n      pop\n        /* \"MarketRouter.sol\":2231:2232  i */\n      dup2\n        /* \"MarketRouter.sol\":2231:2248  i < claims.length */\n      lt\n        /* \"MarketRouter.sol\":2211:2623  for (uint256 i = 0; i < claims.length; ) {... */\n      iszero\n      tag_21\n      jumpi\n        /* \"MarketRouter.sol\":2267:2290  BatchClaim memory claim */\n      0x00\n        /* \"MarketRouter.sol\":2293:2299  claims */\n      dup6\n      dup6\n        /* \"MarketRouter.sol\":2300:2301  i */\n      dup4\n        /* \"MarketRouter.sol\":2293:2302  claims[i] */\n      dup2\n      dup2\n      lt\n      tag_23\n      jumpi\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n    tag_23:\n      swap1\n      pop\n      0x40\n      mul\n      add\n        /* \"MarketRouter.sol\":2267:2302  BatchClaim memory claim = claims[i] */\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      swap1\n      pop\n        /* \"MarketRouter.sol\":2352:2357  claim */\n      dup1\n        /* \"MarketRouter.sol\":2352:2364  claim.market */\n      0x00\n      add\n      mload\n        /* \"MarketRouter.sol\":2335:2379  PredictionMarket(claim.market).claimWinnings */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x677bd9ff\n        /* \"MarketRouter.sol\":2380:2385  claim */\n      dup3\n        /* \"MarketRouter.sol\":2380:2394  claim.marketId */\n      0x20\n      add\n      mload\n        /* \"MarketRouter.sol\":2335:2395  PredictionMarket(claim.market).claimWinnings(claim.marketId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_30\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      0x01\n    tag_30:\n        /* \"MarketRouter.sol\":2331:2578  try PredictionMarket(claim.market).claimWinnings(claim.marketId) returns (uint256 claimed) {... */\n      iszero\n      tag_37\n      jumpi\n        /* \"MarketRouter.sol\":2457:2464  claimed */\n      dup1\n        /* \"MarketRouter.sol\":2441:2464  totalClaimed += claimed */\n      dup6\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      swap5\n      pop\n        /* \"MarketRouter.sol\":2483:2501  successfulClaims++ */\n      dup4\n      dup1\n      tag_40\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      swap5\n      pop\n      pop\n        /* \"MarketRouter.sol\":2396:2517  returns (uint256 claimed) {... */\n      pop\n        /* \"MarketRouter.sol\":2331:2578  try PredictionMarket(claim.market).claimWinnings(claim.marketId) returns (uint256 claimed) {... */\n    tag_37:\n        /* \"MarketRouter.sol\":2606:2609  i++ */\n      dup2\n      dup1\n      0x01\n      add\n      swap3\n      pop\n      pop\n        /* \"MarketRouter.sol\":2252:2623  {... */\n      pop\n        /* \"MarketRouter.sol\":2211:2623  for (uint256 i = 0; i < claims.length; ) {... */\n      jump(tag_20)\n    tag_21:\n      pop\n        /* \"MarketRouter.sol\":2667:2677  msg.sender */\n      caller\n        /* \"MarketRouter.sol\":2648:2710  BatchClaimExecuted(msg.sender, totalClaimed, successfulClaims) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb9c05773bac087c79ca346191a3f49b33e00ab1c6913f7788c9a3ec9391beab2\n        /* \"MarketRouter.sol\":2679:2691  totalClaimed */\n      dup4\n        /* \"MarketRouter.sol\":2693:2709  successfulClaims */\n      dup4\n        /* \"MarketRouter.sol\":2648:2710  BatchClaimExecuted(msg.sender, totalClaimed, successfulClaims) */\n      mload(0x40)\n      tag_42\n      swap3\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"MarketRouter.sol\":2047:2718  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_44\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_45\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_44:\n        /* \"MarketRouter.sol\":1975:2718  function batchClaim(BatchClaim[] calldata claims) external nonReentrant {... */\n      pop\n      pop\n      jump\t// out\n        /* \"MarketRouter.sol\":954:1963  function placeBatchBets(BatchBet[] calldata bets, IERC20 token) external nonReentrant {... */\n    tag_12:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_47\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_15\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_47:\n        /* \"MarketRouter.sol\":1073:1074  0 */\n      0x00\n        /* \"MarketRouter.sol\":1059:1063  bets */\n      dup4\n      dup4\n        /* \"MarketRouter.sol\":1059:1070  bets.length */\n      swap1\n      pop\n        /* \"MarketRouter.sol\":1059:1074  bets.length > 0 */\n      gt\n        /* \"MarketRouter.sol\":1051:1095  require(bets.length > 0, \"No bets provided\") */\n      tag_49\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_50\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_49:\n        /* \"MarketRouter.sol\":1116:1135  uint256 totalAmount */\n      0x00\n        /* \"MarketRouter.sol\":1138:1139  0 */\n      0x00\n        /* \"MarketRouter.sol\":1116:1139  uint256 totalAmount = 0 */\n      swap1\n      pop\n        /* \"MarketRouter.sol\":1155:1164  uint256 i */\n      0x00\n        /* \"MarketRouter.sol\":1167:1168  0 */\n      0x00\n        /* \"MarketRouter.sol\":1155:1168  uint256 i = 0 */\n      swap1\n      pop\n        /* \"MarketRouter.sol\":1150:1277  for (uint256 i = 0; i < bets.length; ) {... */\n    tag_52:\n        /* \"MarketRouter.sol\":1174:1178  bets */\n      dup5\n      dup5\n        /* \"MarketRouter.sol\":1174:1185  bets.length */\n      swap1\n      pop\n        /* \"MarketRouter.sol\":1170:1171  i */\n      dup2\n        /* \"MarketRouter.sol\":1170:1185  i < bets.length */\n      lt\n        /* \"MarketRouter.sol\":1150:1277  for (uint256 i = 0; i < bets.length; ) {... */\n      iszero\n      tag_53\n      jumpi\n        /* \"MarketRouter.sol\":1219:1223  bets */\n      dup5\n      dup5\n        /* \"MarketRouter.sol\":1224:1225  i */\n      dup3\n        /* \"MarketRouter.sol\":1219:1226  bets[i] */\n      dup2\n      dup2\n      lt\n      tag_55\n      jumpi\n      tag_56\n      tag_25\n      jump\t// in\n    tag_56:\n    tag_55:\n      swap1\n      pop\n      0x80\n      mul\n      add\n        /* \"MarketRouter.sol\":1219:1233  bets[i].amount */\n      0x60\n      add\n      calldataload\n        /* \"MarketRouter.sol\":1204:1233  totalAmount += bets[i].amount */\n      dup3\n      tag_57\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_57:\n      swap2\n      pop\n        /* \"MarketRouter.sol\":1260:1263  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"MarketRouter.sol\":1150:1277  for (uint256 i = 0; i < bets.length; ) {... */\n      jump(tag_52)\n    tag_53:\n      pop\n        /* \"MarketRouter.sol\":1326:1388  token.safeTransferFrom(msg.sender, address(this), totalAmount) */\n      tag_58\n        /* \"MarketRouter.sol\":1349:1359  msg.sender */\n      caller\n        /* \"MarketRouter.sol\":1369:1373  this */\n      address\n        /* \"MarketRouter.sol\":1376:1387  totalAmount */\n      dup4\n        /* \"MarketRouter.sol\":1326:1331  token */\n      dup6\n        /* \"MarketRouter.sol\":1326:1348  token.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_59\n      swap1\n        /* \"MarketRouter.sol\":1326:1388  token.safeTransferFrom(msg.sender, address(this), totalAmount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_58:\n        /* \"MarketRouter.sol\":1427:1443  uint256 refunded */\n      0x00\n        /* \"MarketRouter.sol\":1446:1447  0 */\n      0x00\n        /* \"MarketRouter.sol\":1427:1447  uint256 refunded = 0 */\n      swap1\n      pop\n        /* \"MarketRouter.sol\":1460:1469  uint256 i */\n      0x00\n        /* \"MarketRouter.sol\":1472:1473  0 */\n      0x00\n        /* \"MarketRouter.sol\":1460:1473  uint256 i = 0 */\n      swap1\n      pop\n        /* \"MarketRouter.sol\":1455:1865  for (uint256 i = 0; i < bets.length; ) {... */\n    tag_60:\n        /* \"MarketRouter.sol\":1479:1483  bets */\n      dup6\n      dup6\n        /* \"MarketRouter.sol\":1479:1490  bets.length */\n      swap1\n      pop\n        /* \"MarketRouter.sol\":1475:1476  i */\n      dup2\n        /* \"MarketRouter.sol\":1475:1490  i < bets.length */\n      lt\n        /* \"MarketRouter.sol\":1455:1865  for (uint256 i = 0; i < bets.length; ) {... */\n      iszero\n      tag_61\n      jumpi\n        /* \"MarketRouter.sol\":1501:1520  BatchBet memory bet */\n      0x00\n        /* \"MarketRouter.sol\":1523:1527  bets */\n      dup7\n      dup7\n        /* \"MarketRouter.sol\":1528:1529  i */\n      dup4\n        /* \"MarketRouter.sol\":1523:1530  bets[i] */\n      dup2\n      dup2\n      lt\n      tag_63\n      jumpi\n      tag_64\n      tag_25\n      jump\t// in\n    tag_64:\n    tag_63:\n      swap1\n      pop\n      0x80\n      mul\n      add\n        /* \"MarketRouter.sol\":1501:1530  BatchBet memory bet = bets[i] */\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      swap1\n      pop\n        /* \"MarketRouter.sol\":1571:1613  token.forceApprove(bet.market, bet.amount) */\n      tag_67\n        /* \"MarketRouter.sol\":1590:1593  bet */\n      dup2\n        /* \"MarketRouter.sol\":1590:1600  bet.market */\n      0x00\n      add\n      mload\n        /* \"MarketRouter.sol\":1602:1605  bet */\n      dup3\n        /* \"MarketRouter.sol\":1602:1612  bet.amount */\n      0x60\n      add\n      mload\n        /* \"MarketRouter.sol\":1571:1576  token */\n      dup8\n        /* \"MarketRouter.sol\":1571:1589  token.forceApprove */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_68\n      swap1\n        /* \"MarketRouter.sol\":1571:1613  token.forceApprove(bet.market, bet.amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_67:\n        /* \"MarketRouter.sol\":1647:1650  bet */\n      dup1\n        /* \"MarketRouter.sol\":1647:1657  bet.market */\n      0x00\n      add\n      mload\n        /* \"MarketRouter.sol\":1630:1667  PredictionMarket(bet.market).placeBet */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe71c9697\n        /* \"MarketRouter.sol\":1668:1671  bet */\n      dup3\n        /* \"MarketRouter.sol\":1668:1680  bet.marketId */\n      0x20\n      add\n      mload\n        /* \"MarketRouter.sol\":1682:1685  bet */\n      dup4\n        /* \"MarketRouter.sol\":1682:1693  bet.outcome */\n      0x40\n      add\n      mload\n        /* \"MarketRouter.sol\":1695:1698  bet */\n      dup5\n        /* \"MarketRouter.sol\":1695:1705  bet.amount */\n      0x60\n      add\n      mload\n        /* \"MarketRouter.sol\":1630:1706  PredictionMarket(bet.market).placeBet(bet.marketId, bet.outcome, bet.amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_69\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_71\n      jumpi\n      revert(0x00, 0x00)\n    tag_71:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_72\n      jumpi\n      pop\n      0x01\n    tag_72:\n        /* \"MarketRouter.sol\":1626:1836  try PredictionMarket(bet.market).placeBet(bet.marketId, bet.outcome, bet.amount) {... */\n      tag_73\n      jumpi\n        /* \"MarketRouter.sol\":1765:1768  bet */\n      dup1\n        /* \"MarketRouter.sol\":1765:1775  bet.amount */\n      0x60\n      add\n      mload\n        /* \"MarketRouter.sol\":1753:1775  refunded += bet.amount */\n      dup4\n      tag_77\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_77:\n      swap3\n      pop\n        /* \"MarketRouter.sol\":1786:1828  token.safeTransfer(msg.sender, bet.amount) */\n      tag_78\n        /* \"MarketRouter.sol\":1805:1815  msg.sender */\n      caller\n        /* \"MarketRouter.sol\":1817:1820  bet */\n      dup3\n        /* \"MarketRouter.sol\":1817:1827  bet.amount */\n      0x60\n      add\n      mload\n        /* \"MarketRouter.sol\":1786:1791  token */\n      dup8\n        /* \"MarketRouter.sol\":1786:1804  token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_79\n      swap1\n        /* \"MarketRouter.sol\":1786:1828  token.safeTransfer(msg.sender, bet.amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_78:\n        /* \"MarketRouter.sol\":1626:1836  try PredictionMarket(bet.market).placeBet(bet.marketId, bet.outcome, bet.amount) {... */\n      jump(tag_80)\n    tag_73:\n    tag_80:\n        /* \"MarketRouter.sol\":1856:1859  i++ */\n      dup2\n      dup1\n      0x01\n      add\n      swap3\n      pop\n      pop\n        /* \"MarketRouter.sol\":1494:1865  {... */\n      pop\n        /* \"MarketRouter.sol\":1455:1865  for (uint256 i = 0; i < bets.length; ) {... */\n      jump(tag_60)\n    tag_61:\n      pop\n        /* \"MarketRouter.sol\":1907:1917  msg.sender */\n      caller\n        /* \"MarketRouter.sol\":1892:1955  BatchBetPlaced(msg.sender, totalAmount - refunded, bets.length) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfaa3f3b5e4bd3185bc059a2498b70867fd2b41976ecd9d924e19972a00a007ee\n        /* \"MarketRouter.sol\":1933:1941  refunded */\n      dup3\n        /* \"MarketRouter.sol\":1919:1930  totalAmount */\n      dup5\n        /* \"MarketRouter.sol\":1919:1941  totalAmount - refunded */\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n        /* \"MarketRouter.sol\":1943:1947  bets */\n      dup8\n      dup8\n        /* \"MarketRouter.sol\":1943:1954  bets.length */\n      swap1\n      pop\n        /* \"MarketRouter.sol\":1892:1955  BatchBetPlaced(msg.sender, totalAmount - refunded, bets.length) */\n      mload(0x40)\n      tag_83\n      swap3\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"MarketRouter.sol\":1040:1963  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_84\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_45\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_84:\n        /* \"MarketRouter.sol\":954:1963  function placeBatchBets(BatchBet[] calldata bets, IERC20 token) external nonReentrant {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_15:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_86\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_87\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_86:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_91\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1738:1743  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1765  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1778  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1781:1785  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1787:1789  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1791:1796  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_92\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1737  _callOptionalReturn */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_91:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5084:5464  function forceApprove(IERC20 token, address spender, uint256 value) internal {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5171:5196  bytes memory approvalCall */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5214:5219  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5214:5227  token.approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5230:5237  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5239:5244  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5199:5246  abi.encodeCall(token.approve, (spender, value)) */\n      add(0x24, mload(0x40))\n      tag_96\n      swap3\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5171:5246  bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5262:5306  _callOptionalReturnBool(token, approvalCall) */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5286:5291  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5293:5305  approvalCall */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5262:5285  _callOptionalReturnBool */\n      tag_99\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5262:5306  _callOptionalReturnBool(token, approvalCall) */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5257:5458  if (!_callOptionalReturnBool(token, approvalCall)) {... */\n      tag_100\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5322:5393  _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0))) */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5342:5347  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5364:5369  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5364:5377  token.approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5380:5387  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5389:5390  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5349:5392  abi.encodeCall(token.approve, (spender, 0)) */\n      add(0x24, mload(0x40))\n      tag_102\n      swap3\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5322:5341  _callOptionalReturn */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5322:5393  _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0))) */\n      jump\t// in\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5407:5447  _callOptionalReturn(token, approvalCall) */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5427:5432  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5434:5446  approvalCall */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5407:5426  _callOptionalReturn */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5407:5447  _callOptionalReturn(token, approvalCall) */\n      jump\t// in\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5257:5458  if (!_callOptionalReturnBool(token, approvalCall)) {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5161:5464  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5084:5464  function forceApprove(IERC20 token, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1321:1326  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1348  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1357  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1360:1362  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1364:1369  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_107\n      swap3\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1320  _callOptionalReturn */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8450:8468  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8478:8497  uint256 returnValue */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8616:8620  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8613:8614  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8606:8610  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8600:8611  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8593:8597  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8587:8591  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8583:8598  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8580:8581  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8573:8578  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8566:8571  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8561:8621  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8673:8680  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n      tag_109\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8717:8721  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8711:8722  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8762:8778  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8759:8760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8754:8757  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8739:8779  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8808:8824  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8803:8806  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8796:8825  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8866:8882  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8852:8882  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8916:8917  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8910:8918  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8895:8918  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8532:8928  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8956:8957  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8952  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8957  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_110\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9009:9010  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9005  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9010  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_111)\n    tag_110:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8990:8991  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8968:8973  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8986  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8991  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_112\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9066:9071  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8440:9090  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9592:10072  function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9675:9679  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9691:9703  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9713:9731  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9741:9760  uint256 returnValue */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9875:9879  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9872:9873  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9865:9869  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9859:9870  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9852:9856  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9846:9850  data */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9842:9857  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9839:9840  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9832:9837  token */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9825:9830  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9820:9880  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9809:9880  success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9907:9923  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9893:9923  returnSize := returndatasize() */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9957:9958  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9951:9959  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9936:9959  returnValue := mload(0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9985:9992  success */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9985:10065  success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1) */\n      dup1\n      iszero\n      tag_116\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":10011:10012  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9997:10007  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9997:10012  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9997:10064  returnSize == 0 ? address(token).code.length > 0 : returnValue == 1 */\n      tag_117\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":10063:10064  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":10048:10059  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":10048:10064  returnValue == 1 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9997:10064  returnSize == 0 ? address(token).code.length > 0 : returnValue == 1 */\n      jump(tag_118)\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":10044:10045  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":10023:10028  token */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":10015:10041  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":10015:10045  address(token).code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9997:10064  returnSize == 0 ? address(token).code.length > 0 : returnValue == 1 */\n    tag_118:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9985:10065  success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1) */\n    tag_116:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9978:10065  return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9592:10072  function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_119:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_120:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_121:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      0x00\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:451   */\n    tag_122:\n        /* \"#utility.yul\":443:444   */\n      0x00\n        /* \"#utility.yul\":440:441   */\n      0x00\n        /* \"#utility.yul\":433:445   */\n      revert\n        /* \"#utility.yul\":457:574   */\n    tag_123:\n        /* \"#utility.yul\":566:567   */\n      0x00\n        /* \"#utility.yul\":563:564   */\n      0x00\n        /* \"#utility.yul\":556:568   */\n      revert\n        /* \"#utility.yul\":580:697   */\n    tag_124:\n        /* \"#utility.yul\":689:690   */\n      0x00\n        /* \"#utility.yul\":686:687   */\n      0x00\n        /* \"#utility.yul\":679:691   */\n      revert\n        /* \"#utility.yul\":743:1340   */\n    tag_125:\n        /* \"#utility.yul\":845:853   */\n      0x00\n        /* \"#utility.yul\":855:861   */\n      0x00\n        /* \"#utility.yul\":905:908   */\n      dup4\n        /* \"#utility.yul\":898:902   */\n      0x1f\n        /* \"#utility.yul\":890:896   */\n      dup5\n        /* \"#utility.yul\":886:903   */\n      add\n        /* \"#utility.yul\":882:909   */\n      slt\n        /* \"#utility.yul\":872:994   */\n      tag_168\n      jumpi\n        /* \"#utility.yul\":913:992   */\n      tag_169\n      tag_122\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":872:994   */\n    tag_168:\n        /* \"#utility.yul\":1026:1032   */\n      dup3\n        /* \"#utility.yul\":1013:1033   */\n      calldataload\n        /* \"#utility.yul\":1003:1033   */\n      swap1\n      pop\n        /* \"#utility.yul\":1056:1074   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1048:1054   */\n      dup2\n        /* \"#utility.yul\":1045:1075   */\n      gt\n        /* \"#utility.yul\":1042:1159   */\n      iszero\n      tag_170\n      jumpi\n        /* \"#utility.yul\":1078:1157   */\n      tag_171\n      tag_123\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":1042:1159   */\n    tag_170:\n        /* \"#utility.yul\":1192:1196   */\n      0x20\n        /* \"#utility.yul\":1184:1190   */\n      dup4\n        /* \"#utility.yul\":1180:1197   */\n      add\n        /* \"#utility.yul\":1168:1197   */\n      swap2\n      pop\n        /* \"#utility.yul\":1246:1249   */\n      dup4\n        /* \"#utility.yul\":1238:1242   */\n      0x40\n        /* \"#utility.yul\":1230:1236   */\n      dup3\n        /* \"#utility.yul\":1226:1243   */\n      mul\n        /* \"#utility.yul\":1216:1224   */\n      dup4\n        /* \"#utility.yul\":1212:1244   */\n      add\n        /* \"#utility.yul\":1209:1250   */\n      gt\n        /* \"#utility.yul\":1206:1334   */\n      iszero\n      tag_172\n      jumpi\n        /* \"#utility.yul\":1253:1332   */\n      tag_173\n      tag_124\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":1206:1334   */\n    tag_172:\n        /* \"#utility.yul\":743:1340   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1346:1963   */\n    tag_7:\n        /* \"#utility.yul\":1461:1467   */\n      0x00\n        /* \"#utility.yul\":1469:1475   */\n      0x00\n        /* \"#utility.yul\":1518:1520   */\n      0x20\n        /* \"#utility.yul\":1506:1515   */\n      dup4\n        /* \"#utility.yul\":1497:1504   */\n      dup6\n        /* \"#utility.yul\":1493:1516   */\n      sub\n        /* \"#utility.yul\":1489:1521   */\n      slt\n        /* \"#utility.yul\":1486:1605   */\n      iszero\n      tag_175\n      jumpi\n        /* \"#utility.yul\":1524:1603   */\n      tag_176\n      tag_120\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":1486:1605   */\n    tag_175:\n        /* \"#utility.yul\":1672:1673   */\n      0x00\n        /* \"#utility.yul\":1661:1670   */\n      dup4\n        /* \"#utility.yul\":1657:1674   */\n      add\n        /* \"#utility.yul\":1644:1675   */\n      calldataload\n        /* \"#utility.yul\":1702:1720   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1694:1700   */\n      dup2\n        /* \"#utility.yul\":1691:1721   */\n      gt\n        /* \"#utility.yul\":1688:1805   */\n      iszero\n      tag_177\n      jumpi\n        /* \"#utility.yul\":1724:1803   */\n      tag_178\n      tag_121\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":1688:1805   */\n    tag_177:\n        /* \"#utility.yul\":1837:1946   */\n      tag_179\n        /* \"#utility.yul\":1938:1945   */\n      dup6\n        /* \"#utility.yul\":1929:1935   */\n      dup3\n        /* \"#utility.yul\":1918:1927   */\n      dup7\n        /* \"#utility.yul\":1914:1936   */\n      add\n        /* \"#utility.yul\":1837:1946   */\n      tag_125\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":1819:1946   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":1615:1956   */\n      pop\n        /* \"#utility.yul\":1346:1963   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2007:2602   */\n    tag_126:\n        /* \"#utility.yul\":2107:2115   */\n      0x00\n        /* \"#utility.yul\":2117:2123   */\n      0x00\n        /* \"#utility.yul\":2167:2170   */\n      dup4\n        /* \"#utility.yul\":2160:2164   */\n      0x1f\n        /* \"#utility.yul\":2152:2158   */\n      dup5\n        /* \"#utility.yul\":2148:2165   */\n      add\n        /* \"#utility.yul\":2144:2171   */\n      slt\n        /* \"#utility.yul\":2134:2256   */\n      tag_181\n      jumpi\n        /* \"#utility.yul\":2175:2254   */\n      tag_182\n      tag_122\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":2134:2256   */\n    tag_181:\n        /* \"#utility.yul\":2288:2294   */\n      dup3\n        /* \"#utility.yul\":2275:2295   */\n      calldataload\n        /* \"#utility.yul\":2265:2295   */\n      swap1\n      pop\n        /* \"#utility.yul\":2318:2336   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2310:2316   */\n      dup2\n        /* \"#utility.yul\":2307:2337   */\n      gt\n        /* \"#utility.yul\":2304:2421   */\n      iszero\n      tag_183\n      jumpi\n        /* \"#utility.yul\":2340:2419   */\n      tag_184\n      tag_123\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":2304:2421   */\n    tag_183:\n        /* \"#utility.yul\":2454:2458   */\n      0x20\n        /* \"#utility.yul\":2446:2452   */\n      dup4\n        /* \"#utility.yul\":2442:2459   */\n      add\n        /* \"#utility.yul\":2430:2459   */\n      swap2\n      pop\n        /* \"#utility.yul\":2508:2511   */\n      dup4\n        /* \"#utility.yul\":2500:2504   */\n      0x80\n        /* \"#utility.yul\":2492:2498   */\n      dup3\n        /* \"#utility.yul\":2488:2505   */\n      mul\n        /* \"#utility.yul\":2478:2486   */\n      dup4\n        /* \"#utility.yul\":2474:2506   */\n      add\n        /* \"#utility.yul\":2471:2512   */\n      gt\n        /* \"#utility.yul\":2468:2596   */\n      iszero\n      tag_185\n      jumpi\n        /* \"#utility.yul\":2515:2594   */\n      tag_186\n      tag_124\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":2468:2596   */\n    tag_185:\n        /* \"#utility.yul\":2007:2602   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2608:2734   */\n    tag_127:\n        /* \"#utility.yul\":2645:2652   */\n      0x00\n        /* \"#utility.yul\":2685:2727   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2678:2683   */\n      dup3\n        /* \"#utility.yul\":2674:2728   */\n      and\n        /* \"#utility.yul\":2663:2728   */\n      swap1\n      pop\n        /* \"#utility.yul\":2608:2734   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2740:2836   */\n    tag_128:\n        /* \"#utility.yul\":2777:2784   */\n      0x00\n        /* \"#utility.yul\":2806:2830   */\n      tag_189\n        /* \"#utility.yul\":2824:2829   */\n      dup3\n        /* \"#utility.yul\":2806:2830   */\n      tag_127\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":2795:2830   */\n      swap1\n      pop\n        /* \"#utility.yul\":2740:2836   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2842:2952   */\n    tag_129:\n        /* \"#utility.yul\":2893:2900   */\n      0x00\n        /* \"#utility.yul\":2922:2946   */\n      tag_191\n        /* \"#utility.yul\":2940:2945   */\n      dup3\n        /* \"#utility.yul\":2922:2946   */\n      tag_128\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":2911:2946   */\n      swap1\n      pop\n        /* \"#utility.yul\":2842:2952   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2958:3108   */\n    tag_130:\n        /* \"#utility.yul\":3045:3083   */\n      tag_193\n        /* \"#utility.yul\":3077:3082   */\n      dup2\n        /* \"#utility.yul\":3045:3083   */\n      tag_129\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":3038:3043   */\n      dup2\n        /* \"#utility.yul\":3035:3084   */\n      eq\n        /* \"#utility.yul\":3025:3102   */\n      tag_194\n      jumpi\n        /* \"#utility.yul\":3098:3099   */\n      0x00\n        /* \"#utility.yul\":3095:3096   */\n      0x00\n        /* \"#utility.yul\":3088:3100   */\n      revert\n        /* \"#utility.yul\":3025:3102   */\n    tag_194:\n        /* \"#utility.yul\":2958:3108   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3114:3281   */\n    tag_131:\n        /* \"#utility.yul\":3174:3179   */\n      0x00\n        /* \"#utility.yul\":3212:3218   */\n      dup2\n        /* \"#utility.yul\":3199:3219   */\n      calldataload\n        /* \"#utility.yul\":3190:3219   */\n      swap1\n      pop\n        /* \"#utility.yul\":3228:3275   */\n      tag_196\n        /* \"#utility.yul\":3269:3274   */\n      dup2\n        /* \"#utility.yul\":3228:3275   */\n      tag_130\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":3114:3281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3287:4073   */\n    tag_11:\n        /* \"#utility.yul\":3423:3429   */\n      0x00\n        /* \"#utility.yul\":3431:3437   */\n      0x00\n        /* \"#utility.yul\":3439:3445   */\n      0x00\n        /* \"#utility.yul\":3488:3490   */\n      0x40\n        /* \"#utility.yul\":3476:3485   */\n      dup5\n        /* \"#utility.yul\":3467:3474   */\n      dup7\n        /* \"#utility.yul\":3463:3486   */\n      sub\n        /* \"#utility.yul\":3459:3491   */\n      slt\n        /* \"#utility.yul\":3456:3575   */\n      iszero\n      tag_198\n      jumpi\n        /* \"#utility.yul\":3494:3573   */\n      tag_199\n      tag_120\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":3456:3575   */\n    tag_198:\n        /* \"#utility.yul\":3642:3643   */\n      0x00\n        /* \"#utility.yul\":3631:3640   */\n      dup5\n        /* \"#utility.yul\":3627:3644   */\n      add\n        /* \"#utility.yul\":3614:3645   */\n      calldataload\n        /* \"#utility.yul\":3672:3690   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3664:3670   */\n      dup2\n        /* \"#utility.yul\":3661:3691   */\n      gt\n        /* \"#utility.yul\":3658:3775   */\n      iszero\n      tag_200\n      jumpi\n        /* \"#utility.yul\":3694:3773   */\n      tag_201\n      tag_121\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":3658:3775   */\n    tag_200:\n        /* \"#utility.yul\":3807:3914   */\n      tag_202\n        /* \"#utility.yul\":3906:3913   */\n      dup7\n        /* \"#utility.yul\":3897:3903   */\n      dup3\n        /* \"#utility.yul\":3886:3895   */\n      dup8\n        /* \"#utility.yul\":3882:3904   */\n      add\n        /* \"#utility.yul\":3807:3914   */\n      tag_126\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":3789:3914   */\n      swap4\n      pop\n      swap4\n      pop\n        /* \"#utility.yul\":3585:3924   */\n      pop\n        /* \"#utility.yul\":3963:3965   */\n      0x20\n        /* \"#utility.yul\":3989:4056   */\n      tag_203\n        /* \"#utility.yul\":4048:4055   */\n      dup7\n        /* \"#utility.yul\":4039:4045   */\n      dup3\n        /* \"#utility.yul\":4028:4037   */\n      dup8\n        /* \"#utility.yul\":4024:4046   */\n      add\n        /* \"#utility.yul\":3989:4056   */\n      tag_131\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":3979:4056   */\n      swap2\n      pop\n        /* \"#utility.yul\":3934:4066   */\n      pop\n        /* \"#utility.yul\":3287:4073   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4079:4248   */\n    tag_132:\n        /* \"#utility.yul\":4163:4174   */\n      0x00\n        /* \"#utility.yul\":4197:4203   */\n      dup3\n        /* \"#utility.yul\":4192:4195   */\n      dup3\n        /* \"#utility.yul\":4185:4204   */\n      mstore\n        /* \"#utility.yul\":4237:4241   */\n      0x20\n        /* \"#utility.yul\":4232:4235   */\n      dup3\n        /* \"#utility.yul\":4228:4242   */\n      add\n        /* \"#utility.yul\":4213:4242   */\n      swap1\n      pop\n        /* \"#utility.yul\":4079:4248   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4254:4422   */\n    tag_133:\n        /* \"#utility.yul\":4394:4414   */\n      0x4e6f20636c61696d732070726f76696465640000000000000000000000000000\n        /* \"#utility.yul\":4390:4391   */\n      0x00\n        /* \"#utility.yul\":4382:4388   */\n      dup3\n        /* \"#utility.yul\":4378:4392   */\n      add\n        /* \"#utility.yul\":4371:4415   */\n      mstore\n        /* \"#utility.yul\":4254:4422   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4428:4794   */\n    tag_134:\n        /* \"#utility.yul\":4570:4573   */\n      0x00\n        /* \"#utility.yul\":4591:4658   */\n      tag_207\n        /* \"#utility.yul\":4655:4657   */\n      0x12\n        /* \"#utility.yul\":4650:4653   */\n      dup4\n        /* \"#utility.yul\":4591:4658   */\n      tag_132\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":4584:4658   */\n      swap2\n      pop\n        /* \"#utility.yul\":4667:4760   */\n      tag_208\n        /* \"#utility.yul\":4756:4759   */\n      dup3\n        /* \"#utility.yul\":4667:4760   */\n      tag_133\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":4785:4787   */\n      0x20\n        /* \"#utility.yul\":4780:4783   */\n      dup3\n        /* \"#utility.yul\":4776:4788   */\n      add\n        /* \"#utility.yul\":4769:4788   */\n      swap1\n      pop\n        /* \"#utility.yul\":4428:4794   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4800:5219   */\n    tag_19:\n        /* \"#utility.yul\":4966:4970   */\n      0x00\n        /* \"#utility.yul\":5004:5006   */\n      0x20\n        /* \"#utility.yul\":4993:5002   */\n      dup3\n        /* \"#utility.yul\":4989:5007   */\n      add\n        /* \"#utility.yul\":4981:5007   */\n      swap1\n      pop\n        /* \"#utility.yul\":5053:5062   */\n      dup2\n        /* \"#utility.yul\":5047:5051   */\n      dup2\n        /* \"#utility.yul\":5043:5063   */\n      sub\n        /* \"#utility.yul\":5039:5040   */\n      0x00\n        /* \"#utility.yul\":5028:5037   */\n      dup4\n        /* \"#utility.yul\":5024:5041   */\n      add\n        /* \"#utility.yul\":5017:5064   */\n      mstore\n        /* \"#utility.yul\":5081:5212   */\n      tag_210\n        /* \"#utility.yul\":5207:5211   */\n      dup2\n        /* \"#utility.yul\":5081:5212   */\n      tag_134\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":5073:5212   */\n      swap1\n      pop\n        /* \"#utility.yul\":4800:5219   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5225:5405   */\n    tag_25:\n        /* \"#utility.yul\":5273:5350   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5270:5271   */\n      0x00\n        /* \"#utility.yul\":5263:5351   */\n      mstore\n        /* \"#utility.yul\":5370:5374   */\n      0x32\n        /* \"#utility.yul\":5367:5368   */\n      0x04\n        /* \"#utility.yul\":5360:5375   */\n      mstore\n        /* \"#utility.yul\":5394:5398   */\n      0x24\n        /* \"#utility.yul\":5391:5392   */\n      0x00\n        /* \"#utility.yul\":5384:5399   */\n      revert\n        /* \"#utility.yul\":5411:5528   */\n    tag_135:\n        /* \"#utility.yul\":5520:5521   */\n      0x00\n        /* \"#utility.yul\":5517:5518   */\n      0x00\n        /* \"#utility.yul\":5510:5522   */\n      revert\n        /* \"#utility.yul\":5534:5636   */\n    tag_136:\n        /* \"#utility.yul\":5575:5581   */\n      0x00\n        /* \"#utility.yul\":5626:5628   */\n      0x1f\n        /* \"#utility.yul\":5622:5629   */\n      not\n        /* \"#utility.yul\":5617:5619   */\n      0x1f\n        /* \"#utility.yul\":5610:5615   */\n      dup4\n        /* \"#utility.yul\":5606:5620   */\n      add\n        /* \"#utility.yul\":5602:5630   */\n      and\n        /* \"#utility.yul\":5592:5630   */\n      swap1\n      pop\n        /* \"#utility.yul\":5534:5636   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5642:5822   */\n    tag_137:\n        /* \"#utility.yul\":5690:5767   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5687:5688   */\n      0x00\n        /* \"#utility.yul\":5680:5768   */\n      mstore\n        /* \"#utility.yul\":5787:5791   */\n      0x41\n        /* \"#utility.yul\":5784:5785   */\n      0x04\n        /* \"#utility.yul\":5777:5792   */\n      mstore\n        /* \"#utility.yul\":5811:5815   */\n      0x24\n        /* \"#utility.yul\":5808:5809   */\n      0x00\n        /* \"#utility.yul\":5801:5816   */\n      revert\n        /* \"#utility.yul\":5828:6109   */\n    tag_138:\n        /* \"#utility.yul\":5911:5938   */\n      tag_216\n        /* \"#utility.yul\":5933:5937   */\n      dup3\n        /* \"#utility.yul\":5911:5938   */\n      tag_136\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":5903:5909   */\n      dup2\n        /* \"#utility.yul\":5899:5939   */\n      add\n        /* \"#utility.yul\":6041:6047   */\n      dup2\n        /* \"#utility.yul\":6029:6039   */\n      dup2\n        /* \"#utility.yul\":6026:6048   */\n      lt\n        /* \"#utility.yul\":6005:6023   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5993:6003   */\n      dup3\n        /* \"#utility.yul\":5990:6024   */\n      gt\n        /* \"#utility.yul\":5987:6049   */\n      or\n        /* \"#utility.yul\":5984:6072   */\n      iszero\n      tag_217\n      jumpi\n        /* \"#utility.yul\":6052:6070   */\n      tag_218\n      tag_137\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":5984:6072   */\n    tag_217:\n        /* \"#utility.yul\":6092:6102   */\n      dup1\n        /* \"#utility.yul\":6088:6090   */\n      0x40\n        /* \"#utility.yul\":6081:6103   */\n      mstore\n        /* \"#utility.yul\":5871:6109   */\n      pop\n        /* \"#utility.yul\":5828:6109   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6115:6244   */\n    tag_139:\n        /* \"#utility.yul\":6149:6155   */\n      0x00\n        /* \"#utility.yul\":6176:6196   */\n      tag_220\n      tag_119\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":6166:6196   */\n      swap1\n      pop\n        /* \"#utility.yul\":6205:6238   */\n      tag_221\n        /* \"#utility.yul\":6233:6237   */\n      dup3\n        /* \"#utility.yul\":6225:6231   */\n      dup3\n        /* \"#utility.yul\":6205:6238   */\n      tag_138\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":6115:6244   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6373:6495   */\n    tag_141:\n        /* \"#utility.yul\":6446:6470   */\n      tag_224\n        /* \"#utility.yul\":6464:6469   */\n      dup2\n        /* \"#utility.yul\":6446:6470   */\n      tag_128\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":6439:6444   */\n      dup2\n        /* \"#utility.yul\":6436:6471   */\n      eq\n        /* \"#utility.yul\":6426:6489   */\n      tag_225\n      jumpi\n        /* \"#utility.yul\":6485:6486   */\n      0x00\n        /* \"#utility.yul\":6482:6483   */\n      0x00\n        /* \"#utility.yul\":6475:6487   */\n      revert\n        /* \"#utility.yul\":6426:6489   */\n    tag_225:\n        /* \"#utility.yul\":6373:6495   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6501:6640   */\n    tag_142:\n        /* \"#utility.yul\":6547:6552   */\n      0x00\n        /* \"#utility.yul\":6585:6591   */\n      dup2\n        /* \"#utility.yul\":6572:6592   */\n      calldataload\n        /* \"#utility.yul\":6563:6592   */\n      swap1\n      pop\n        /* \"#utility.yul\":6601:6634   */\n      tag_227\n        /* \"#utility.yul\":6628:6633   */\n      dup2\n        /* \"#utility.yul\":6601:6634   */\n      tag_141\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":6501:6640   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6646:6723   */\n    tag_143:\n        /* \"#utility.yul\":6683:6690   */\n      0x00\n        /* \"#utility.yul\":6712:6717   */\n      dup2\n        /* \"#utility.yul\":6701:6717   */\n      swap1\n      pop\n        /* \"#utility.yul\":6646:6723   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6729:6851   */\n    tag_144:\n        /* \"#utility.yul\":6802:6826   */\n      tag_230\n        /* \"#utility.yul\":6820:6825   */\n      dup2\n        /* \"#utility.yul\":6802:6826   */\n      tag_143\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":6795:6800   */\n      dup2\n        /* \"#utility.yul\":6792:6827   */\n      eq\n        /* \"#utility.yul\":6782:6845   */\n      tag_231\n      jumpi\n        /* \"#utility.yul\":6841:6842   */\n      0x00\n        /* \"#utility.yul\":6838:6839   */\n      0x00\n        /* \"#utility.yul\":6831:6843   */\n      revert\n        /* \"#utility.yul\":6782:6845   */\n    tag_231:\n        /* \"#utility.yul\":6729:6851   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6857:6996   */\n    tag_145:\n        /* \"#utility.yul\":6903:6908   */\n      0x00\n        /* \"#utility.yul\":6941:6947   */\n      dup2\n        /* \"#utility.yul\":6928:6948   */\n      calldataload\n        /* \"#utility.yul\":6919:6948   */\n      swap1\n      pop\n        /* \"#utility.yul\":6957:6990   */\n      tag_233\n        /* \"#utility.yul\":6984:6989   */\n      dup2\n        /* \"#utility.yul\":6957:6990   */\n      tag_144\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":6857:6996   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7040:7622   */\n    tag_146:\n        /* \"#utility.yul\":7116:7121   */\n      0x00\n        /* \"#utility.yul\":7160:7164   */\n      0x40\n        /* \"#utility.yul\":7148:7157   */\n      dup3\n        /* \"#utility.yul\":7143:7146   */\n      dup5\n        /* \"#utility.yul\":7139:7158   */\n      sub\n        /* \"#utility.yul\":7135:7165   */\n      slt\n        /* \"#utility.yul\":7132:7249   */\n      iszero\n      tag_235\n      jumpi\n        /* \"#utility.yul\":7168:7247   */\n      tag_236\n      tag_135\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":7132:7249   */\n    tag_235:\n        /* \"#utility.yul\":7267:7288   */\n      tag_237\n        /* \"#utility.yul\":7283:7287   */\n      0x40\n        /* \"#utility.yul\":7267:7288   */\n      tag_139\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":7258:7288   */\n      swap1\n      pop\n        /* \"#utility.yul\":7349:7350   */\n      0x00\n        /* \"#utility.yul\":7389:7438   */\n      tag_238\n        /* \"#utility.yul\":7434:7437   */\n      dup5\n        /* \"#utility.yul\":7425:7431   */\n      dup3\n        /* \"#utility.yul\":7414:7423   */\n      dup6\n        /* \"#utility.yul\":7410:7432   */\n      add\n        /* \"#utility.yul\":7389:7438   */\n      tag_142\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":7382:7386   */\n      0x00\n        /* \"#utility.yul\":7375:7380   */\n      dup4\n        /* \"#utility.yul\":7371:7387   */\n      add\n        /* \"#utility.yul\":7364:7439   */\n      mstore\n        /* \"#utility.yul\":7298:7450   */\n      pop\n        /* \"#utility.yul\":7513:7515   */\n      0x20\n        /* \"#utility.yul\":7554:7603   */\n      tag_239\n        /* \"#utility.yul\":7599:7602   */\n      dup5\n        /* \"#utility.yul\":7590:7596   */\n      dup3\n        /* \"#utility.yul\":7579:7588   */\n      dup6\n        /* \"#utility.yul\":7575:7597   */\n      add\n        /* \"#utility.yul\":7554:7603   */\n      tag_145\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":7547:7551   */\n      0x20\n        /* \"#utility.yul\":7540:7545   */\n      dup4\n        /* \"#utility.yul\":7536:7552   */\n      add\n        /* \"#utility.yul\":7529:7604   */\n      mstore\n        /* \"#utility.yul\":7460:7615   */\n      pop\n        /* \"#utility.yul\":7040:7622   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7628:8011   */\n    tag_27:\n        /* \"#utility.yul\":7714:7720   */\n      0x00\n        /* \"#utility.yul\":7763:7765   */\n      0x40\n        /* \"#utility.yul\":7751:7760   */\n      dup3\n        /* \"#utility.yul\":7742:7749   */\n      dup5\n        /* \"#utility.yul\":7738:7761   */\n      sub\n        /* \"#utility.yul\":7734:7766   */\n      slt\n        /* \"#utility.yul\":7731:7850   */\n      iszero\n      tag_241\n      jumpi\n        /* \"#utility.yul\":7769:7848   */\n      tag_242\n      tag_120\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":7731:7850   */\n    tag_241:\n        /* \"#utility.yul\":7889:7890   */\n      0x00\n        /* \"#utility.yul\":7914:7994   */\n      tag_243\n        /* \"#utility.yul\":7986:7993   */\n      dup5\n        /* \"#utility.yul\":7977:7983   */\n      dup3\n        /* \"#utility.yul\":7966:7975   */\n      dup6\n        /* \"#utility.yul\":7962:7984   */\n      add\n        /* \"#utility.yul\":7914:7994   */\n      tag_146\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":7904:7994   */\n      swap2\n      pop\n        /* \"#utility.yul\":7860:8004   */\n      pop\n        /* \"#utility.yul\":7628:8011   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8017:8135   */\n    tag_147:\n        /* \"#utility.yul\":8104:8128   */\n      tag_245\n        /* \"#utility.yul\":8122:8127   */\n      dup2\n        /* \"#utility.yul\":8104:8128   */\n      tag_143\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":8099:8102   */\n      dup3\n        /* \"#utility.yul\":8092:8129   */\n      mstore\n        /* \"#utility.yul\":8017:8135   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8141:8363   */\n    tag_29:\n        /* \"#utility.yul\":8234:8238   */\n      0x00\n        /* \"#utility.yul\":8272:8274   */\n      0x20\n        /* \"#utility.yul\":8261:8270   */\n      dup3\n        /* \"#utility.yul\":8257:8275   */\n      add\n        /* \"#utility.yul\":8249:8275   */\n      swap1\n      pop\n        /* \"#utility.yul\":8285:8356   */\n      tag_247\n        /* \"#utility.yul\":8353:8354   */\n      0x00\n        /* \"#utility.yul\":8342:8351   */\n      dup4\n        /* \"#utility.yul\":8338:8355   */\n      add\n        /* \"#utility.yul\":8329:8335   */\n      dup5\n        /* \"#utility.yul\":8285:8356   */\n      tag_147\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":8141:8363   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8369:8512   */\n    tag_148:\n        /* \"#utility.yul\":8426:8431   */\n      0x00\n        /* \"#utility.yul\":8457:8463   */\n      dup2\n        /* \"#utility.yul\":8451:8464   */\n      mload\n        /* \"#utility.yul\":8442:8464   */\n      swap1\n      pop\n        /* \"#utility.yul\":8473:8506   */\n      tag_249\n        /* \"#utility.yul\":8500:8505   */\n      dup2\n        /* \"#utility.yul\":8473:8506   */\n      tag_144\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":8369:8512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8518:8869   */\n    tag_32:\n        /* \"#utility.yul\":8588:8594   */\n      0x00\n        /* \"#utility.yul\":8637:8639   */\n      0x20\n        /* \"#utility.yul\":8625:8634   */\n      dup3\n        /* \"#utility.yul\":8616:8623   */\n      dup5\n        /* \"#utility.yul\":8612:8635   */\n      sub\n        /* \"#utility.yul\":8608:8640   */\n      slt\n        /* \"#utility.yul\":8605:8724   */\n      iszero\n      tag_251\n      jumpi\n        /* \"#utility.yul\":8643:8722   */\n      tag_252\n      tag_120\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":8605:8724   */\n    tag_251:\n        /* \"#utility.yul\":8763:8764   */\n      0x00\n        /* \"#utility.yul\":8788:8852   */\n      tag_253\n        /* \"#utility.yul\":8844:8851   */\n      dup5\n        /* \"#utility.yul\":8835:8841   */\n      dup3\n        /* \"#utility.yul\":8824:8833   */\n      dup6\n        /* \"#utility.yul\":8820:8842   */\n      add\n        /* \"#utility.yul\":8788:8852   */\n      tag_148\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":8778:8852   */\n      swap2\n      pop\n        /* \"#utility.yul\":8734:8862   */\n      pop\n        /* \"#utility.yul\":8518:8869   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8875:9055   */\n    tag_149:\n        /* \"#utility.yul\":8923:9000   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8920:8921   */\n      0x00\n        /* \"#utility.yul\":8913:9001   */\n      mstore\n        /* \"#utility.yul\":9020:9024   */\n      0x11\n        /* \"#utility.yul\":9017:9018   */\n      0x04\n        /* \"#utility.yul\":9010:9025   */\n      mstore\n        /* \"#utility.yul\":9044:9048   */\n      0x24\n        /* \"#utility.yul\":9041:9042   */\n      0x00\n        /* \"#utility.yul\":9034:9049   */\n      revert\n        /* \"#utility.yul\":9061:9252   */\n    tag_39:\n        /* \"#utility.yul\":9101:9104   */\n      0x00\n        /* \"#utility.yul\":9120:9140   */\n      tag_256\n        /* \"#utility.yul\":9138:9139   */\n      dup3\n        /* \"#utility.yul\":9120:9140   */\n      tag_143\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":9115:9140   */\n      swap2\n      pop\n        /* \"#utility.yul\":9154:9174   */\n      tag_257\n        /* \"#utility.yul\":9172:9173   */\n      dup4\n        /* \"#utility.yul\":9154:9174   */\n      tag_143\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":9149:9174   */\n      swap3\n      pop\n        /* \"#utility.yul\":9197:9198   */\n      dup3\n        /* \"#utility.yul\":9194:9195   */\n      dup3\n        /* \"#utility.yul\":9190:9199   */\n      add\n        /* \"#utility.yul\":9183:9199   */\n      swap1\n      pop\n        /* \"#utility.yul\":9218:9221   */\n      dup1\n        /* \"#utility.yul\":9215:9216   */\n      dup3\n        /* \"#utility.yul\":9212:9222   */\n      gt\n        /* \"#utility.yul\":9209:9245   */\n      iszero\n      tag_258\n      jumpi\n        /* \"#utility.yul\":9225:9243   */\n      tag_259\n      tag_149\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":9209:9245   */\n    tag_258:\n        /* \"#utility.yul\":9061:9252   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9258:9491   */\n    tag_41:\n        /* \"#utility.yul\":9297:9300   */\n      0x00\n        /* \"#utility.yul\":9320:9344   */\n      tag_261\n        /* \"#utility.yul\":9338:9343   */\n      dup3\n        /* \"#utility.yul\":9320:9344   */\n      tag_143\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":9311:9344   */\n      swap2\n      pop\n        /* \"#utility.yul\":9366:9432   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":9359:9364   */\n      dup3\n        /* \"#utility.yul\":9356:9433   */\n      sub\n        /* \"#utility.yul\":9353:9456   */\n      tag_262\n      jumpi\n        /* \"#utility.yul\":9436:9454   */\n      tag_263\n      tag_149\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":9353:9456   */\n    tag_262:\n        /* \"#utility.yul\":9483:9484   */\n      0x01\n        /* \"#utility.yul\":9476:9481   */\n      dup3\n        /* \"#utility.yul\":9472:9485   */\n      add\n        /* \"#utility.yul\":9465:9485   */\n      swap1\n      pop\n        /* \"#utility.yul\":9258:9491   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9497:9829   */\n    tag_43:\n        /* \"#utility.yul\":9618:9622   */\n      0x00\n        /* \"#utility.yul\":9656:9658   */\n      0x40\n        /* \"#utility.yul\":9645:9654   */\n      dup3\n        /* \"#utility.yul\":9641:9659   */\n      add\n        /* \"#utility.yul\":9633:9659   */\n      swap1\n      pop\n        /* \"#utility.yul\":9669:9740   */\n      tag_265\n        /* \"#utility.yul\":9737:9738   */\n      0x00\n        /* \"#utility.yul\":9726:9735   */\n      dup4\n        /* \"#utility.yul\":9722:9739   */\n      add\n        /* \"#utility.yul\":9713:9719   */\n      dup6\n        /* \"#utility.yul\":9669:9740   */\n      tag_147\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":9750:9822   */\n      tag_266\n        /* \"#utility.yul\":9818:9820   */\n      0x20\n        /* \"#utility.yul\":9807:9816   */\n      dup4\n        /* \"#utility.yul\":9803:9821   */\n      add\n        /* \"#utility.yul\":9794:9800   */\n      dup5\n        /* \"#utility.yul\":9750:9822   */\n      tag_147\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":9497:9829   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9835:10001   */\n    tag_150:\n        /* \"#utility.yul\":9975:9993   */\n      0x4e6f20626574732070726f766964656400000000000000000000000000000000\n        /* \"#utility.yul\":9971:9972   */\n      0x00\n        /* \"#utility.yul\":9963:9969   */\n      dup3\n        /* \"#utility.yul\":9959:9973   */\n      add\n        /* \"#utility.yul\":9952:9994   */\n      mstore\n        /* \"#utility.yul\":9835:10001   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10007:10373   */\n    tag_151:\n        /* \"#utility.yul\":10149:10152   */\n      0x00\n        /* \"#utility.yul\":10170:10237   */\n      tag_269\n        /* \"#utility.yul\":10234:10236   */\n      0x10\n        /* \"#utility.yul\":10229:10232   */\n      dup4\n        /* \"#utility.yul\":10170:10237   */\n      tag_132\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":10163:10237   */\n      swap2\n      pop\n        /* \"#utility.yul\":10246:10339   */\n      tag_270\n        /* \"#utility.yul\":10335:10338   */\n      dup3\n        /* \"#utility.yul\":10246:10339   */\n      tag_150\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":10364:10366   */\n      0x20\n        /* \"#utility.yul\":10359:10362   */\n      dup3\n        /* \"#utility.yul\":10355:10367   */\n      add\n        /* \"#utility.yul\":10348:10367   */\n      swap1\n      pop\n        /* \"#utility.yul\":10007:10373   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10379:10798   */\n    tag_51:\n        /* \"#utility.yul\":10545:10549   */\n      0x00\n        /* \"#utility.yul\":10583:10585   */\n      0x20\n        /* \"#utility.yul\":10572:10581   */\n      dup3\n        /* \"#utility.yul\":10568:10586   */\n      add\n        /* \"#utility.yul\":10560:10586   */\n      swap1\n      pop\n        /* \"#utility.yul\":10632:10641   */\n      dup2\n        /* \"#utility.yul\":10626:10630   */\n      dup2\n        /* \"#utility.yul\":10622:10642   */\n      sub\n        /* \"#utility.yul\":10618:10619   */\n      0x00\n        /* \"#utility.yul\":10607:10616   */\n      dup4\n        /* \"#utility.yul\":10603:10620   */\n      add\n        /* \"#utility.yul\":10596:10643   */\n      mstore\n        /* \"#utility.yul\":10660:10791   */\n      tag_272\n        /* \"#utility.yul\":10786:10790   */\n      dup2\n        /* \"#utility.yul\":10660:10791   */\n      tag_151\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":10652:10791   */\n      swap1\n      pop\n        /* \"#utility.yul\":10379:10798   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10840:11747   */\n    tag_152:\n        /* \"#utility.yul\":10914:10919   */\n      0x00\n        /* \"#utility.yul\":10958:10962   */\n      0x80\n        /* \"#utility.yul\":10946:10955   */\n      dup3\n        /* \"#utility.yul\":10941:10944   */\n      dup5\n        /* \"#utility.yul\":10937:10956   */\n      sub\n        /* \"#utility.yul\":10933:10963   */\n      slt\n        /* \"#utility.yul\":10930:11047   */\n      iszero\n      tag_274\n      jumpi\n        /* \"#utility.yul\":10966:11045   */\n      tag_275\n      tag_135\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":10930:11047   */\n    tag_274:\n        /* \"#utility.yul\":11065:11086   */\n      tag_276\n        /* \"#utility.yul\":11081:11085   */\n      0x80\n        /* \"#utility.yul\":11065:11086   */\n      tag_139\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":11056:11086   */\n      swap1\n      pop\n        /* \"#utility.yul\":11147:11148   */\n      0x00\n        /* \"#utility.yul\":11187:11236   */\n      tag_277\n        /* \"#utility.yul\":11232:11235   */\n      dup5\n        /* \"#utility.yul\":11223:11229   */\n      dup3\n        /* \"#utility.yul\":11212:11221   */\n      dup6\n        /* \"#utility.yul\":11208:11230   */\n      add\n        /* \"#utility.yul\":11187:11236   */\n      tag_142\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":11180:11184   */\n      0x00\n        /* \"#utility.yul\":11173:11178   */\n      dup4\n        /* \"#utility.yul\":11169:11185   */\n      add\n        /* \"#utility.yul\":11162:11237   */\n      mstore\n        /* \"#utility.yul\":11096:11248   */\n      pop\n        /* \"#utility.yul\":11311:11313   */\n      0x20\n        /* \"#utility.yul\":11352:11401   */\n      tag_278\n        /* \"#utility.yul\":11397:11400   */\n      dup5\n        /* \"#utility.yul\":11388:11394   */\n      dup3\n        /* \"#utility.yul\":11377:11386   */\n      dup6\n        /* \"#utility.yul\":11373:11395   */\n      add\n        /* \"#utility.yul\":11352:11401   */\n      tag_145\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":11345:11349   */\n      0x20\n        /* \"#utility.yul\":11338:11343   */\n      dup4\n        /* \"#utility.yul\":11334:11350   */\n      add\n        /* \"#utility.yul\":11327:11402   */\n      mstore\n        /* \"#utility.yul\":11258:11413   */\n      pop\n        /* \"#utility.yul\":11475:11477   */\n      0x40\n        /* \"#utility.yul\":11516:11565   */\n      tag_279\n        /* \"#utility.yul\":11561:11564   */\n      dup5\n        /* \"#utility.yul\":11552:11558   */\n      dup3\n        /* \"#utility.yul\":11541:11550   */\n      dup6\n        /* \"#utility.yul\":11537:11559   */\n      add\n        /* \"#utility.yul\":11516:11565   */\n      tag_145\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":11509:11513   */\n      0x40\n        /* \"#utility.yul\":11502:11507   */\n      dup4\n        /* \"#utility.yul\":11498:11514   */\n      add\n        /* \"#utility.yul\":11491:11566   */\n      mstore\n        /* \"#utility.yul\":11423:11577   */\n      pop\n        /* \"#utility.yul\":11638:11640   */\n      0x60\n        /* \"#utility.yul\":11679:11728   */\n      tag_280\n        /* \"#utility.yul\":11724:11727   */\n      dup5\n        /* \"#utility.yul\":11715:11721   */\n      dup3\n        /* \"#utility.yul\":11704:11713   */\n      dup6\n        /* \"#utility.yul\":11700:11722   */\n      add\n        /* \"#utility.yul\":11679:11728   */\n      tag_145\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":11672:11676   */\n      0x60\n        /* \"#utility.yul\":11665:11670   */\n      dup4\n        /* \"#utility.yul\":11661:11677   */\n      add\n        /* \"#utility.yul\":11654:11729   */\n      mstore\n        /* \"#utility.yul\":11587:11740   */\n      pop\n        /* \"#utility.yul\":10840:11747   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11753:12133   */\n    tag_66:\n        /* \"#utility.yul\":11837:11843   */\n      0x00\n        /* \"#utility.yul\":11886:11889   */\n      0x80\n        /* \"#utility.yul\":11874:11883   */\n      dup3\n        /* \"#utility.yul\":11865:11872   */\n      dup5\n        /* \"#utility.yul\":11861:11884   */\n      sub\n        /* \"#utility.yul\":11857:11890   */\n      slt\n        /* \"#utility.yul\":11854:11974   */\n      iszero\n      tag_282\n      jumpi\n        /* \"#utility.yul\":11893:11972   */\n      tag_283\n      tag_120\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":11854:11974   */\n    tag_282:\n        /* \"#utility.yul\":12013:12014   */\n      0x00\n        /* \"#utility.yul\":12038:12116   */\n      tag_284\n        /* \"#utility.yul\":12108:12115   */\n      dup5\n        /* \"#utility.yul\":12099:12105   */\n      dup3\n        /* \"#utility.yul\":12088:12097   */\n      dup6\n        /* \"#utility.yul\":12084:12106   */\n      add\n        /* \"#utility.yul\":12038:12116   */\n      tag_152\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":12028:12116   */\n      swap2\n      pop\n        /* \"#utility.yul\":11984:12126   */\n      pop\n        /* \"#utility.yul\":11753:12133   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12139:12581   */\n    tag_70:\n        /* \"#utility.yul\":12288:12292   */\n      0x00\n        /* \"#utility.yul\":12326:12328   */\n      0x60\n        /* \"#utility.yul\":12315:12324   */\n      dup3\n        /* \"#utility.yul\":12311:12329   */\n      add\n        /* \"#utility.yul\":12303:12329   */\n      swap1\n      pop\n        /* \"#utility.yul\":12339:12410   */\n      tag_286\n        /* \"#utility.yul\":12407:12408   */\n      0x00\n        /* \"#utility.yul\":12396:12405   */\n      dup4\n        /* \"#utility.yul\":12392:12409   */\n      add\n        /* \"#utility.yul\":12383:12389   */\n      dup7\n        /* \"#utility.yul\":12339:12410   */\n      tag_147\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":12420:12492   */\n      tag_287\n        /* \"#utility.yul\":12488:12490   */\n      0x20\n        /* \"#utility.yul\":12477:12486   */\n      dup4\n        /* \"#utility.yul\":12473:12491   */\n      add\n        /* \"#utility.yul\":12464:12470   */\n      dup6\n        /* \"#utility.yul\":12420:12492   */\n      tag_147\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":12502:12574   */\n      tag_288\n        /* \"#utility.yul\":12570:12572   */\n      0x40\n        /* \"#utility.yul\":12559:12568   */\n      dup4\n        /* \"#utility.yul\":12555:12573   */\n      add\n        /* \"#utility.yul\":12546:12552   */\n      dup5\n        /* \"#utility.yul\":12502:12574   */\n      tag_147\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":12139:12581   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12587:12781   */\n    tag_82:\n        /* \"#utility.yul\":12627:12631   */\n      0x00\n        /* \"#utility.yul\":12647:12667   */\n      tag_290\n        /* \"#utility.yul\":12665:12666   */\n      dup3\n        /* \"#utility.yul\":12647:12667   */\n      tag_143\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":12642:12667   */\n      swap2\n      pop\n        /* \"#utility.yul\":12681:12701   */\n      tag_291\n        /* \"#utility.yul\":12699:12700   */\n      dup4\n        /* \"#utility.yul\":12681:12701   */\n      tag_143\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":12676:12701   */\n      swap3\n      pop\n        /* \"#utility.yul\":12725:12726   */\n      dup3\n        /* \"#utility.yul\":12722:12723   */\n      dup3\n        /* \"#utility.yul\":12718:12727   */\n      sub\n        /* \"#utility.yul\":12710:12727   */\n      swap1\n      pop\n        /* \"#utility.yul\":12749:12750   */\n      dup2\n        /* \"#utility.yul\":12743:12747   */\n      dup2\n        /* \"#utility.yul\":12740:12751   */\n      gt\n        /* \"#utility.yul\":12737:12774   */\n      iszero\n      tag_292\n      jumpi\n        /* \"#utility.yul\":12754:12772   */\n      tag_293\n      tag_149\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":12737:12774   */\n    tag_292:\n        /* \"#utility.yul\":12587:12781   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12787:12968   */\n    tag_153:\n        /* \"#utility.yul\":12927:12960   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":12923:12924   */\n      0x00\n        /* \"#utility.yul\":12915:12921   */\n      dup3\n        /* \"#utility.yul\":12911:12925   */\n      add\n        /* \"#utility.yul\":12904:12961   */\n      mstore\n        /* \"#utility.yul\":12787:12968   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12974:13340   */\n    tag_154:\n        /* \"#utility.yul\":13116:13119   */\n      0x00\n        /* \"#utility.yul\":13137:13204   */\n      tag_296\n        /* \"#utility.yul\":13201:13203   */\n      0x1f\n        /* \"#utility.yul\":13196:13199   */\n      dup4\n        /* \"#utility.yul\":13137:13204   */\n      tag_132\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":13130:13204   */\n      swap2\n      pop\n        /* \"#utility.yul\":13213:13306   */\n      tag_297\n        /* \"#utility.yul\":13302:13305   */\n      dup3\n        /* \"#utility.yul\":13213:13306   */\n      tag_153\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":13331:13333   */\n      0x20\n        /* \"#utility.yul\":13326:13329   */\n      dup3\n        /* \"#utility.yul\":13322:13334   */\n      add\n        /* \"#utility.yul\":13315:13334   */\n      swap1\n      pop\n        /* \"#utility.yul\":12974:13340   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13346:13765   */\n    tag_88:\n        /* \"#utility.yul\":13512:13516   */\n      0x00\n        /* \"#utility.yul\":13550:13552   */\n      0x20\n        /* \"#utility.yul\":13539:13548   */\n      dup3\n        /* \"#utility.yul\":13535:13553   */\n      add\n        /* \"#utility.yul\":13527:13553   */\n      swap1\n      pop\n        /* \"#utility.yul\":13599:13608   */\n      dup2\n        /* \"#utility.yul\":13593:13597   */\n      dup2\n        /* \"#utility.yul\":13589:13609   */\n      sub\n        /* \"#utility.yul\":13585:13586   */\n      0x00\n        /* \"#utility.yul\":13574:13583   */\n      dup4\n        /* \"#utility.yul\":13570:13587   */\n      add\n        /* \"#utility.yul\":13563:13610   */\n      mstore\n        /* \"#utility.yul\":13627:13758   */\n      tag_299\n        /* \"#utility.yul\":13753:13757   */\n      dup2\n        /* \"#utility.yul\":13627:13758   */\n      tag_154\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":13619:13758   */\n      swap1\n      pop\n        /* \"#utility.yul\":13346:13765   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13771:13889   */\n    tag_155:\n        /* \"#utility.yul\":13858:13882   */\n      tag_301\n        /* \"#utility.yul\":13876:13881   */\n      dup2\n        /* \"#utility.yul\":13858:13882   */\n      tag_128\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":13853:13856   */\n      dup3\n        /* \"#utility.yul\":13846:13883   */\n      mstore\n        /* \"#utility.yul\":13771:13889   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13895:14337   */\n    tag_93:\n        /* \"#utility.yul\":14044:14048   */\n      0x00\n        /* \"#utility.yul\":14082:14084   */\n      0x60\n        /* \"#utility.yul\":14071:14080   */\n      dup3\n        /* \"#utility.yul\":14067:14085   */\n      add\n        /* \"#utility.yul\":14059:14085   */\n      swap1\n      pop\n        /* \"#utility.yul\":14095:14166   */\n      tag_303\n        /* \"#utility.yul\":14163:14164   */\n      0x00\n        /* \"#utility.yul\":14152:14161   */\n      dup4\n        /* \"#utility.yul\":14148:14165   */\n      add\n        /* \"#utility.yul\":14139:14145   */\n      dup7\n        /* \"#utility.yul\":14095:14166   */\n      tag_155\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":14176:14248   */\n      tag_304\n        /* \"#utility.yul\":14244:14246   */\n      0x20\n        /* \"#utility.yul\":14233:14242   */\n      dup4\n        /* \"#utility.yul\":14229:14247   */\n      add\n        /* \"#utility.yul\":14220:14226   */\n      dup6\n        /* \"#utility.yul\":14176:14248   */\n      tag_155\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":14258:14330   */\n      tag_305\n        /* \"#utility.yul\":14326:14328   */\n      0x40\n        /* \"#utility.yul\":14315:14324   */\n      dup4\n        /* \"#utility.yul\":14311:14329   */\n      add\n        /* \"#utility.yul\":14302:14308   */\n      dup5\n        /* \"#utility.yul\":14258:14330   */\n      tag_147\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":13895:14337   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14343:14675   */\n    tag_97:\n        /* \"#utility.yul\":14464:14468   */\n      0x00\n        /* \"#utility.yul\":14502:14504   */\n      0x40\n        /* \"#utility.yul\":14491:14500   */\n      dup3\n        /* \"#utility.yul\":14487:14505   */\n      add\n        /* \"#utility.yul\":14479:14505   */\n      swap1\n      pop\n        /* \"#utility.yul\":14515:14586   */\n      tag_307\n        /* \"#utility.yul\":14583:14584   */\n      0x00\n        /* \"#utility.yul\":14572:14581   */\n      dup4\n        /* \"#utility.yul\":14568:14585   */\n      add\n        /* \"#utility.yul\":14559:14565   */\n      dup6\n        /* \"#utility.yul\":14515:14586   */\n      tag_155\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":14596:14668   */\n      tag_308\n        /* \"#utility.yul\":14664:14666   */\n      0x20\n        /* \"#utility.yul\":14653:14662   */\n      dup4\n        /* \"#utility.yul\":14649:14667   */\n      add\n        /* \"#utility.yul\":14640:14646   */\n      dup5\n        /* \"#utility.yul\":14596:14668   */\n      tag_147\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":14343:14675   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14681:14766   */\n    tag_156:\n        /* \"#utility.yul\":14726:14733   */\n      0x00\n        /* \"#utility.yul\":14755:14760   */\n      dup2\n        /* \"#utility.yul\":14744:14760   */\n      swap1\n      pop\n        /* \"#utility.yul\":14681:14766   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14772:14832   */\n    tag_157:\n        /* \"#utility.yul\":14800:14803   */\n      0x00\n        /* \"#utility.yul\":14821:14826   */\n      dup2\n        /* \"#utility.yul\":14814:14826   */\n      swap1\n      pop\n        /* \"#utility.yul\":14772:14832   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14838:14996   */\n    tag_158:\n        /* \"#utility.yul\":14896:14905   */\n      0x00\n        /* \"#utility.yul\":14929:14990   */\n      tag_312\n        /* \"#utility.yul\":14947:14989   */\n      tag_313\n        /* \"#utility.yul\":14956:14988   */\n      tag_314\n        /* \"#utility.yul\":14982:14987   */\n      dup5\n        /* \"#utility.yul\":14956:14988   */\n      tag_156\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":14947:14989   */\n      tag_157\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":14929:14990   */\n      tag_143\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":14916:14990   */\n      swap1\n      pop\n        /* \"#utility.yul\":14838:14996   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15002:15149   */\n    tag_159:\n        /* \"#utility.yul\":15097:15142   */\n      tag_316\n        /* \"#utility.yul\":15136:15141   */\n      dup2\n        /* \"#utility.yul\":15097:15142   */\n      tag_158\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":15092:15095   */\n      dup3\n        /* \"#utility.yul\":15085:15143   */\n      mstore\n        /* \"#utility.yul\":15002:15149   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15155:15503   */\n    tag_103:\n        /* \"#utility.yul\":15284:15288   */\n      0x00\n        /* \"#utility.yul\":15322:15324   */\n      0x40\n        /* \"#utility.yul\":15311:15320   */\n      dup3\n        /* \"#utility.yul\":15307:15325   */\n      add\n        /* \"#utility.yul\":15299:15325   */\n      swap1\n      pop\n        /* \"#utility.yul\":15335:15406   */\n      tag_318\n        /* \"#utility.yul\":15403:15404   */\n      0x00\n        /* \"#utility.yul\":15392:15401   */\n      dup4\n        /* \"#utility.yul\":15388:15405   */\n      add\n        /* \"#utility.yul\":15379:15385   */\n      dup6\n        /* \"#utility.yul\":15335:15406   */\n      tag_155\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":15416:15496   */\n      tag_319\n        /* \"#utility.yul\":15492:15494   */\n      0x20\n        /* \"#utility.yul\":15481:15490   */\n      dup4\n        /* \"#utility.yul\":15477:15495   */\n      add\n        /* \"#utility.yul\":15468:15474   */\n      dup5\n        /* \"#utility.yul\":15416:15496   */\n      tag_159\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":15155:15503   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15509:15731   */\n    tag_114:\n        /* \"#utility.yul\":15602:15606   */\n      0x00\n        /* \"#utility.yul\":15640:15642   */\n      0x20\n        /* \"#utility.yul\":15629:15638   */\n      dup3\n        /* \"#utility.yul\":15625:15643   */\n      add\n        /* \"#utility.yul\":15617:15643   */\n      swap1\n      pop\n        /* \"#utility.yul\":15653:15724   */\n      tag_321\n        /* \"#utility.yul\":15721:15722   */\n      0x00\n        /* \"#utility.yul\":15710:15719   */\n      dup4\n        /* \"#utility.yul\":15706:15723   */\n      add\n        /* \"#utility.yul\":15697:15703   */\n      dup5\n        /* \"#utility.yul\":15653:15724   */\n      tag_155\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":15509:15731   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c9c7ee0b992320b5919878dbad6955358d855382413328a7da5ad5093441455264736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_108": {
									"entryPoint": null,
									"id": 108,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP PUSH2 0xFE7 DUP1 PUSH2 0x23 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8A48CA85 EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0xEAD99B61 EQ PUSH2 0x54 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x52 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D SWAP2 SWAP1 PUSH2 0x849 JUMP JUMPDEST PUSH2 0x70 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x69 SWAP2 SWAP1 PUSH2 0x954 JUMP JUMPDEST PUSH2 0x20C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x78 PUSH2 0x47F JUMP JUMPDEST PUSH0 DUP3 DUP3 SWAP1 POP GT PUSH2 0xBD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB4 SWAP1 PUSH2 0xA0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 SWAP1 POP PUSH0 PUSH0 SWAP1 POP PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP5 DUP5 SWAP1 POP DUP2 LT ISZERO PUSH2 0x1AD JUMPI PUSH0 DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0xE9 JUMPI PUSH2 0xE8 PUSH2 0xA29 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x40 MUL ADD DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFF SWAP2 SWAP1 PUSH2 0xB8C JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x677BD9FF DUP3 PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xBC6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x17C JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x179 SWAP2 SWAP1 PUSH2 0xBF3 JUMP JUMPDEST PUSH1 0x1 JUMPDEST ISZERO PUSH2 0x19F JUMPI DUP1 DUP6 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0xC4B JUMP JUMPDEST SWAP5 POP DUP4 DUP1 PUSH2 0x19A SWAP1 PUSH2 0xC7E JUMP JUMPDEST SWAP5 POP POP POP JUMPDEST DUP2 DUP1 PUSH1 0x1 ADD SWAP3 POP POP POP PUSH2 0xCA JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB9C05773BAC087C79CA346191A3F49B33E00AB1C6913F7788C9A3EC9391BEAB2 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1F6 SWAP3 SWAP2 SWAP1 PUSH2 0xCC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x208 PUSH2 0x4CC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x214 PUSH2 0x47F JUMP JUMPDEST PUSH0 DUP4 DUP4 SWAP1 POP GT PUSH2 0x259 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x250 SWAP1 PUSH2 0xD36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 SWAP1 POP PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP5 DUP5 SWAP1 POP DUP2 LT ISZERO PUSH2 0x2A4 JUMPI DUP5 DUP5 DUP3 DUP2 DUP2 LT PUSH2 0x280 JUMPI PUSH2 0x27F PUSH2 0xA29 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x80 MUL ADD PUSH1 0x60 ADD CALLDATALOAD DUP3 PUSH2 0x295 SWAP2 SWAP1 PUSH2 0xC4B JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x262 JUMP JUMPDEST POP PUSH2 0x2D2 CALLER ADDRESS DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4D5 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP6 DUP6 SWAP1 POP DUP2 LT ISZERO PUSH2 0x411 JUMPI PUSH0 DUP7 DUP7 DUP4 DUP2 DUP2 LT PUSH2 0x2FA JUMPI PUSH2 0x2F9 PUSH2 0xA29 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x80 MUL ADD DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x310 SWAP2 SWAP1 PUSH2 0xDC9 JUMP JUMPDEST SWAP1 POP PUSH2 0x344 DUP2 PUSH0 ADD MLOAD DUP3 PUSH1 0x60 ADD MLOAD DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x557 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE71C9697 DUP3 PUSH1 0x20 ADD MLOAD DUP4 PUSH1 0x40 ADD MLOAD DUP5 PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x390 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDF4 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3A7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x3B8 JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0x402 JUMPI DUP1 PUSH1 0x60 ADD MLOAD DUP4 PUSH2 0x3CC SWAP2 SWAP1 PUSH2 0xC4B JUMP JUMPDEST SWAP3 POP PUSH2 0x3FD CALLER DUP3 PUSH1 0x60 ADD MLOAD DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x664 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x403 JUMP JUMPDEST JUMPDEST DUP2 DUP1 PUSH1 0x1 ADD SWAP3 POP POP POP PUSH2 0x2DB JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFAA3F3B5E4BD3185BC059A2498B70867FD2B41976ECD9D924E19972A00A007EE DUP3 DUP5 PUSH2 0x456 SWAP2 SWAP1 PUSH2 0xE29 JUMP JUMPDEST DUP8 DUP8 SWAP1 POP PUSH1 0x40 MLOAD PUSH2 0x468 SWAP3 SWAP2 SWAP1 PUSH2 0xCC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x47A PUSH2 0x4CC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x4C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BA SWAP1 PUSH2 0xEA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x551 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x50A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xED3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x6E3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x587 SWAP3 SWAP2 SWAP1 PUSH2 0xF08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH2 0x5D5 DUP5 DUP3 PUSH2 0x77E JUMP JUMPDEST PUSH2 0x65E JUMPI PUSH2 0x653 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 DUP7 PUSH0 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x60C SWAP3 SWAP2 SWAP1 PUSH2 0xF71 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x6E3 JUMP JUMPDEST PUSH2 0x65D DUP5 DUP3 PUSH2 0x6E3 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x6DE DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x697 SWAP3 SWAP2 SWAP1 PUSH2 0xF08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x6E3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x702 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x71B JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x736 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x778 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76F SWAP2 SWAP1 PUSH2 0xF98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP7 MLOAD PUSH1 0x20 DUP9 ADD PUSH0 DUP11 GAS CALL SWAP3 POP RETURNDATASIZE SWAP2 POP PUSH0 MLOAD SWAP1 POP DUP3 DUP1 ISZERO PUSH2 0x7CC JUMPI POP PUSH0 DUP3 EQ PUSH2 0x7B0 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x7CB JUMP JUMPDEST PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT JUMPDEST JUMPDEST SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x809 JUMPI PUSH2 0x808 PUSH2 0x7E8 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x826 JUMPI PUSH2 0x825 PUSH2 0x7EC JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x40 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x842 JUMPI PUSH2 0x841 PUSH2 0x7F0 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x85F JUMPI PUSH2 0x85E PUSH2 0x7E0 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x87C JUMPI PUSH2 0x87B PUSH2 0x7E4 JUMP JUMPDEST JUMPDEST PUSH2 0x888 DUP6 DUP3 DUP7 ADD PUSH2 0x7F4 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x8A9 JUMPI PUSH2 0x8A8 PUSH2 0x7E8 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8C6 JUMPI PUSH2 0x8C5 PUSH2 0x7EC JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x80 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x8E2 JUMPI PUSH2 0x8E1 PUSH2 0x7F0 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x912 DUP3 PUSH2 0x8E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x923 DUP3 PUSH2 0x908 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x933 DUP2 PUSH2 0x919 JUMP JUMPDEST DUP2 EQ PUSH2 0x93D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x94E DUP2 PUSH2 0x92A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x96B JUMPI PUSH2 0x96A PUSH2 0x7E0 JUMP JUMPDEST JUMPDEST PUSH0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x988 JUMPI PUSH2 0x987 PUSH2 0x7E4 JUMP JUMPDEST JUMPDEST PUSH2 0x994 DUP7 DUP3 DUP8 ADD PUSH2 0x894 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x20 PUSH2 0x9A7 DUP7 DUP3 DUP8 ADD PUSH2 0x940 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F20636C61696D732070726F76696465640000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x9F5 PUSH1 0x12 DUP4 PUSH2 0x9B1 JUMP JUMPDEST SWAP2 POP PUSH2 0xA00 DUP3 PUSH2 0x9C1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA22 DUP2 PUSH2 0x9E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0xAA0 DUP3 PUSH2 0xA5A JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xABF JUMPI PUSH2 0xABE PUSH2 0xA6A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xAD1 PUSH2 0x7D7 JUMP JUMPDEST SWAP1 POP PUSH2 0xADD DUP3 DUP3 PUSH2 0xA97 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAEB DUP2 PUSH2 0x908 JUMP JUMPDEST DUP2 EQ PUSH2 0xAF5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB06 DUP2 PUSH2 0xAE2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB1E DUP2 PUSH2 0xB0C JUMP JUMPDEST DUP2 EQ PUSH2 0xB28 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB39 DUP2 PUSH2 0xB15 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB54 JUMPI PUSH2 0xB53 PUSH2 0xA56 JUMP JUMPDEST JUMPDEST PUSH2 0xB5E PUSH1 0x40 PUSH2 0xAC8 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xB6D DUP5 DUP3 DUP6 ADD PUSH2 0xAF8 JUMP JUMPDEST PUSH0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0xB80 DUP5 DUP3 DUP6 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBA1 JUMPI PUSH2 0xBA0 PUSH2 0x7E0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBAE DUP5 DUP3 DUP6 ADD PUSH2 0xB3F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBC0 DUP2 PUSH2 0xB0C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBD9 PUSH0 DUP4 ADD DUP5 PUSH2 0xBB7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xBED DUP2 PUSH2 0xB15 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC08 JUMPI PUSH2 0xC07 PUSH2 0x7E0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC15 DUP5 DUP3 DUP6 ADD PUSH2 0xBDF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xC55 DUP3 PUSH2 0xB0C JUMP JUMPDEST SWAP2 POP PUSH2 0xC60 DUP4 PUSH2 0xB0C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xC78 JUMPI PUSH2 0xC77 PUSH2 0xC1E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC88 DUP3 PUSH2 0xB0C JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0xCBA JUMPI PUSH2 0xCB9 PUSH2 0xC1E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xCD8 PUSH0 DUP4 ADD DUP6 PUSH2 0xBB7 JUMP JUMPDEST PUSH2 0xCE5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xBB7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E6F20626574732070726F766964656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD20 PUSH1 0x10 DUP4 PUSH2 0x9B1 JUMP JUMPDEST SWAP2 POP PUSH2 0xD2B DUP3 PUSH2 0xCEC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD4D DUP2 PUSH2 0xD14 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD69 JUMPI PUSH2 0xD68 PUSH2 0xA56 JUMP JUMPDEST JUMPDEST PUSH2 0xD73 PUSH1 0x80 PUSH2 0xAC8 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xD82 DUP5 DUP3 DUP6 ADD PUSH2 0xAF8 JUMP JUMPDEST PUSH0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0xD95 DUP5 DUP3 DUP6 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0xDA9 DUP5 DUP3 DUP6 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0xDBD DUP5 DUP3 DUP6 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDDE JUMPI PUSH2 0xDDD PUSH2 0x7E0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDEB DUP5 DUP3 DUP6 ADD PUSH2 0xD54 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xE07 PUSH0 DUP4 ADD DUP7 PUSH2 0xBB7 JUMP JUMPDEST PUSH2 0xE14 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xBB7 JUMP JUMPDEST PUSH2 0xE21 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xBB7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE33 DUP3 PUSH2 0xB0C JUMP JUMPDEST SWAP2 POP PUSH2 0xE3E DUP4 PUSH2 0xB0C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xE56 JUMPI PUSH2 0xE55 PUSH2 0xC1E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE90 PUSH1 0x1F DUP4 PUSH2 0x9B1 JUMP JUMPDEST SWAP2 POP PUSH2 0xE9B DUP3 PUSH2 0xE5C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEBD DUP2 PUSH2 0xE84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xECD DUP2 PUSH2 0x908 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xEE6 PUSH0 DUP4 ADD DUP7 PUSH2 0xEC4 JUMP JUMPDEST PUSH2 0xEF3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xEC4 JUMP JUMPDEST PUSH2 0xF00 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xBB7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF1B PUSH0 DUP4 ADD DUP6 PUSH2 0xEC4 JUMP JUMPDEST PUSH2 0xF28 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xBB7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF5B PUSH2 0xF56 PUSH2 0xF51 DUP5 PUSH2 0xF2F JUMP JUMPDEST PUSH2 0xF38 JUMP JUMPDEST PUSH2 0xB0C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF6B DUP2 PUSH2 0xF41 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF84 PUSH0 DUP4 ADD DUP6 PUSH2 0xEC4 JUMP JUMPDEST PUSH2 0xF91 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF62 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFAB PUSH0 DUP4 ADD DUP5 PUSH2 0xEC4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 0xC7 RETURNCONTRACT 0xB SWAP10 0x23 KECCAK256 0xB5 SWAP2 SWAP9 PUSH25 0xDBAD6955358D855382413328A7DA5AD5093441455264736F6C PUSH4 0x4300081E STOP CALLER ",
							"sourceMap": "445:2276:7:-:0;;;;;;;;;;;;;1716:1:3;1821:7;:22;;;;445:2276:7;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturnBool_695": {
									"entryPoint": 1918,
									"id": 695,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_callOptionalReturn_654": {
									"entryPoint": 1763,
									"id": 654,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_nonReentrantAfter_142": {
									"entryPoint": 1228,
									"id": 142,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_134": {
									"entryPoint": 1151,
									"id": 134,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@batchClaim_976": {
									"entryPoint": 112,
									"id": 976,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@forceApprove_480": {
									"entryPoint": 1367,
									"id": 480,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@placeBatchBets_899": {
									"entryPoint": 524,
									"id": 899,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_304": {
									"entryPoint": 1237,
									"id": 304,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_277": {
									"entryPoint": 1636,
									"id": 277,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2808,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_struct$_BatchBet_$745_calldata_ptr_$dyn_calldata_ptr": {
									"entryPoint": 2196,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_array$_t_struct$_BatchClaim_$750_calldata_ptr_$dyn_calldata_ptr": {
									"entryPoint": 2036,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_contract$_IERC20_$232": {
									"entryPoint": 2368,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_struct$_BatchBet_$745_memory_ptr": {
									"entryPoint": 3412,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_struct$_BatchClaim_$750_memory_ptr": {
									"entryPoint": 2879,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2859,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 3039,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_struct$_BatchBet_$745_calldata_ptr_$dyn_calldata_ptrt_contract$_IERC20_$232": {
									"entryPoint": 2388,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_array$_t_struct$_BatchClaim_$750_calldata_ptr_$dyn_calldata_ptr": {
									"entryPoint": 2121,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_struct$_BatchBet_$745_memory_ptr": {
									"entryPoint": 3529,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_struct$_BatchClaim_$750_memory_ptr": {
									"entryPoint": 2956,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 3059,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3780,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack": {
									"entryPoint": 3938,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_8f5b6b0f857f6092db72772cde67d02693d3b7aad7ac8a9884b2c025cc9a84d1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3348,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b6d7ef6bf90de195cf7085f44369095f3c2361b4a84702ba3e87c527107af23e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2537,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3716,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2999,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3992,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3795,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_rational_0_by_1__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3953,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3848,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8f5b6b0f857f6092db72772cde67d02693d3b7aad7ac8a9884b2c025cc9a84d1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3382,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b6d7ef6bf90de195cf7085f44369095f3c2361b4a84702ba3e87c527107af23e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2571,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3750,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3014,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3269,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3572,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 2760,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 2007,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2481,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3147,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3625,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2312,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$232": {
									"entryPoint": 2329,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_0_by_1": {
									"entryPoint": 3887,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2281,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2828,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_0_by_1_to_t_uint256": {
									"entryPoint": 3905,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 2711,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 3896,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 3198,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3102,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 2601,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2666,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 2028,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 2024,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f": {
									"entryPoint": 2646,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 2032,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 2020,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2016,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2650,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_8f5b6b0f857f6092db72772cde67d02693d3b7aad7ac8a9884b2c025cc9a84d1": {
									"entryPoint": 3308,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b6d7ef6bf90de195cf7085f44369095f3c2361b4a84702ba3e87c527107af23e": {
									"entryPoint": 2497,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 3676,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2786,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$232": {
									"entryPoint": 2346,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2837,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:15734:8",
										"nodeType": "YulBlock",
										"src": "0:15734:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:8",
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nativeSrc": "57:19:8",
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:8",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nativeSrc": "67:9:8",
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:8",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nativeSrc": "177:28:8",
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:8",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:8",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nativeSrc": "187:12:8",
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nativeSrc": "187:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nativeSrc": "300:28:8",
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:8",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:8",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nativeSrc": "310:12:8",
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nativeSrc": "310:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nativeSrc": "423:28:8",
													"nodeType": "YulBlock",
													"src": "423:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:8",
																		"nodeType": "YulLiteral",
																		"src": "440:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:8",
																		"nodeType": "YulLiteral",
																		"src": "443:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:8"
																},
																"nativeSrc": "433:12:8",
																"nodeType": "YulFunctionCall",
																"src": "433:12:8"
															},
															"nativeSrc": "433:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:8"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:8"
											},
											{
												"body": {
													"nativeSrc": "546:28:8",
													"nodeType": "YulBlock",
													"src": "546:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:8",
																		"nodeType": "YulLiteral",
																		"src": "563:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:8",
																		"nodeType": "YulLiteral",
																		"src": "566:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:8"
																},
																"nativeSrc": "556:12:8",
																"nodeType": "YulFunctionCall",
																"src": "556:12:8"
															},
															"nativeSrc": "556:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:8"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "457:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:8"
											},
											{
												"body": {
													"nativeSrc": "669:28:8",
													"nodeType": "YulBlock",
													"src": "669:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "686:1:8",
																		"nodeType": "YulLiteral",
																		"src": "686:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "689:1:8",
																		"nodeType": "YulLiteral",
																		"src": "689:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "679:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "679:6:8"
																},
																"nativeSrc": "679:12:8",
																"nodeType": "YulFunctionCall",
																"src": "679:12:8"
															},
															"nativeSrc": "679:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "679:12:8"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "580:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "580:117:8"
											},
											{
												"body": {
													"nativeSrc": "862:478:8",
													"nodeType": "YulBlock",
													"src": "862:478:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "911:83:8",
																"nodeType": "YulBlock",
																"src": "911:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "913:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "913:77:8"
																			},
																			"nativeSrc": "913:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "913:79:8"
																		},
																		"nativeSrc": "913:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "913:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "890:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "890:6:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "898:4:8",
																						"nodeType": "YulLiteral",
																						"src": "898:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "886:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "886:3:8"
																				},
																				"nativeSrc": "886:17:8",
																				"nodeType": "YulFunctionCall",
																				"src": "886:17:8"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "905:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "905:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "882:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "882:3:8"
																		},
																		"nativeSrc": "882:27:8",
																		"nodeType": "YulFunctionCall",
																		"src": "882:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "875:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "875:6:8"
																},
																"nativeSrc": "875:35:8",
																"nodeType": "YulFunctionCall",
																"src": "875:35:8"
															},
															"nativeSrc": "872:122:8",
															"nodeType": "YulIf",
															"src": "872:122:8"
														},
														{
															"nativeSrc": "1003:30:8",
															"nodeType": "YulAssignment",
															"src": "1003:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1026:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1026:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1013:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "1013:12:8"
																},
																"nativeSrc": "1013:20:8",
																"nodeType": "YulFunctionCall",
																"src": "1013:20:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1003:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1003:6:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1076:83:8",
																"nodeType": "YulBlock",
																"src": "1076:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "1078:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "1078:77:8"
																			},
																			"nativeSrc": "1078:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1078:79:8"
																		},
																		"nativeSrc": "1078:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1078:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1048:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1048:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1056:18:8",
																		"nodeType": "YulLiteral",
																		"src": "1056:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1045:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1045:2:8"
																},
																"nativeSrc": "1045:30:8",
																"nodeType": "YulFunctionCall",
																"src": "1045:30:8"
															},
															"nativeSrc": "1042:117:8",
															"nodeType": "YulIf",
															"src": "1042:117:8"
														},
														{
															"nativeSrc": "1168:29:8",
															"nodeType": "YulAssignment",
															"src": "1168:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1184:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1184:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1192:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1192:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1180:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1180:3:8"
																},
																"nativeSrc": "1180:17:8",
																"nodeType": "YulFunctionCall",
																"src": "1180:17:8"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "1168:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "1168:8:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1251:83:8",
																"nodeType": "YulBlock",
																"src": "1251:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "1253:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "1253:77:8"
																			},
																			"nativeSrc": "1253:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1253:79:8"
																		},
																		"nativeSrc": "1253:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1253:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "1216:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "1216:8:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "1230:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1230:6:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1238:4:8",
																						"nodeType": "YulLiteral",
																						"src": "1238:4:8",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "1226:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1226:3:8"
																				},
																				"nativeSrc": "1226:17:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1226:17:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1212:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1212:3:8"
																		},
																		"nativeSrc": "1212:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1212:32:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "1246:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "1246:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1209:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1209:2:8"
																},
																"nativeSrc": "1209:41:8",
																"nodeType": "YulFunctionCall",
																"src": "1209:41:8"
															},
															"nativeSrc": "1206:128:8",
															"nodeType": "YulIf",
															"src": "1206:128:8"
														}
													]
												},
												"name": "abi_decode_t_array$_t_struct$_BatchClaim_$750_calldata_ptr_$dyn_calldata_ptr",
												"nativeSrc": "743:597:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "829:6:8",
														"nodeType": "YulTypedName",
														"src": "829:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "837:3:8",
														"nodeType": "YulTypedName",
														"src": "837:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "845:8:8",
														"nodeType": "YulTypedName",
														"src": "845:8:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "855:6:8",
														"nodeType": "YulTypedName",
														"src": "855:6:8",
														"type": ""
													}
												],
												"src": "743:597:8"
											},
											{
												"body": {
													"nativeSrc": "1476:487:8",
													"nodeType": "YulBlock",
													"src": "1476:487:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1522:83:8",
																"nodeType": "YulBlock",
																"src": "1522:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1524:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "1524:77:8"
																			},
																			"nativeSrc": "1524:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1524:79:8"
																		},
																		"nativeSrc": "1524:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1524:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1497:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1497:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1506:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1506:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1493:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1493:3:8"
																		},
																		"nativeSrc": "1493:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1493:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1518:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1518:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1489:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1489:3:8"
																},
																"nativeSrc": "1489:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1489:32:8"
															},
															"nativeSrc": "1486:119:8",
															"nodeType": "YulIf",
															"src": "1486:119:8"
														},
														{
															"nativeSrc": "1615:341:8",
															"nodeType": "YulBlock",
															"src": "1615:341:8",
															"statements": [
																{
																	"nativeSrc": "1630:45:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1630:45:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1661:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "1661:9:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1672:1:8",
																						"nodeType": "YulLiteral",
																						"src": "1672:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1657:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1657:3:8"
																				},
																				"nativeSrc": "1657:17:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1657:17:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "1644:12:8",
																			"nodeType": "YulIdentifier",
																			"src": "1644:12:8"
																		},
																		"nativeSrc": "1644:31:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1644:31:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1634:6:8",
																			"nodeType": "YulTypedName",
																			"src": "1634:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "1722:83:8",
																		"nodeType": "YulBlock",
																		"src": "1722:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "1724:77:8",
																						"nodeType": "YulIdentifier",
																						"src": "1724:77:8"
																					},
																					"nativeSrc": "1724:79:8",
																					"nodeType": "YulFunctionCall",
																					"src": "1724:79:8"
																				},
																				"nativeSrc": "1724:79:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "1724:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "1694:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1694:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1702:18:8",
																				"nodeType": "YulLiteral",
																				"src": "1702:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1691:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1691:2:8"
																		},
																		"nativeSrc": "1691:30:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1691:30:8"
																	},
																	"nativeSrc": "1688:117:8",
																	"nodeType": "YulIf",
																	"src": "1688:117:8"
																},
																{
																	"nativeSrc": "1819:127:8",
																	"nodeType": "YulAssignment",
																	"src": "1819:127:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1918:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "1918:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1929:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1929:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1914:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1914:3:8"
																				},
																				"nativeSrc": "1914:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1914:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1938:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1938:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_struct$_BatchClaim_$750_calldata_ptr_$dyn_calldata_ptr",
																			"nativeSrc": "1837:76:8",
																			"nodeType": "YulIdentifier",
																			"src": "1837:76:8"
																		},
																		"nativeSrc": "1837:109:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1837:109:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1819:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1819:6:8"
																		},
																		{
																			"name": "value1",
																			"nativeSrc": "1827:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1827:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_struct$_BatchClaim_$750_calldata_ptr_$dyn_calldata_ptr",
												"nativeSrc": "1346:617:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1438:9:8",
														"nodeType": "YulTypedName",
														"src": "1438:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1449:7:8",
														"nodeType": "YulTypedName",
														"src": "1449:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1461:6:8",
														"nodeType": "YulTypedName",
														"src": "1461:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1469:6:8",
														"nodeType": "YulTypedName",
														"src": "1469:6:8",
														"type": ""
													}
												],
												"src": "1346:617:8"
											},
											{
												"body": {
													"nativeSrc": "2124:478:8",
													"nodeType": "YulBlock",
													"src": "2124:478:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2173:83:8",
																"nodeType": "YulBlock",
																"src": "2173:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2175:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "2175:77:8"
																			},
																			"nativeSrc": "2175:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2175:79:8"
																		},
																		"nativeSrc": "2175:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2175:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2152:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2152:6:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2160:4:8",
																						"nodeType": "YulLiteral",
																						"src": "2160:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2148:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2148:3:8"
																				},
																				"nativeSrc": "2148:17:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2148:17:8"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2167:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2167:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2144:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2144:3:8"
																		},
																		"nativeSrc": "2144:27:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2144:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2137:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2137:6:8"
																},
																"nativeSrc": "2137:35:8",
																"nodeType": "YulFunctionCall",
																"src": "2137:35:8"
															},
															"nativeSrc": "2134:122:8",
															"nodeType": "YulIf",
															"src": "2134:122:8"
														},
														{
															"nativeSrc": "2265:30:8",
															"nodeType": "YulAssignment",
															"src": "2265:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2288:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2288:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2275:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2275:12:8"
																},
																"nativeSrc": "2275:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2275:20:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2265:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2265:6:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2338:83:8",
																"nodeType": "YulBlock",
																"src": "2338:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "2340:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "2340:77:8"
																			},
																			"nativeSrc": "2340:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2340:79:8"
																		},
																		"nativeSrc": "2340:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2340:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2310:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2310:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2318:18:8",
																		"nodeType": "YulLiteral",
																		"src": "2318:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2307:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2307:2:8"
																},
																"nativeSrc": "2307:30:8",
																"nodeType": "YulFunctionCall",
																"src": "2307:30:8"
															},
															"nativeSrc": "2304:117:8",
															"nodeType": "YulIf",
															"src": "2304:117:8"
														},
														{
															"nativeSrc": "2430:29:8",
															"nodeType": "YulAssignment",
															"src": "2430:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2446:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2446:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2454:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2454:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2442:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2442:3:8"
																},
																"nativeSrc": "2442:17:8",
																"nodeType": "YulFunctionCall",
																"src": "2442:17:8"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "2430:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "2430:8:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2513:83:8",
																"nodeType": "YulBlock",
																"src": "2513:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "2515:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "2515:77:8"
																			},
																			"nativeSrc": "2515:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2515:79:8"
																		},
																		"nativeSrc": "2515:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2515:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "2478:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "2478:8:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "2492:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2492:6:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2500:4:8",
																						"nodeType": "YulLiteral",
																						"src": "2500:4:8",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "2488:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2488:3:8"
																				},
																				"nativeSrc": "2488:17:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2488:17:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2474:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2474:3:8"
																		},
																		"nativeSrc": "2474:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2474:32:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2508:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2508:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2471:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2471:2:8"
																},
																"nativeSrc": "2471:41:8",
																"nodeType": "YulFunctionCall",
																"src": "2471:41:8"
															},
															"nativeSrc": "2468:128:8",
															"nodeType": "YulIf",
															"src": "2468:128:8"
														}
													]
												},
												"name": "abi_decode_t_array$_t_struct$_BatchBet_$745_calldata_ptr_$dyn_calldata_ptr",
												"nativeSrc": "2007:595:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2091:6:8",
														"nodeType": "YulTypedName",
														"src": "2091:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2099:3:8",
														"nodeType": "YulTypedName",
														"src": "2099:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "2107:8:8",
														"nodeType": "YulTypedName",
														"src": "2107:8:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2117:6:8",
														"nodeType": "YulTypedName",
														"src": "2117:6:8",
														"type": ""
													}
												],
												"src": "2007:595:8"
											},
											{
												"body": {
													"nativeSrc": "2653:81:8",
													"nodeType": "YulBlock",
													"src": "2653:81:8",
													"statements": [
														{
															"nativeSrc": "2663:65:8",
															"nodeType": "YulAssignment",
															"src": "2663:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2678:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2678:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2685:42:8",
																		"nodeType": "YulLiteral",
																		"src": "2685:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2674:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2674:3:8"
																},
																"nativeSrc": "2674:54:8",
																"nodeType": "YulFunctionCall",
																"src": "2674:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2663:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2663:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2608:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2635:5:8",
														"nodeType": "YulTypedName",
														"src": "2635:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2645:7:8",
														"nodeType": "YulTypedName",
														"src": "2645:7:8",
														"type": ""
													}
												],
												"src": "2608:126:8"
											},
											{
												"body": {
													"nativeSrc": "2785:51:8",
													"nodeType": "YulBlock",
													"src": "2785:51:8",
													"statements": [
														{
															"nativeSrc": "2795:35:8",
															"nodeType": "YulAssignment",
															"src": "2795:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2824:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2824:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2806:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "2806:17:8"
																},
																"nativeSrc": "2806:24:8",
																"nodeType": "YulFunctionCall",
																"src": "2806:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2795:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2795:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2740:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2767:5:8",
														"nodeType": "YulTypedName",
														"src": "2767:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2777:7:8",
														"nodeType": "YulTypedName",
														"src": "2777:7:8",
														"type": ""
													}
												],
												"src": "2740:96:8"
											},
											{
												"body": {
													"nativeSrc": "2901:51:8",
													"nodeType": "YulBlock",
													"src": "2901:51:8",
													"statements": [
														{
															"nativeSrc": "2911:35:8",
															"nodeType": "YulAssignment",
															"src": "2911:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2940:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2940:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "2922:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "2922:17:8"
																},
																"nativeSrc": "2922:24:8",
																"nodeType": "YulFunctionCall",
																"src": "2922:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2911:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2911:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$232",
												"nativeSrc": "2842:110:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2883:5:8",
														"nodeType": "YulTypedName",
														"src": "2883:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2893:7:8",
														"nodeType": "YulTypedName",
														"src": "2893:7:8",
														"type": ""
													}
												],
												"src": "2842:110:8"
											},
											{
												"body": {
													"nativeSrc": "3015:93:8",
													"nodeType": "YulBlock",
													"src": "3015:93:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3086:16:8",
																"nodeType": "YulBlock",
																"src": "3086:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3095:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3095:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3098:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3098:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3088:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3088:6:8"
																			},
																			"nativeSrc": "3088:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3088:12:8"
																		},
																		"nativeSrc": "3088:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3088:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3038:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3038:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3077:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "3077:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$232",
																					"nativeSrc": "3045:31:8",
																					"nodeType": "YulIdentifier",
																					"src": "3045:31:8"
																				},
																				"nativeSrc": "3045:38:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3045:38:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3035:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "3035:2:8"
																		},
																		"nativeSrc": "3035:49:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3035:49:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3028:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3028:6:8"
																},
																"nativeSrc": "3028:57:8",
																"nodeType": "YulFunctionCall",
																"src": "3028:57:8"
															},
															"nativeSrc": "3025:77:8",
															"nodeType": "YulIf",
															"src": "3025:77:8"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$232",
												"nativeSrc": "2958:150:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3008:5:8",
														"nodeType": "YulTypedName",
														"src": "3008:5:8",
														"type": ""
													}
												],
												"src": "2958:150:8"
											},
											{
												"body": {
													"nativeSrc": "3180:101:8",
													"nodeType": "YulBlock",
													"src": "3180:101:8",
													"statements": [
														{
															"nativeSrc": "3190:29:8",
															"nodeType": "YulAssignment",
															"src": "3190:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3212:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3212:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3199:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "3199:12:8"
																},
																"nativeSrc": "3199:20:8",
																"nodeType": "YulFunctionCall",
																"src": "3199:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3190:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "3190:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3269:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3269:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$232",
																	"nativeSrc": "3228:40:8",
																	"nodeType": "YulIdentifier",
																	"src": "3228:40:8"
																},
																"nativeSrc": "3228:47:8",
																"nodeType": "YulFunctionCall",
																"src": "3228:47:8"
															},
															"nativeSrc": "3228:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "3228:47:8"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$232",
												"nativeSrc": "3114:167:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3158:6:8",
														"nodeType": "YulTypedName",
														"src": "3158:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3166:3:8",
														"nodeType": "YulTypedName",
														"src": "3166:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3174:5:8",
														"nodeType": "YulTypedName",
														"src": "3174:5:8",
														"type": ""
													}
												],
												"src": "3114:167:8"
											},
											{
												"body": {
													"nativeSrc": "3446:627:8",
													"nodeType": "YulBlock",
													"src": "3446:627:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3492:83:8",
																"nodeType": "YulBlock",
																"src": "3492:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3494:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "3494:77:8"
																			},
																			"nativeSrc": "3494:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3494:79:8"
																		},
																		"nativeSrc": "3494:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3494:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3467:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3467:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3476:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3476:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3463:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3463:3:8"
																		},
																		"nativeSrc": "3463:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3463:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3488:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3488:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3459:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3459:3:8"
																},
																"nativeSrc": "3459:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3459:32:8"
															},
															"nativeSrc": "3456:119:8",
															"nodeType": "YulIf",
															"src": "3456:119:8"
														},
														{
															"nativeSrc": "3585:339:8",
															"nodeType": "YulBlock",
															"src": "3585:339:8",
															"statements": [
																{
																	"nativeSrc": "3600:45:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3600:45:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3631:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "3631:9:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3642:1:8",
																						"nodeType": "YulLiteral",
																						"src": "3642:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3627:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3627:3:8"
																				},
																				"nativeSrc": "3627:17:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3627:17:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "3614:12:8",
																			"nodeType": "YulIdentifier",
																			"src": "3614:12:8"
																		},
																		"nativeSrc": "3614:31:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3614:31:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3604:6:8",
																			"nodeType": "YulTypedName",
																			"src": "3604:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3692:83:8",
																		"nodeType": "YulBlock",
																		"src": "3692:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3694:77:8",
																						"nodeType": "YulIdentifier",
																						"src": "3694:77:8"
																					},
																					"nativeSrc": "3694:79:8",
																					"nodeType": "YulFunctionCall",
																					"src": "3694:79:8"
																				},
																				"nativeSrc": "3694:79:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "3694:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3664:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3664:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3672:18:8",
																				"nodeType": "YulLiteral",
																				"src": "3672:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3661:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "3661:2:8"
																		},
																		"nativeSrc": "3661:30:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3661:30:8"
																	},
																	"nativeSrc": "3658:117:8",
																	"nodeType": "YulIf",
																	"src": "3658:117:8"
																},
																{
																	"nativeSrc": "3789:125:8",
																	"nodeType": "YulAssignment",
																	"src": "3789:125:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3886:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "3886:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3897:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "3897:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3882:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3882:3:8"
																				},
																				"nativeSrc": "3882:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3882:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3906:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3906:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_struct$_BatchBet_$745_calldata_ptr_$dyn_calldata_ptr",
																			"nativeSrc": "3807:74:8",
																			"nodeType": "YulIdentifier",
																			"src": "3807:74:8"
																		},
																		"nativeSrc": "3807:107:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3807:107:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3789:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3789:6:8"
																		},
																		{
																			"name": "value1",
																			"nativeSrc": "3797:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3797:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3934:132:8",
															"nodeType": "YulBlock",
															"src": "3934:132:8",
															"statements": [
																{
																	"nativeSrc": "3949:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3949:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3963:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3963:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3953:6:8",
																			"nodeType": "YulTypedName",
																			"src": "3953:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3979:77:8",
																	"nodeType": "YulAssignment",
																	"src": "3979:77:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4028:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4028:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4039:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4039:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4024:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4024:3:8"
																				},
																				"nativeSrc": "4024:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4024:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4048:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4048:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$232",
																			"nativeSrc": "3989:34:8",
																			"nodeType": "YulIdentifier",
																			"src": "3989:34:8"
																		},
																		"nativeSrc": "3989:67:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3989:67:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "3979:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3979:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_struct$_BatchBet_$745_calldata_ptr_$dyn_calldata_ptrt_contract$_IERC20_$232",
												"nativeSrc": "3287:786:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3400:9:8",
														"nodeType": "YulTypedName",
														"src": "3400:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3411:7:8",
														"nodeType": "YulTypedName",
														"src": "3411:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3423:6:8",
														"nodeType": "YulTypedName",
														"src": "3423:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3431:6:8",
														"nodeType": "YulTypedName",
														"src": "3431:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3439:6:8",
														"nodeType": "YulTypedName",
														"src": "3439:6:8",
														"type": ""
													}
												],
												"src": "3287:786:8"
											},
											{
												"body": {
													"nativeSrc": "4175:73:8",
													"nodeType": "YulBlock",
													"src": "4175:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4192:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4192:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4197:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4197:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4185:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4185:6:8"
																},
																"nativeSrc": "4185:19:8",
																"nodeType": "YulFunctionCall",
																"src": "4185:19:8"
															},
															"nativeSrc": "4185:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "4185:19:8"
														},
														{
															"nativeSrc": "4213:29:8",
															"nodeType": "YulAssignment",
															"src": "4213:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4232:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4232:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4237:4:8",
																		"nodeType": "YulLiteral",
																		"src": "4237:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4228:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4228:3:8"
																},
																"nativeSrc": "4228:14:8",
																"nodeType": "YulFunctionCall",
																"src": "4228:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "4213:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "4213:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "4079:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4147:3:8",
														"nodeType": "YulTypedName",
														"src": "4147:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4152:6:8",
														"nodeType": "YulTypedName",
														"src": "4152:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "4163:11:8",
														"nodeType": "YulTypedName",
														"src": "4163:11:8",
														"type": ""
													}
												],
												"src": "4079:169:8"
											},
											{
												"body": {
													"nativeSrc": "4360:62:8",
													"nodeType": "YulBlock",
													"src": "4360:62:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4382:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4382:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4390:1:8",
																				"nodeType": "YulLiteral",
																				"src": "4390:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4378:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4378:3:8"
																		},
																		"nativeSrc": "4378:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4378:14:8"
																	},
																	{
																		"hexValue": "4e6f20636c61696d732070726f7669646564",
																		"kind": "string",
																		"nativeSrc": "4394:20:8",
																		"nodeType": "YulLiteral",
																		"src": "4394:20:8",
																		"type": "",
																		"value": "No claims provided"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4371:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4371:6:8"
																},
																"nativeSrc": "4371:44:8",
																"nodeType": "YulFunctionCall",
																"src": "4371:44:8"
															},
															"nativeSrc": "4371:44:8",
															"nodeType": "YulExpressionStatement",
															"src": "4371:44:8"
														}
													]
												},
												"name": "store_literal_in_memory_b6d7ef6bf90de195cf7085f44369095f3c2361b4a84702ba3e87c527107af23e",
												"nativeSrc": "4254:168:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4352:6:8",
														"nodeType": "YulTypedName",
														"src": "4352:6:8",
														"type": ""
													}
												],
												"src": "4254:168:8"
											},
											{
												"body": {
													"nativeSrc": "4574:220:8",
													"nodeType": "YulBlock",
													"src": "4574:220:8",
													"statements": [
														{
															"nativeSrc": "4584:74:8",
															"nodeType": "YulAssignment",
															"src": "4584:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4650:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4650:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4655:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4655:2:8",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4591:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "4591:58:8"
																},
																"nativeSrc": "4591:67:8",
																"nodeType": "YulFunctionCall",
																"src": "4591:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4584:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4584:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4756:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4756:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b6d7ef6bf90de195cf7085f44369095f3c2361b4a84702ba3e87c527107af23e",
																	"nativeSrc": "4667:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "4667:88:8"
																},
																"nativeSrc": "4667:93:8",
																"nodeType": "YulFunctionCall",
																"src": "4667:93:8"
															},
															"nativeSrc": "4667:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "4667:93:8"
														},
														{
															"nativeSrc": "4769:19:8",
															"nodeType": "YulAssignment",
															"src": "4769:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4780:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4780:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4785:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4785:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4776:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4776:3:8"
																},
																"nativeSrc": "4776:12:8",
																"nodeType": "YulFunctionCall",
																"src": "4776:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4769:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4769:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b6d7ef6bf90de195cf7085f44369095f3c2361b4a84702ba3e87c527107af23e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4428:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4562:3:8",
														"nodeType": "YulTypedName",
														"src": "4562:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4570:3:8",
														"nodeType": "YulTypedName",
														"src": "4570:3:8",
														"type": ""
													}
												],
												"src": "4428:366:8"
											},
											{
												"body": {
													"nativeSrc": "4971:248:8",
													"nodeType": "YulBlock",
													"src": "4971:248:8",
													"statements": [
														{
															"nativeSrc": "4981:26:8",
															"nodeType": "YulAssignment",
															"src": "4981:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4993:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4993:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5004:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5004:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4989:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4989:3:8"
																},
																"nativeSrc": "4989:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4989:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4981:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4981:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5028:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5028:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5039:1:8",
																				"nodeType": "YulLiteral",
																				"src": "5039:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5024:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5024:3:8"
																		},
																		"nativeSrc": "5024:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5024:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5047:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "5047:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5053:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5053:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5043:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5043:3:8"
																		},
																		"nativeSrc": "5043:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5043:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5017:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5017:6:8"
																},
																"nativeSrc": "5017:47:8",
																"nodeType": "YulFunctionCall",
																"src": "5017:47:8"
															},
															"nativeSrc": "5017:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "5017:47:8"
														},
														{
															"nativeSrc": "5073:139:8",
															"nodeType": "YulAssignment",
															"src": "5073:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5207:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5207:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b6d7ef6bf90de195cf7085f44369095f3c2361b4a84702ba3e87c527107af23e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5081:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "5081:124:8"
																},
																"nativeSrc": "5081:131:8",
																"nodeType": "YulFunctionCall",
																"src": "5081:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5073:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5073:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b6d7ef6bf90de195cf7085f44369095f3c2361b4a84702ba3e87c527107af23e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4800:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4951:9:8",
														"nodeType": "YulTypedName",
														"src": "4951:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4966:4:8",
														"nodeType": "YulTypedName",
														"src": "4966:4:8",
														"type": ""
													}
												],
												"src": "4800:419:8"
											},
											{
												"body": {
													"nativeSrc": "5253:152:8",
													"nodeType": "YulBlock",
													"src": "5253:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5270:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5270:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5273:77:8",
																		"nodeType": "YulLiteral",
																		"src": "5273:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5263:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5263:6:8"
																},
																"nativeSrc": "5263:88:8",
																"nodeType": "YulFunctionCall",
																"src": "5263:88:8"
															},
															"nativeSrc": "5263:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "5263:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5367:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5367:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5370:4:8",
																		"nodeType": "YulLiteral",
																		"src": "5370:4:8",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5360:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5360:6:8"
																},
																"nativeSrc": "5360:15:8",
																"nodeType": "YulFunctionCall",
																"src": "5360:15:8"
															},
															"nativeSrc": "5360:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "5360:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5391:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5391:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5394:4:8",
																		"nodeType": "YulLiteral",
																		"src": "5394:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5384:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5384:6:8"
																},
																"nativeSrc": "5384:15:8",
																"nodeType": "YulFunctionCall",
																"src": "5384:15:8"
															},
															"nativeSrc": "5384:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "5384:15:8"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "5225:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "5225:180:8"
											},
											{
												"body": {
													"nativeSrc": "5500:28:8",
													"nodeType": "YulBlock",
													"src": "5500:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5517:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5517:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5520:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5520:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5510:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5510:6:8"
																},
																"nativeSrc": "5510:12:8",
																"nodeType": "YulFunctionCall",
																"src": "5510:12:8"
															},
															"nativeSrc": "5510:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "5510:12:8"
														}
													]
												},
												"name": "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f",
												"nativeSrc": "5411:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "5411:117:8"
											},
											{
												"body": {
													"nativeSrc": "5582:54:8",
													"nodeType": "YulBlock",
													"src": "5582:54:8",
													"statements": [
														{
															"nativeSrc": "5592:38:8",
															"nodeType": "YulAssignment",
															"src": "5592:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5610:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5610:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5617:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5617:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5606:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5606:3:8"
																		},
																		"nativeSrc": "5606:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5606:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5626:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5626:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5622:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5622:3:8"
																		},
																		"nativeSrc": "5622:7:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5622:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5602:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5602:3:8"
																},
																"nativeSrc": "5602:28:8",
																"nodeType": "YulFunctionCall",
																"src": "5602:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5592:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5592:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "5534:102:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5565:5:8",
														"nodeType": "YulTypedName",
														"src": "5565:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5575:6:8",
														"nodeType": "YulTypedName",
														"src": "5575:6:8",
														"type": ""
													}
												],
												"src": "5534:102:8"
											},
											{
												"body": {
													"nativeSrc": "5670:152:8",
													"nodeType": "YulBlock",
													"src": "5670:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5687:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5687:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5690:77:8",
																		"nodeType": "YulLiteral",
																		"src": "5690:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5680:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5680:6:8"
																},
																"nativeSrc": "5680:88:8",
																"nodeType": "YulFunctionCall",
																"src": "5680:88:8"
															},
															"nativeSrc": "5680:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "5680:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5784:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5784:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5787:4:8",
																		"nodeType": "YulLiteral",
																		"src": "5787:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5777:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5777:6:8"
																},
																"nativeSrc": "5777:15:8",
																"nodeType": "YulFunctionCall",
																"src": "5777:15:8"
															},
															"nativeSrc": "5777:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "5777:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5808:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5808:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5811:4:8",
																		"nodeType": "YulLiteral",
																		"src": "5811:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5801:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5801:6:8"
																},
																"nativeSrc": "5801:15:8",
																"nodeType": "YulFunctionCall",
																"src": "5801:15:8"
															},
															"nativeSrc": "5801:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "5801:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "5642:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "5642:180:8"
											},
											{
												"body": {
													"nativeSrc": "5871:238:8",
													"nodeType": "YulBlock",
													"src": "5871:238:8",
													"statements": [
														{
															"nativeSrc": "5881:58:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5881:58:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5903:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5903:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "5933:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "5933:4:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "5911:21:8",
																			"nodeType": "YulIdentifier",
																			"src": "5911:21:8"
																		},
																		"nativeSrc": "5911:27:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5911:27:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5899:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5899:3:8"
																},
																"nativeSrc": "5899:40:8",
																"nodeType": "YulFunctionCall",
																"src": "5899:40:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "5885:10:8",
																	"nodeType": "YulTypedName",
																	"src": "5885:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6050:22:8",
																"nodeType": "YulBlock",
																"src": "6050:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6052:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "6052:16:8"
																			},
																			"nativeSrc": "6052:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6052:18:8"
																		},
																		"nativeSrc": "6052:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6052:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5993:10:8",
																				"nodeType": "YulIdentifier",
																				"src": "5993:10:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6005:18:8",
																				"nodeType": "YulLiteral",
																				"src": "6005:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5990:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "5990:2:8"
																		},
																		"nativeSrc": "5990:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5990:34:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "6029:10:8",
																				"nodeType": "YulIdentifier",
																				"src": "6029:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "6041:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6041:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6026:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "6026:2:8"
																		},
																		"nativeSrc": "6026:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6026:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5987:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5987:2:8"
																},
																"nativeSrc": "5987:62:8",
																"nodeType": "YulFunctionCall",
																"src": "5987:62:8"
															},
															"nativeSrc": "5984:88:8",
															"nodeType": "YulIf",
															"src": "5984:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6088:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6088:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "6092:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "6092:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6081:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6081:6:8"
																},
																"nativeSrc": "6081:22:8",
																"nodeType": "YulFunctionCall",
																"src": "6081:22:8"
															},
															"nativeSrc": "6081:22:8",
															"nodeType": "YulExpressionStatement",
															"src": "6081:22:8"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "5828:281:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5857:6:8",
														"nodeType": "YulTypedName",
														"src": "5857:6:8",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "5865:4:8",
														"nodeType": "YulTypedName",
														"src": "5865:4:8",
														"type": ""
													}
												],
												"src": "5828:281:8"
											},
											{
												"body": {
													"nativeSrc": "6156:88:8",
													"nodeType": "YulBlock",
													"src": "6156:88:8",
													"statements": [
														{
															"nativeSrc": "6166:30:8",
															"nodeType": "YulAssignment",
															"src": "6166:30:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "6176:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "6176:18:8"
																},
																"nativeSrc": "6176:20:8",
																"nodeType": "YulFunctionCall",
																"src": "6176:20:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "6166:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6166:6:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "6225:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6225:6:8"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "6233:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6233:4:8"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "6205:19:8",
																	"nodeType": "YulIdentifier",
																	"src": "6205:19:8"
																},
																"nativeSrc": "6205:33:8",
																"nodeType": "YulFunctionCall",
																"src": "6205:33:8"
															},
															"nativeSrc": "6205:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "6205:33:8"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "6115:129:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "6140:4:8",
														"nodeType": "YulTypedName",
														"src": "6140:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "6149:6:8",
														"nodeType": "YulTypedName",
														"src": "6149:6:8",
														"type": ""
													}
												],
												"src": "6115:129:8"
											},
											{
												"body": {
													"nativeSrc": "6339:28:8",
													"nodeType": "YulBlock",
													"src": "6339:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6356:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6356:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6359:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6359:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6349:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6349:6:8"
																},
																"nativeSrc": "6349:12:8",
																"nodeType": "YulFunctionCall",
																"src": "6349:12:8"
															},
															"nativeSrc": "6349:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "6349:12:8"
														}
													]
												},
												"name": "revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421",
												"nativeSrc": "6250:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "6250:117:8"
											},
											{
												"body": {
													"nativeSrc": "6416:79:8",
													"nodeType": "YulBlock",
													"src": "6416:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "6473:16:8",
																"nodeType": "YulBlock",
																"src": "6473:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6482:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6482:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6485:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6485:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6475:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6475:6:8"
																			},
																			"nativeSrc": "6475:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6475:12:8"
																		},
																		"nativeSrc": "6475:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6475:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6439:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "6439:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6464:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "6464:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "6446:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "6446:17:8"
																				},
																				"nativeSrc": "6446:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6446:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6436:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "6436:2:8"
																		},
																		"nativeSrc": "6436:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6436:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6429:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6429:6:8"
																},
																"nativeSrc": "6429:43:8",
																"nodeType": "YulFunctionCall",
																"src": "6429:43:8"
															},
															"nativeSrc": "6426:63:8",
															"nodeType": "YulIf",
															"src": "6426:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "6373:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6409:5:8",
														"nodeType": "YulTypedName",
														"src": "6409:5:8",
														"type": ""
													}
												],
												"src": "6373:122:8"
											},
											{
												"body": {
													"nativeSrc": "6553:87:8",
													"nodeType": "YulBlock",
													"src": "6553:87:8",
													"statements": [
														{
															"nativeSrc": "6563:29:8",
															"nodeType": "YulAssignment",
															"src": "6563:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6585:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6585:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6572:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "6572:12:8"
																},
																"nativeSrc": "6572:20:8",
																"nodeType": "YulFunctionCall",
																"src": "6572:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6563:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "6563:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6628:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "6628:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "6601:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "6601:26:8"
																},
																"nativeSrc": "6601:33:8",
																"nodeType": "YulFunctionCall",
																"src": "6601:33:8"
															},
															"nativeSrc": "6601:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "6601:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "6501:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6531:6:8",
														"nodeType": "YulTypedName",
														"src": "6531:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6539:3:8",
														"nodeType": "YulTypedName",
														"src": "6539:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6547:5:8",
														"nodeType": "YulTypedName",
														"src": "6547:5:8",
														"type": ""
													}
												],
												"src": "6501:139:8"
											},
											{
												"body": {
													"nativeSrc": "6691:32:8",
													"nodeType": "YulBlock",
													"src": "6691:32:8",
													"statements": [
														{
															"nativeSrc": "6701:16:8",
															"nodeType": "YulAssignment",
															"src": "6701:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "6712:5:8",
																"nodeType": "YulIdentifier",
																"src": "6712:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6701:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "6701:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "6646:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6673:5:8",
														"nodeType": "YulTypedName",
														"src": "6673:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6683:7:8",
														"nodeType": "YulTypedName",
														"src": "6683:7:8",
														"type": ""
													}
												],
												"src": "6646:77:8"
											},
											{
												"body": {
													"nativeSrc": "6772:79:8",
													"nodeType": "YulBlock",
													"src": "6772:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "6829:16:8",
																"nodeType": "YulBlock",
																"src": "6829:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6838:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6838:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6841:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6841:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6831:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6831:6:8"
																			},
																			"nativeSrc": "6831:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6831:12:8"
																		},
																		"nativeSrc": "6831:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6831:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6795:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "6795:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6820:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "6820:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "6802:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "6802:17:8"
																				},
																				"nativeSrc": "6802:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6802:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6792:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "6792:2:8"
																		},
																		"nativeSrc": "6792:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6792:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6785:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6785:6:8"
																},
																"nativeSrc": "6785:43:8",
																"nodeType": "YulFunctionCall",
																"src": "6785:43:8"
															},
															"nativeSrc": "6782:63:8",
															"nodeType": "YulIf",
															"src": "6782:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "6729:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6765:5:8",
														"nodeType": "YulTypedName",
														"src": "6765:5:8",
														"type": ""
													}
												],
												"src": "6729:122:8"
											},
											{
												"body": {
													"nativeSrc": "6909:87:8",
													"nodeType": "YulBlock",
													"src": "6909:87:8",
													"statements": [
														{
															"nativeSrc": "6919:29:8",
															"nodeType": "YulAssignment",
															"src": "6919:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6941:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6941:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6928:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "6928:12:8"
																},
																"nativeSrc": "6928:20:8",
																"nodeType": "YulFunctionCall",
																"src": "6928:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6919:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "6919:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6984:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "6984:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "6957:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "6957:26:8"
																},
																"nativeSrc": "6957:33:8",
																"nodeType": "YulFunctionCall",
																"src": "6957:33:8"
															},
															"nativeSrc": "6957:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "6957:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "6857:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6887:6:8",
														"nodeType": "YulTypedName",
														"src": "6887:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6895:3:8",
														"nodeType": "YulTypedName",
														"src": "6895:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6903:5:8",
														"nodeType": "YulTypedName",
														"src": "6903:5:8",
														"type": ""
													}
												],
												"src": "6857:139:8"
											},
											{
												"body": {
													"nativeSrc": "7122:500:8",
													"nodeType": "YulBlock",
													"src": "7122:500:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "7166:83:8",
																"nodeType": "YulBlock",
																"src": "7166:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f",
																				"nativeSrc": "7168:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "7168:77:8"
																			},
																			"nativeSrc": "7168:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7168:79:8"
																		},
																		"nativeSrc": "7168:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7168:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nativeSrc": "7143:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "7143:3:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7148:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7148:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7139:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7139:3:8"
																		},
																		"nativeSrc": "7139:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7139:19:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7160:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7160:4:8",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7135:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7135:3:8"
																},
																"nativeSrc": "7135:30:8",
																"nodeType": "YulFunctionCall",
																"src": "7135:30:8"
															},
															"nativeSrc": "7132:117:8",
															"nodeType": "YulIf",
															"src": "7132:117:8"
														},
														{
															"nativeSrc": "7258:30:8",
															"nodeType": "YulAssignment",
															"src": "7258:30:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7283:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7283:4:8",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "7267:15:8",
																	"nodeType": "YulIdentifier",
																	"src": "7267:15:8"
																},
																"nativeSrc": "7267:21:8",
																"nodeType": "YulFunctionCall",
																"src": "7267:21:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7258:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "7258:5:8"
																}
															]
														},
														{
															"nativeSrc": "7298:152:8",
															"nodeType": "YulBlock",
															"src": "7298:152:8",
															"statements": [
																{
																	"nativeSrc": "7335:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7335:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7349:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7349:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7339:6:8",
																			"nodeType": "YulTypedName",
																			"src": "7339:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7375:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "7375:5:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7382:4:8",
																						"nodeType": "YulLiteral",
																						"src": "7382:4:8",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7371:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "7371:3:8"
																				},
																				"nativeSrc": "7371:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7371:16:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nativeSrc": "7414:9:8",
																								"nodeType": "YulIdentifier",
																								"src": "7414:9:8"
																							},
																							{
																								"name": "offset",
																								"nativeSrc": "7425:6:8",
																								"nodeType": "YulIdentifier",
																								"src": "7425:6:8"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "7410:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "7410:3:8"
																						},
																						"nativeSrc": "7410:22:8",
																						"nodeType": "YulFunctionCall",
																						"src": "7410:22:8"
																					},
																					{
																						"name": "end",
																						"nativeSrc": "7434:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "7434:3:8"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_address",
																					"nativeSrc": "7389:20:8",
																					"nodeType": "YulIdentifier",
																					"src": "7389:20:8"
																				},
																				"nativeSrc": "7389:49:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7389:49:8"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "7364:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "7364:6:8"
																		},
																		"nativeSrc": "7364:75:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7364:75:8"
																	},
																	"nativeSrc": "7364:75:8",
																	"nodeType": "YulExpressionStatement",
																	"src": "7364:75:8"
																}
															]
														},
														{
															"nativeSrc": "7460:155:8",
															"nodeType": "YulBlock",
															"src": "7460:155:8",
															"statements": [
																{
																	"nativeSrc": "7499:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7499:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7513:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7513:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7503:6:8",
																			"nodeType": "YulTypedName",
																			"src": "7503:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7540:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "7540:5:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7547:4:8",
																						"nodeType": "YulLiteral",
																						"src": "7547:4:8",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7536:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "7536:3:8"
																				},
																				"nativeSrc": "7536:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7536:16:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nativeSrc": "7579:9:8",
																								"nodeType": "YulIdentifier",
																								"src": "7579:9:8"
																							},
																							{
																								"name": "offset",
																								"nativeSrc": "7590:6:8",
																								"nodeType": "YulIdentifier",
																								"src": "7590:6:8"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "7575:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "7575:3:8"
																						},
																						"nativeSrc": "7575:22:8",
																						"nodeType": "YulFunctionCall",
																						"src": "7575:22:8"
																					},
																					{
																						"name": "end",
																						"nativeSrc": "7599:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "7599:3:8"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint256",
																					"nativeSrc": "7554:20:8",
																					"nodeType": "YulIdentifier",
																					"src": "7554:20:8"
																				},
																				"nativeSrc": "7554:49:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7554:49:8"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "7529:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "7529:6:8"
																		},
																		"nativeSrc": "7529:75:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7529:75:8"
																	},
																	"nativeSrc": "7529:75:8",
																	"nodeType": "YulExpressionStatement",
																	"src": "7529:75:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_struct$_BatchClaim_$750_memory_ptr",
												"nativeSrc": "7040:582:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7097:9:8",
														"nodeType": "YulTypedName",
														"src": "7097:9:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7108:3:8",
														"nodeType": "YulTypedName",
														"src": "7108:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7116:5:8",
														"nodeType": "YulTypedName",
														"src": "7116:5:8",
														"type": ""
													}
												],
												"src": "7040:582:8"
											},
											{
												"body": {
													"nativeSrc": "7721:290:8",
													"nodeType": "YulBlock",
													"src": "7721:290:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "7767:83:8",
																"nodeType": "YulBlock",
																"src": "7767:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7769:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "7769:77:8"
																			},
																			"nativeSrc": "7769:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7769:79:8"
																		},
																		"nativeSrc": "7769:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7769:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7742:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "7742:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7751:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7751:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7738:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7738:3:8"
																		},
																		"nativeSrc": "7738:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7738:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7763:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7763:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7734:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7734:3:8"
																},
																"nativeSrc": "7734:32:8",
																"nodeType": "YulFunctionCall",
																"src": "7734:32:8"
															},
															"nativeSrc": "7731:119:8",
															"nodeType": "YulIf",
															"src": "7731:119:8"
														},
														{
															"nativeSrc": "7860:144:8",
															"nodeType": "YulBlock",
															"src": "7860:144:8",
															"statements": [
																{
																	"nativeSrc": "7875:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7875:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7889:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7889:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7879:6:8",
																			"nodeType": "YulTypedName",
																			"src": "7879:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7904:90:8",
																	"nodeType": "YulAssignment",
																	"src": "7904:90:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7966:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "7966:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7977:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "7977:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7962:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "7962:3:8"
																				},
																				"nativeSrc": "7962:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7962:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7986:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "7986:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_struct$_BatchClaim_$750_memory_ptr",
																			"nativeSrc": "7914:47:8",
																			"nodeType": "YulIdentifier",
																			"src": "7914:47:8"
																		},
																		"nativeSrc": "7914:80:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7914:80:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7904:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "7904:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_BatchClaim_$750_memory_ptr",
												"nativeSrc": "7628:383:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7691:9:8",
														"nodeType": "YulTypedName",
														"src": "7691:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7702:7:8",
														"nodeType": "YulTypedName",
														"src": "7702:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7714:6:8",
														"nodeType": "YulTypedName",
														"src": "7714:6:8",
														"type": ""
													}
												],
												"src": "7628:383:8"
											},
											{
												"body": {
													"nativeSrc": "8082:53:8",
													"nodeType": "YulBlock",
													"src": "8082:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8099:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8099:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8122:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "8122:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "8104:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "8104:17:8"
																		},
																		"nativeSrc": "8104:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8104:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8092:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8092:6:8"
																},
																"nativeSrc": "8092:37:8",
																"nodeType": "YulFunctionCall",
																"src": "8092:37:8"
															},
															"nativeSrc": "8092:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "8092:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "8017:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8070:5:8",
														"nodeType": "YulTypedName",
														"src": "8070:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8077:3:8",
														"nodeType": "YulTypedName",
														"src": "8077:3:8",
														"type": ""
													}
												],
												"src": "8017:118:8"
											},
											{
												"body": {
													"nativeSrc": "8239:124:8",
													"nodeType": "YulBlock",
													"src": "8239:124:8",
													"statements": [
														{
															"nativeSrc": "8249:26:8",
															"nodeType": "YulAssignment",
															"src": "8249:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8261:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8261:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8272:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8272:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8257:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8257:3:8"
																},
																"nativeSrc": "8257:18:8",
																"nodeType": "YulFunctionCall",
																"src": "8257:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8249:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8249:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8329:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8329:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8342:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8342:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8353:1:8",
																				"nodeType": "YulLiteral",
																				"src": "8353:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8338:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8338:3:8"
																		},
																		"nativeSrc": "8338:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8338:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8285:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "8285:43:8"
																},
																"nativeSrc": "8285:71:8",
																"nodeType": "YulFunctionCall",
																"src": "8285:71:8"
															},
															"nativeSrc": "8285:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "8285:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "8141:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8211:9:8",
														"nodeType": "YulTypedName",
														"src": "8211:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8223:6:8",
														"nodeType": "YulTypedName",
														"src": "8223:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8234:4:8",
														"nodeType": "YulTypedName",
														"src": "8234:4:8",
														"type": ""
													}
												],
												"src": "8141:222:8"
											},
											{
												"body": {
													"nativeSrc": "8432:80:8",
													"nodeType": "YulBlock",
													"src": "8432:80:8",
													"statements": [
														{
															"nativeSrc": "8442:22:8",
															"nodeType": "YulAssignment",
															"src": "8442:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8457:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8457:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8451:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "8451:5:8"
																},
																"nativeSrc": "8451:13:8",
																"nodeType": "YulFunctionCall",
																"src": "8451:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8442:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "8442:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8500:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "8500:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "8473:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "8473:26:8"
																},
																"nativeSrc": "8473:33:8",
																"nodeType": "YulFunctionCall",
																"src": "8473:33:8"
															},
															"nativeSrc": "8473:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "8473:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "8369:143:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8410:6:8",
														"nodeType": "YulTypedName",
														"src": "8410:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8418:3:8",
														"nodeType": "YulTypedName",
														"src": "8418:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8426:5:8",
														"nodeType": "YulTypedName",
														"src": "8426:5:8",
														"type": ""
													}
												],
												"src": "8369:143:8"
											},
											{
												"body": {
													"nativeSrc": "8595:274:8",
													"nodeType": "YulBlock",
													"src": "8595:274:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "8641:83:8",
																"nodeType": "YulBlock",
																"src": "8641:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8643:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "8643:77:8"
																			},
																			"nativeSrc": "8643:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8643:79:8"
																		},
																		"nativeSrc": "8643:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8643:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8616:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "8616:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8625:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8625:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8612:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8612:3:8"
																		},
																		"nativeSrc": "8612:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8612:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8637:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8637:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8608:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8608:3:8"
																},
																"nativeSrc": "8608:32:8",
																"nodeType": "YulFunctionCall",
																"src": "8608:32:8"
															},
															"nativeSrc": "8605:119:8",
															"nodeType": "YulIf",
															"src": "8605:119:8"
														},
														{
															"nativeSrc": "8734:128:8",
															"nodeType": "YulBlock",
															"src": "8734:128:8",
															"statements": [
																{
																	"nativeSrc": "8749:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8749:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8763:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8763:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8753:6:8",
																			"nodeType": "YulTypedName",
																			"src": "8753:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8778:74:8",
																	"nodeType": "YulAssignment",
																	"src": "8778:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8824:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "8824:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8835:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "8835:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8820:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8820:3:8"
																				},
																				"nativeSrc": "8820:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8820:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8844:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "8844:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "8788:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "8788:31:8"
																		},
																		"nativeSrc": "8788:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8788:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8778:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "8778:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "8518:351:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8565:9:8",
														"nodeType": "YulTypedName",
														"src": "8565:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8576:7:8",
														"nodeType": "YulTypedName",
														"src": "8576:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8588:6:8",
														"nodeType": "YulTypedName",
														"src": "8588:6:8",
														"type": ""
													}
												],
												"src": "8518:351:8"
											},
											{
												"body": {
													"nativeSrc": "8903:152:8",
													"nodeType": "YulBlock",
													"src": "8903:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8920:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8920:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8923:77:8",
																		"nodeType": "YulLiteral",
																		"src": "8923:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8913:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8913:6:8"
																},
																"nativeSrc": "8913:88:8",
																"nodeType": "YulFunctionCall",
																"src": "8913:88:8"
															},
															"nativeSrc": "8913:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "8913:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9017:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9017:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9020:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9020:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9010:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9010:6:8"
																},
																"nativeSrc": "9010:15:8",
																"nodeType": "YulFunctionCall",
																"src": "9010:15:8"
															},
															"nativeSrc": "9010:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "9010:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9041:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9041:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9044:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9044:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9034:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9034:6:8"
																},
																"nativeSrc": "9034:15:8",
																"nodeType": "YulFunctionCall",
																"src": "9034:15:8"
															},
															"nativeSrc": "9034:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "9034:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8875:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "8875:180:8"
											},
											{
												"body": {
													"nativeSrc": "9105:147:8",
													"nodeType": "YulBlock",
													"src": "9105:147:8",
													"statements": [
														{
															"nativeSrc": "9115:25:8",
															"nodeType": "YulAssignment",
															"src": "9115:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9138:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9138:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9120:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "9120:17:8"
																},
																"nativeSrc": "9120:20:8",
																"nodeType": "YulFunctionCall",
																"src": "9120:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9115:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "9115:1:8"
																}
															]
														},
														{
															"nativeSrc": "9149:25:8",
															"nodeType": "YulAssignment",
															"src": "9149:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9172:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9172:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9154:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "9154:17:8"
																},
																"nativeSrc": "9154:20:8",
																"nodeType": "YulFunctionCall",
																"src": "9154:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9149:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "9149:1:8"
																}
															]
														},
														{
															"nativeSrc": "9183:16:8",
															"nodeType": "YulAssignment",
															"src": "9183:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9194:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9194:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9197:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9197:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9190:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9190:3:8"
																},
																"nativeSrc": "9190:9:8",
																"nodeType": "YulFunctionCall",
																"src": "9190:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9183:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9183:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9223:22:8",
																"nodeType": "YulBlock",
																"src": "9223:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9225:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "9225:16:8"
																			},
																			"nativeSrc": "9225:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9225:18:8"
																		},
																		"nativeSrc": "9225:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "9225:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9215:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9215:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9218:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9218:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9212:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "9212:2:8"
																},
																"nativeSrc": "9212:10:8",
																"nodeType": "YulFunctionCall",
																"src": "9212:10:8"
															},
															"nativeSrc": "9209:36:8",
															"nodeType": "YulIf",
															"src": "9209:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9061:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9092:1:8",
														"nodeType": "YulTypedName",
														"src": "9092:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9095:1:8",
														"nodeType": "YulTypedName",
														"src": "9095:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9101:3:8",
														"nodeType": "YulTypedName",
														"src": "9101:3:8",
														"type": ""
													}
												],
												"src": "9061:191:8"
											},
											{
												"body": {
													"nativeSrc": "9301:190:8",
													"nodeType": "YulBlock",
													"src": "9301:190:8",
													"statements": [
														{
															"nativeSrc": "9311:33:8",
															"nodeType": "YulAssignment",
															"src": "9311:33:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9338:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "9338:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9320:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "9320:17:8"
																},
																"nativeSrc": "9320:24:8",
																"nodeType": "YulFunctionCall",
																"src": "9320:24:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9311:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "9311:5:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9434:22:8",
																"nodeType": "YulBlock",
																"src": "9434:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9436:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "9436:16:8"
																			},
																			"nativeSrc": "9436:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9436:18:8"
																		},
																		"nativeSrc": "9436:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "9436:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9359:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "9359:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9366:66:8",
																		"nodeType": "YulLiteral",
																		"src": "9366:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "9356:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "9356:2:8"
																},
																"nativeSrc": "9356:77:8",
																"nodeType": "YulFunctionCall",
																"src": "9356:77:8"
															},
															"nativeSrc": "9353:103:8",
															"nodeType": "YulIf",
															"src": "9353:103:8"
														},
														{
															"nativeSrc": "9465:20:8",
															"nodeType": "YulAssignment",
															"src": "9465:20:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9476:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "9476:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9483:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9483:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9472:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9472:3:8"
																},
																"nativeSrc": "9472:13:8",
																"nodeType": "YulFunctionCall",
																"src": "9472:13:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "9465:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9465:3:8"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "9258:233:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9287:5:8",
														"nodeType": "YulTypedName",
														"src": "9287:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "9297:3:8",
														"nodeType": "YulTypedName",
														"src": "9297:3:8",
														"type": ""
													}
												],
												"src": "9258:233:8"
											},
											{
												"body": {
													"nativeSrc": "9623:206:8",
													"nodeType": "YulBlock",
													"src": "9623:206:8",
													"statements": [
														{
															"nativeSrc": "9633:26:8",
															"nodeType": "YulAssignment",
															"src": "9633:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9645:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "9645:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9656:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9656:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9641:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9641:3:8"
																},
																"nativeSrc": "9641:18:8",
																"nodeType": "YulFunctionCall",
																"src": "9641:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9633:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9633:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9713:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9713:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9726:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9726:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9737:1:8",
																				"nodeType": "YulLiteral",
																				"src": "9737:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9722:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9722:3:8"
																		},
																		"nativeSrc": "9722:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9722:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9669:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "9669:43:8"
																},
																"nativeSrc": "9669:71:8",
																"nodeType": "YulFunctionCall",
																"src": "9669:71:8"
															},
															"nativeSrc": "9669:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "9669:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9794:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9794:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9807:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9807:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9818:2:8",
																				"nodeType": "YulLiteral",
																				"src": "9818:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9803:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9803:3:8"
																		},
																		"nativeSrc": "9803:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9803:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9750:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "9750:43:8"
																},
																"nativeSrc": "9750:72:8",
																"nodeType": "YulFunctionCall",
																"src": "9750:72:8"
															},
															"nativeSrc": "9750:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "9750:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9497:332:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9587:9:8",
														"nodeType": "YulTypedName",
														"src": "9587:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9599:6:8",
														"nodeType": "YulTypedName",
														"src": "9599:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9607:6:8",
														"nodeType": "YulTypedName",
														"src": "9607:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9618:4:8",
														"nodeType": "YulTypedName",
														"src": "9618:4:8",
														"type": ""
													}
												],
												"src": "9497:332:8"
											},
											{
												"body": {
													"nativeSrc": "9941:60:8",
													"nodeType": "YulBlock",
													"src": "9941:60:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9963:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "9963:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9971:1:8",
																				"nodeType": "YulLiteral",
																				"src": "9971:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9959:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9959:3:8"
																		},
																		"nativeSrc": "9959:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9959:14:8"
																	},
																	{
																		"hexValue": "4e6f20626574732070726f7669646564",
																		"kind": "string",
																		"nativeSrc": "9975:18:8",
																		"nodeType": "YulLiteral",
																		"src": "9975:18:8",
																		"type": "",
																		"value": "No bets provided"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9952:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9952:6:8"
																},
																"nativeSrc": "9952:42:8",
																"nodeType": "YulFunctionCall",
																"src": "9952:42:8"
															},
															"nativeSrc": "9952:42:8",
															"nodeType": "YulExpressionStatement",
															"src": "9952:42:8"
														}
													]
												},
												"name": "store_literal_in_memory_8f5b6b0f857f6092db72772cde67d02693d3b7aad7ac8a9884b2c025cc9a84d1",
												"nativeSrc": "9835:166:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9933:6:8",
														"nodeType": "YulTypedName",
														"src": "9933:6:8",
														"type": ""
													}
												],
												"src": "9835:166:8"
											},
											{
												"body": {
													"nativeSrc": "10153:220:8",
													"nodeType": "YulBlock",
													"src": "10153:220:8",
													"statements": [
														{
															"nativeSrc": "10163:74:8",
															"nodeType": "YulAssignment",
															"src": "10163:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10229:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10229:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10234:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10234:2:8",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10170:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "10170:58:8"
																},
																"nativeSrc": "10170:67:8",
																"nodeType": "YulFunctionCall",
																"src": "10170:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10163:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10163:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10335:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10335:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8f5b6b0f857f6092db72772cde67d02693d3b7aad7ac8a9884b2c025cc9a84d1",
																	"nativeSrc": "10246:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "10246:88:8"
																},
																"nativeSrc": "10246:93:8",
																"nodeType": "YulFunctionCall",
																"src": "10246:93:8"
															},
															"nativeSrc": "10246:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "10246:93:8"
														},
														{
															"nativeSrc": "10348:19:8",
															"nodeType": "YulAssignment",
															"src": "10348:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10359:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10359:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10364:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10364:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10355:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10355:3:8"
																},
																"nativeSrc": "10355:12:8",
																"nodeType": "YulFunctionCall",
																"src": "10355:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10348:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10348:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8f5b6b0f857f6092db72772cde67d02693d3b7aad7ac8a9884b2c025cc9a84d1_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10007:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10141:3:8",
														"nodeType": "YulTypedName",
														"src": "10141:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10149:3:8",
														"nodeType": "YulTypedName",
														"src": "10149:3:8",
														"type": ""
													}
												],
												"src": "10007:366:8"
											},
											{
												"body": {
													"nativeSrc": "10550:248:8",
													"nodeType": "YulBlock",
													"src": "10550:248:8",
													"statements": [
														{
															"nativeSrc": "10560:26:8",
															"nodeType": "YulAssignment",
															"src": "10560:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10572:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "10572:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10583:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10583:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10568:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10568:3:8"
																},
																"nativeSrc": "10568:18:8",
																"nodeType": "YulFunctionCall",
																"src": "10568:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10560:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10560:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10607:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10607:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10618:1:8",
																				"nodeType": "YulLiteral",
																				"src": "10618:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10603:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10603:3:8"
																		},
																		"nativeSrc": "10603:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10603:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10626:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "10626:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10632:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10632:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10622:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10622:3:8"
																		},
																		"nativeSrc": "10622:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10622:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10596:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10596:6:8"
																},
																"nativeSrc": "10596:47:8",
																"nodeType": "YulFunctionCall",
																"src": "10596:47:8"
															},
															"nativeSrc": "10596:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "10596:47:8"
														},
														{
															"nativeSrc": "10652:139:8",
															"nodeType": "YulAssignment",
															"src": "10652:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10786:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "10786:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8f5b6b0f857f6092db72772cde67d02693d3b7aad7ac8a9884b2c025cc9a84d1_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10660:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "10660:124:8"
																},
																"nativeSrc": "10660:131:8",
																"nodeType": "YulFunctionCall",
																"src": "10660:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10652:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10652:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8f5b6b0f857f6092db72772cde67d02693d3b7aad7ac8a9884b2c025cc9a84d1__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10379:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10530:9:8",
														"nodeType": "YulTypedName",
														"src": "10530:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10545:4:8",
														"nodeType": "YulTypedName",
														"src": "10545:4:8",
														"type": ""
													}
												],
												"src": "10379:419:8"
											},
											{
												"body": {
													"nativeSrc": "10920:827:8",
													"nodeType": "YulBlock",
													"src": "10920:827:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "10964:83:8",
																"nodeType": "YulBlock",
																"src": "10964:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f",
																				"nativeSrc": "10966:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "10966:77:8"
																			},
																			"nativeSrc": "10966:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "10966:79:8"
																		},
																		"nativeSrc": "10966:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "10966:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nativeSrc": "10941:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "10941:3:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10946:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10946:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10937:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10937:3:8"
																		},
																		"nativeSrc": "10937:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10937:19:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10958:4:8",
																		"nodeType": "YulLiteral",
																		"src": "10958:4:8",
																		"type": "",
																		"value": "0x80"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10933:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10933:3:8"
																},
																"nativeSrc": "10933:30:8",
																"nodeType": "YulFunctionCall",
																"src": "10933:30:8"
															},
															"nativeSrc": "10930:117:8",
															"nodeType": "YulIf",
															"src": "10930:117:8"
														},
														{
															"nativeSrc": "11056:30:8",
															"nodeType": "YulAssignment",
															"src": "11056:30:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11081:4:8",
																		"nodeType": "YulLiteral",
																		"src": "11081:4:8",
																		"type": "",
																		"value": "0x80"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "11065:15:8",
																	"nodeType": "YulIdentifier",
																	"src": "11065:15:8"
																},
																"nativeSrc": "11065:21:8",
																"nodeType": "YulFunctionCall",
																"src": "11065:21:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11056:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "11056:5:8"
																}
															]
														},
														{
															"nativeSrc": "11096:152:8",
															"nodeType": "YulBlock",
															"src": "11096:152:8",
															"statements": [
																{
																	"nativeSrc": "11133:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11133:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11147:1:8",
																		"nodeType": "YulLiteral",
																		"src": "11147:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11137:6:8",
																			"nodeType": "YulTypedName",
																			"src": "11137:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11173:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "11173:5:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11180:4:8",
																						"nodeType": "YulLiteral",
																						"src": "11180:4:8",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11169:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "11169:3:8"
																				},
																				"nativeSrc": "11169:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "11169:16:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nativeSrc": "11212:9:8",
																								"nodeType": "YulIdentifier",
																								"src": "11212:9:8"
																							},
																							{
																								"name": "offset",
																								"nativeSrc": "11223:6:8",
																								"nodeType": "YulIdentifier",
																								"src": "11223:6:8"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "11208:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "11208:3:8"
																						},
																						"nativeSrc": "11208:22:8",
																						"nodeType": "YulFunctionCall",
																						"src": "11208:22:8"
																					},
																					{
																						"name": "end",
																						"nativeSrc": "11232:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "11232:3:8"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_address",
																					"nativeSrc": "11187:20:8",
																					"nodeType": "YulIdentifier",
																					"src": "11187:20:8"
																				},
																				"nativeSrc": "11187:49:8",
																				"nodeType": "YulFunctionCall",
																				"src": "11187:49:8"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "11162:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "11162:6:8"
																		},
																		"nativeSrc": "11162:75:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11162:75:8"
																	},
																	"nativeSrc": "11162:75:8",
																	"nodeType": "YulExpressionStatement",
																	"src": "11162:75:8"
																}
															]
														},
														{
															"nativeSrc": "11258:155:8",
															"nodeType": "YulBlock",
															"src": "11258:155:8",
															"statements": [
																{
																	"nativeSrc": "11297:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11297:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11311:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11311:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11301:6:8",
																			"nodeType": "YulTypedName",
																			"src": "11301:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11338:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "11338:5:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11345:4:8",
																						"nodeType": "YulLiteral",
																						"src": "11345:4:8",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11334:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "11334:3:8"
																				},
																				"nativeSrc": "11334:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "11334:16:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nativeSrc": "11377:9:8",
																								"nodeType": "YulIdentifier",
																								"src": "11377:9:8"
																							},
																							{
																								"name": "offset",
																								"nativeSrc": "11388:6:8",
																								"nodeType": "YulIdentifier",
																								"src": "11388:6:8"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "11373:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "11373:3:8"
																						},
																						"nativeSrc": "11373:22:8",
																						"nodeType": "YulFunctionCall",
																						"src": "11373:22:8"
																					},
																					{
																						"name": "end",
																						"nativeSrc": "11397:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "11397:3:8"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint256",
																					"nativeSrc": "11352:20:8",
																					"nodeType": "YulIdentifier",
																					"src": "11352:20:8"
																				},
																				"nativeSrc": "11352:49:8",
																				"nodeType": "YulFunctionCall",
																				"src": "11352:49:8"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "11327:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "11327:6:8"
																		},
																		"nativeSrc": "11327:75:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11327:75:8"
																	},
																	"nativeSrc": "11327:75:8",
																	"nodeType": "YulExpressionStatement",
																	"src": "11327:75:8"
																}
															]
														},
														{
															"nativeSrc": "11423:154:8",
															"nodeType": "YulBlock",
															"src": "11423:154:8",
															"statements": [
																{
																	"nativeSrc": "11461:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11461:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11475:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11475:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11465:6:8",
																			"nodeType": "YulTypedName",
																			"src": "11465:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11502:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "11502:5:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11509:4:8",
																						"nodeType": "YulLiteral",
																						"src": "11509:4:8",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11498:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "11498:3:8"
																				},
																				"nativeSrc": "11498:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "11498:16:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nativeSrc": "11541:9:8",
																								"nodeType": "YulIdentifier",
																								"src": "11541:9:8"
																							},
																							{
																								"name": "offset",
																								"nativeSrc": "11552:6:8",
																								"nodeType": "YulIdentifier",
																								"src": "11552:6:8"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "11537:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "11537:3:8"
																						},
																						"nativeSrc": "11537:22:8",
																						"nodeType": "YulFunctionCall",
																						"src": "11537:22:8"
																					},
																					{
																						"name": "end",
																						"nativeSrc": "11561:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "11561:3:8"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint256",
																					"nativeSrc": "11516:20:8",
																					"nodeType": "YulIdentifier",
																					"src": "11516:20:8"
																				},
																				"nativeSrc": "11516:49:8",
																				"nodeType": "YulFunctionCall",
																				"src": "11516:49:8"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "11491:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "11491:6:8"
																		},
																		"nativeSrc": "11491:75:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11491:75:8"
																	},
																	"nativeSrc": "11491:75:8",
																	"nodeType": "YulExpressionStatement",
																	"src": "11491:75:8"
																}
															]
														},
														{
															"nativeSrc": "11587:153:8",
															"nodeType": "YulBlock",
															"src": "11587:153:8",
															"statements": [
																{
																	"nativeSrc": "11624:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11624:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11638:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11638:2:8",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11628:6:8",
																			"nodeType": "YulTypedName",
																			"src": "11628:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11665:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "11665:5:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11672:4:8",
																						"nodeType": "YulLiteral",
																						"src": "11672:4:8",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11661:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "11661:3:8"
																				},
																				"nativeSrc": "11661:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "11661:16:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nativeSrc": "11704:9:8",
																								"nodeType": "YulIdentifier",
																								"src": "11704:9:8"
																							},
																							{
																								"name": "offset",
																								"nativeSrc": "11715:6:8",
																								"nodeType": "YulIdentifier",
																								"src": "11715:6:8"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "11700:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "11700:3:8"
																						},
																						"nativeSrc": "11700:22:8",
																						"nodeType": "YulFunctionCall",
																						"src": "11700:22:8"
																					},
																					{
																						"name": "end",
																						"nativeSrc": "11724:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "11724:3:8"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint256",
																					"nativeSrc": "11679:20:8",
																					"nodeType": "YulIdentifier",
																					"src": "11679:20:8"
																				},
																				"nativeSrc": "11679:49:8",
																				"nodeType": "YulFunctionCall",
																				"src": "11679:49:8"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "11654:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "11654:6:8"
																		},
																		"nativeSrc": "11654:75:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11654:75:8"
																	},
																	"nativeSrc": "11654:75:8",
																	"nodeType": "YulExpressionStatement",
																	"src": "11654:75:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_struct$_BatchBet_$745_memory_ptr",
												"nativeSrc": "10840:907:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10895:9:8",
														"nodeType": "YulTypedName",
														"src": "10895:9:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10906:3:8",
														"nodeType": "YulTypedName",
														"src": "10906:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "10914:5:8",
														"nodeType": "YulTypedName",
														"src": "10914:5:8",
														"type": ""
													}
												],
												"src": "10840:907:8"
											},
											{
												"body": {
													"nativeSrc": "11844:289:8",
													"nodeType": "YulBlock",
													"src": "11844:289:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "11891:83:8",
																"nodeType": "YulBlock",
																"src": "11891:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11893:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "11893:77:8"
																			},
																			"nativeSrc": "11893:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "11893:79:8"
																		},
																		"nativeSrc": "11893:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "11893:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11865:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "11865:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11874:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11874:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11861:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11861:3:8"
																		},
																		"nativeSrc": "11861:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11861:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11886:3:8",
																		"nodeType": "YulLiteral",
																		"src": "11886:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11857:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11857:3:8"
																},
																"nativeSrc": "11857:33:8",
																"nodeType": "YulFunctionCall",
																"src": "11857:33:8"
															},
															"nativeSrc": "11854:120:8",
															"nodeType": "YulIf",
															"src": "11854:120:8"
														},
														{
															"nativeSrc": "11984:142:8",
															"nodeType": "YulBlock",
															"src": "11984:142:8",
															"statements": [
																{
																	"nativeSrc": "11999:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11999:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12013:1:8",
																		"nodeType": "YulLiteral",
																		"src": "12013:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12003:6:8",
																			"nodeType": "YulTypedName",
																			"src": "12003:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12028:88:8",
																	"nodeType": "YulAssignment",
																	"src": "12028:88:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12088:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "12088:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12099:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "12099:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12084:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "12084:3:8"
																				},
																				"nativeSrc": "12084:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "12084:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12108:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "12108:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_struct$_BatchBet_$745_memory_ptr",
																			"nativeSrc": "12038:45:8",
																			"nodeType": "YulIdentifier",
																			"src": "12038:45:8"
																		},
																		"nativeSrc": "12038:78:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12038:78:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12028:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "12028:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_BatchBet_$745_memory_ptr",
												"nativeSrc": "11753:380:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11814:9:8",
														"nodeType": "YulTypedName",
														"src": "11814:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11825:7:8",
														"nodeType": "YulTypedName",
														"src": "11825:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11837:6:8",
														"nodeType": "YulTypedName",
														"src": "11837:6:8",
														"type": ""
													}
												],
												"src": "11753:380:8"
											},
											{
												"body": {
													"nativeSrc": "12293:288:8",
													"nodeType": "YulBlock",
													"src": "12293:288:8",
													"statements": [
														{
															"nativeSrc": "12303:26:8",
															"nodeType": "YulAssignment",
															"src": "12303:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12315:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "12315:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12326:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12326:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12311:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12311:3:8"
																},
																"nativeSrc": "12311:18:8",
																"nodeType": "YulFunctionCall",
																"src": "12311:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12303:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "12303:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12383:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "12383:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12396:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12396:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12407:1:8",
																				"nodeType": "YulLiteral",
																				"src": "12407:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12392:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12392:3:8"
																		},
																		"nativeSrc": "12392:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12392:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12339:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "12339:43:8"
																},
																"nativeSrc": "12339:71:8",
																"nodeType": "YulFunctionCall",
																"src": "12339:71:8"
															},
															"nativeSrc": "12339:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "12339:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12464:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "12464:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12477:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12477:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12488:2:8",
																				"nodeType": "YulLiteral",
																				"src": "12488:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12473:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12473:3:8"
																		},
																		"nativeSrc": "12473:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12473:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12420:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "12420:43:8"
																},
																"nativeSrc": "12420:72:8",
																"nodeType": "YulFunctionCall",
																"src": "12420:72:8"
															},
															"nativeSrc": "12420:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "12420:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "12546:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "12546:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12559:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12559:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12570:2:8",
																				"nodeType": "YulLiteral",
																				"src": "12570:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12555:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12555:3:8"
																		},
																		"nativeSrc": "12555:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12555:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12502:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "12502:43:8"
																},
																"nativeSrc": "12502:72:8",
																"nodeType": "YulFunctionCall",
																"src": "12502:72:8"
															},
															"nativeSrc": "12502:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "12502:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "12139:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12249:9:8",
														"nodeType": "YulTypedName",
														"src": "12249:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12261:6:8",
														"nodeType": "YulTypedName",
														"src": "12261:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12269:6:8",
														"nodeType": "YulTypedName",
														"src": "12269:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12277:6:8",
														"nodeType": "YulTypedName",
														"src": "12277:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12288:4:8",
														"nodeType": "YulTypedName",
														"src": "12288:4:8",
														"type": ""
													}
												],
												"src": "12139:442:8"
											},
											{
												"body": {
													"nativeSrc": "12632:149:8",
													"nodeType": "YulBlock",
													"src": "12632:149:8",
													"statements": [
														{
															"nativeSrc": "12642:25:8",
															"nodeType": "YulAssignment",
															"src": "12642:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12665:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "12665:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12647:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "12647:17:8"
																},
																"nativeSrc": "12647:20:8",
																"nodeType": "YulFunctionCall",
																"src": "12647:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12642:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "12642:1:8"
																}
															]
														},
														{
															"nativeSrc": "12676:25:8",
															"nodeType": "YulAssignment",
															"src": "12676:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12699:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "12699:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12681:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "12681:17:8"
																},
																"nativeSrc": "12681:20:8",
																"nodeType": "YulFunctionCall",
																"src": "12681:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12676:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "12676:1:8"
																}
															]
														},
														{
															"nativeSrc": "12710:17:8",
															"nodeType": "YulAssignment",
															"src": "12710:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12722:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "12722:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12725:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "12725:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "12718:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12718:3:8"
																},
																"nativeSrc": "12718:9:8",
																"nodeType": "YulFunctionCall",
																"src": "12718:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "12710:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "12710:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12752:22:8",
																"nodeType": "YulBlock",
																"src": "12752:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12754:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "12754:16:8"
																			},
																			"nativeSrc": "12754:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "12754:18:8"
																		},
																		"nativeSrc": "12754:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "12754:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "12743:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "12743:4:8"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "12749:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "12749:1:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12740:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "12740:2:8"
																},
																"nativeSrc": "12740:11:8",
																"nodeType": "YulFunctionCall",
																"src": "12740:11:8"
															},
															"nativeSrc": "12737:37:8",
															"nodeType": "YulIf",
															"src": "12737:37:8"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "12587:194:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12618:1:8",
														"nodeType": "YulTypedName",
														"src": "12618:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12621:1:8",
														"nodeType": "YulTypedName",
														"src": "12621:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "12627:4:8",
														"nodeType": "YulTypedName",
														"src": "12627:4:8",
														"type": ""
													}
												],
												"src": "12587:194:8"
											},
											{
												"body": {
													"nativeSrc": "12893:75:8",
													"nodeType": "YulBlock",
													"src": "12893:75:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12915:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "12915:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12923:1:8",
																				"nodeType": "YulLiteral",
																				"src": "12923:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12911:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12911:3:8"
																		},
																		"nativeSrc": "12911:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12911:14:8"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "12927:33:8",
																		"nodeType": "YulLiteral",
																		"src": "12927:33:8",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12904:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12904:6:8"
																},
																"nativeSrc": "12904:57:8",
																"nodeType": "YulFunctionCall",
																"src": "12904:57:8"
															},
															"nativeSrc": "12904:57:8",
															"nodeType": "YulExpressionStatement",
															"src": "12904:57:8"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "12787:181:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12885:6:8",
														"nodeType": "YulTypedName",
														"src": "12885:6:8",
														"type": ""
													}
												],
												"src": "12787:181:8"
											},
											{
												"body": {
													"nativeSrc": "13120:220:8",
													"nodeType": "YulBlock",
													"src": "13120:220:8",
													"statements": [
														{
															"nativeSrc": "13130:74:8",
															"nodeType": "YulAssignment",
															"src": "13130:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13196:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13196:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13201:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13201:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13137:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "13137:58:8"
																},
																"nativeSrc": "13137:67:8",
																"nodeType": "YulFunctionCall",
																"src": "13137:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13130:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13130:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13302:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13302:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "13213:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "13213:88:8"
																},
																"nativeSrc": "13213:93:8",
																"nodeType": "YulFunctionCall",
																"src": "13213:93:8"
															},
															"nativeSrc": "13213:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "13213:93:8"
														},
														{
															"nativeSrc": "13315:19:8",
															"nodeType": "YulAssignment",
															"src": "13315:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13326:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13326:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13331:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13331:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13322:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13322:3:8"
																},
																"nativeSrc": "13322:12:8",
																"nodeType": "YulFunctionCall",
																"src": "13322:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13315:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13315:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12974:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13108:3:8",
														"nodeType": "YulTypedName",
														"src": "13108:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13116:3:8",
														"nodeType": "YulTypedName",
														"src": "13116:3:8",
														"type": ""
													}
												],
												"src": "12974:366:8"
											},
											{
												"body": {
													"nativeSrc": "13517:248:8",
													"nodeType": "YulBlock",
													"src": "13517:248:8",
													"statements": [
														{
															"nativeSrc": "13527:26:8",
															"nodeType": "YulAssignment",
															"src": "13527:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13539:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "13539:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13550:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13550:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13535:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13535:3:8"
																},
																"nativeSrc": "13535:18:8",
																"nodeType": "YulFunctionCall",
																"src": "13535:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13527:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "13527:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13574:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13574:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13585:1:8",
																				"nodeType": "YulLiteral",
																				"src": "13585:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13570:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13570:3:8"
																		},
																		"nativeSrc": "13570:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13570:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13593:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "13593:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13599:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13599:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13589:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13589:3:8"
																		},
																		"nativeSrc": "13589:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13589:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13563:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13563:6:8"
																},
																"nativeSrc": "13563:47:8",
																"nodeType": "YulFunctionCall",
																"src": "13563:47:8"
															},
															"nativeSrc": "13563:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "13563:47:8"
														},
														{
															"nativeSrc": "13619:139:8",
															"nodeType": "YulAssignment",
															"src": "13619:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13753:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "13753:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13627:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "13627:124:8"
																},
																"nativeSrc": "13627:131:8",
																"nodeType": "YulFunctionCall",
																"src": "13627:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13619:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "13619:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13346:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13497:9:8",
														"nodeType": "YulTypedName",
														"src": "13497:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13512:4:8",
														"nodeType": "YulTypedName",
														"src": "13512:4:8",
														"type": ""
													}
												],
												"src": "13346:419:8"
											},
											{
												"body": {
													"nativeSrc": "13836:53:8",
													"nodeType": "YulBlock",
													"src": "13836:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13853:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13853:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13876:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "13876:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "13858:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "13858:17:8"
																		},
																		"nativeSrc": "13858:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13858:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13846:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13846:6:8"
																},
																"nativeSrc": "13846:37:8",
																"nodeType": "YulFunctionCall",
																"src": "13846:37:8"
															},
															"nativeSrc": "13846:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "13846:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "13771:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13824:5:8",
														"nodeType": "YulTypedName",
														"src": "13824:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13831:3:8",
														"nodeType": "YulTypedName",
														"src": "13831:3:8",
														"type": ""
													}
												],
												"src": "13771:118:8"
											},
											{
												"body": {
													"nativeSrc": "14049:288:8",
													"nodeType": "YulBlock",
													"src": "14049:288:8",
													"statements": [
														{
															"nativeSrc": "14059:26:8",
															"nodeType": "YulAssignment",
															"src": "14059:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14071:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "14071:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14082:2:8",
																		"nodeType": "YulLiteral",
																		"src": "14082:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14067:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14067:3:8"
																},
																"nativeSrc": "14067:18:8",
																"nodeType": "YulFunctionCall",
																"src": "14067:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14059:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "14059:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14139:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "14139:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14152:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "14152:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14163:1:8",
																				"nodeType": "YulLiteral",
																				"src": "14163:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14148:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14148:3:8"
																		},
																		"nativeSrc": "14148:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14148:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14095:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "14095:43:8"
																},
																"nativeSrc": "14095:71:8",
																"nodeType": "YulFunctionCall",
																"src": "14095:71:8"
															},
															"nativeSrc": "14095:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "14095:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14220:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "14220:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14233:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "14233:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14244:2:8",
																				"nodeType": "YulLiteral",
																				"src": "14244:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14229:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14229:3:8"
																		},
																		"nativeSrc": "14229:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14229:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14176:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "14176:43:8"
																},
																"nativeSrc": "14176:72:8",
																"nodeType": "YulFunctionCall",
																"src": "14176:72:8"
															},
															"nativeSrc": "14176:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "14176:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "14302:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "14302:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14315:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "14315:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14326:2:8",
																				"nodeType": "YulLiteral",
																				"src": "14326:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14311:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14311:3:8"
																		},
																		"nativeSrc": "14311:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14311:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14258:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "14258:43:8"
																},
																"nativeSrc": "14258:72:8",
																"nodeType": "YulFunctionCall",
																"src": "14258:72:8"
															},
															"nativeSrc": "14258:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "14258:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "13895:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14005:9:8",
														"nodeType": "YulTypedName",
														"src": "14005:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14017:6:8",
														"nodeType": "YulTypedName",
														"src": "14017:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14025:6:8",
														"nodeType": "YulTypedName",
														"src": "14025:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14033:6:8",
														"nodeType": "YulTypedName",
														"src": "14033:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14044:4:8",
														"nodeType": "YulTypedName",
														"src": "14044:4:8",
														"type": ""
													}
												],
												"src": "13895:442:8"
											},
											{
												"body": {
													"nativeSrc": "14469:206:8",
													"nodeType": "YulBlock",
													"src": "14469:206:8",
													"statements": [
														{
															"nativeSrc": "14479:26:8",
															"nodeType": "YulAssignment",
															"src": "14479:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14491:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "14491:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14502:2:8",
																		"nodeType": "YulLiteral",
																		"src": "14502:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14487:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14487:3:8"
																},
																"nativeSrc": "14487:18:8",
																"nodeType": "YulFunctionCall",
																"src": "14487:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14479:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "14479:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14559:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "14559:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14572:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "14572:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14583:1:8",
																				"nodeType": "YulLiteral",
																				"src": "14583:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14568:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14568:3:8"
																		},
																		"nativeSrc": "14568:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14568:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14515:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "14515:43:8"
																},
																"nativeSrc": "14515:71:8",
																"nodeType": "YulFunctionCall",
																"src": "14515:71:8"
															},
															"nativeSrc": "14515:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "14515:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14640:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "14640:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14653:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "14653:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14664:2:8",
																				"nodeType": "YulLiteral",
																				"src": "14664:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14649:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14649:3:8"
																		},
																		"nativeSrc": "14649:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14649:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14596:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "14596:43:8"
																},
																"nativeSrc": "14596:72:8",
																"nodeType": "YulFunctionCall",
																"src": "14596:72:8"
															},
															"nativeSrc": "14596:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "14596:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "14343:332:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14433:9:8",
														"nodeType": "YulTypedName",
														"src": "14433:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14445:6:8",
														"nodeType": "YulTypedName",
														"src": "14445:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14453:6:8",
														"nodeType": "YulTypedName",
														"src": "14453:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14464:4:8",
														"nodeType": "YulTypedName",
														"src": "14464:4:8",
														"type": ""
													}
												],
												"src": "14343:332:8"
											},
											{
												"body": {
													"nativeSrc": "14734:32:8",
													"nodeType": "YulBlock",
													"src": "14734:32:8",
													"statements": [
														{
															"nativeSrc": "14744:16:8",
															"nodeType": "YulAssignment",
															"src": "14744:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "14755:5:8",
																"nodeType": "YulIdentifier",
																"src": "14755:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "14744:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "14744:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_0_by_1",
												"nativeSrc": "14681:85:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14716:5:8",
														"nodeType": "YulTypedName",
														"src": "14716:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "14726:7:8",
														"nodeType": "YulTypedName",
														"src": "14726:7:8",
														"type": ""
													}
												],
												"src": "14681:85:8"
											},
											{
												"body": {
													"nativeSrc": "14804:28:8",
													"nodeType": "YulBlock",
													"src": "14804:28:8",
													"statements": [
														{
															"nativeSrc": "14814:12:8",
															"nodeType": "YulAssignment",
															"src": "14814:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "14821:5:8",
																"nodeType": "YulIdentifier",
																"src": "14821:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "14814:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14814:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "14772:60:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14790:5:8",
														"nodeType": "YulTypedName",
														"src": "14790:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "14800:3:8",
														"nodeType": "YulTypedName",
														"src": "14800:3:8",
														"type": ""
													}
												],
												"src": "14772:60:8"
											},
											{
												"body": {
													"nativeSrc": "14906:90:8",
													"nodeType": "YulBlock",
													"src": "14906:90:8",
													"statements": [
														{
															"nativeSrc": "14916:74:8",
															"nodeType": "YulAssignment",
															"src": "14916:74:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "14982:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "14982:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_0_by_1",
																					"nativeSrc": "14956:25:8",
																					"nodeType": "YulIdentifier",
																					"src": "14956:25:8"
																				},
																				"nativeSrc": "14956:32:8",
																				"nodeType": "YulFunctionCall",
																				"src": "14956:32:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "14947:8:8",
																			"nodeType": "YulIdentifier",
																			"src": "14947:8:8"
																		},
																		"nativeSrc": "14947:42:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14947:42:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14929:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "14929:17:8"
																},
																"nativeSrc": "14929:61:8",
																"nodeType": "YulFunctionCall",
																"src": "14929:61:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "14916:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "14916:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_0_by_1_to_t_uint256",
												"nativeSrc": "14838:158:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14886:5:8",
														"nodeType": "YulTypedName",
														"src": "14886:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "14896:9:8",
														"nodeType": "YulTypedName",
														"src": "14896:9:8",
														"type": ""
													}
												],
												"src": "14838:158:8"
											},
											{
												"body": {
													"nativeSrc": "15075:74:8",
													"nodeType": "YulBlock",
													"src": "15075:74:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15092:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "15092:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15136:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "15136:5:8"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_0_by_1_to_t_uint256",
																			"nativeSrc": "15097:38:8",
																			"nodeType": "YulIdentifier",
																			"src": "15097:38:8"
																		},
																		"nativeSrc": "15097:45:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15097:45:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15085:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15085:6:8"
																},
																"nativeSrc": "15085:58:8",
																"nodeType": "YulFunctionCall",
																"src": "15085:58:8"
															},
															"nativeSrc": "15085:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "15085:58:8"
														}
													]
												},
												"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
												"nativeSrc": "15002:147:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15063:5:8",
														"nodeType": "YulTypedName",
														"src": "15063:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "15070:3:8",
														"nodeType": "YulTypedName",
														"src": "15070:3:8",
														"type": ""
													}
												],
												"src": "15002:147:8"
											},
											{
												"body": {
													"nativeSrc": "15289:214:8",
													"nodeType": "YulBlock",
													"src": "15289:214:8",
													"statements": [
														{
															"nativeSrc": "15299:26:8",
															"nodeType": "YulAssignment",
															"src": "15299:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15311:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "15311:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15322:2:8",
																		"nodeType": "YulLiteral",
																		"src": "15322:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15307:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15307:3:8"
																},
																"nativeSrc": "15307:18:8",
																"nodeType": "YulFunctionCall",
																"src": "15307:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15299:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "15299:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15379:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "15379:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15392:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "15392:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15403:1:8",
																				"nodeType": "YulLiteral",
																				"src": "15403:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15388:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "15388:3:8"
																		},
																		"nativeSrc": "15388:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15388:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "15335:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "15335:43:8"
																},
																"nativeSrc": "15335:71:8",
																"nodeType": "YulFunctionCall",
																"src": "15335:71:8"
															},
															"nativeSrc": "15335:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "15335:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15468:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "15468:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15481:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "15481:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15492:2:8",
																				"nodeType": "YulLiteral",
																				"src": "15492:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15477:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "15477:3:8"
																		},
																		"nativeSrc": "15477:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15477:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nativeSrc": "15416:51:8",
																	"nodeType": "YulIdentifier",
																	"src": "15416:51:8"
																},
																"nativeSrc": "15416:80:8",
																"nodeType": "YulFunctionCall",
																"src": "15416:80:8"
															},
															"nativeSrc": "15416:80:8",
															"nodeType": "YulExpressionStatement",
															"src": "15416:80:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_rational_0_by_1__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "15155:348:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15253:9:8",
														"nodeType": "YulTypedName",
														"src": "15253:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15265:6:8",
														"nodeType": "YulTypedName",
														"src": "15265:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15273:6:8",
														"nodeType": "YulTypedName",
														"src": "15273:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15284:4:8",
														"nodeType": "YulTypedName",
														"src": "15284:4:8",
														"type": ""
													}
												],
												"src": "15155:348:8"
											},
											{
												"body": {
													"nativeSrc": "15607:124:8",
													"nodeType": "YulBlock",
													"src": "15607:124:8",
													"statements": [
														{
															"nativeSrc": "15617:26:8",
															"nodeType": "YulAssignment",
															"src": "15617:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15629:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "15629:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15640:2:8",
																		"nodeType": "YulLiteral",
																		"src": "15640:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15625:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15625:3:8"
																},
																"nativeSrc": "15625:18:8",
																"nodeType": "YulFunctionCall",
																"src": "15625:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15617:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "15617:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15697:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "15697:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15710:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "15710:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15721:1:8",
																				"nodeType": "YulLiteral",
																				"src": "15721:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15706:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "15706:3:8"
																		},
																		"nativeSrc": "15706:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15706:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "15653:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "15653:43:8"
																},
																"nativeSrc": "15653:71:8",
																"nodeType": "YulFunctionCall",
																"src": "15653:71:8"
															},
															"nativeSrc": "15653:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "15653:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "15509:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15579:9:8",
														"nodeType": "YulTypedName",
														"src": "15579:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15591:6:8",
														"nodeType": "YulTypedName",
														"src": "15591:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15602:4:8",
														"nodeType": "YulTypedName",
														"src": "15602:4:8",
														"type": ""
													}
												],
												"src": "15509:222:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // struct MarketRouter.BatchClaim[]\n    function abi_decode_t_array$_t_struct$_BatchClaim_$750_calldata_ptr_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x40)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_array$_t_struct$_BatchClaim_$750_calldata_ptr_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_struct$_BatchClaim_$750_calldata_ptr_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    // struct MarketRouter.BatchBet[]\n    function abi_decode_t_array$_t_struct$_BatchBet_$745_calldata_ptr_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x80)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$232(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$232(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$232(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$232(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20_$232(value)\n    }\n\n    function abi_decode_tuple_t_array$_t_struct$_BatchBet_$745_calldata_ptr_$dyn_calldata_ptrt_contract$_IERC20_$232(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_struct$_BatchBet_$745_calldata_ptr_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value2 := abi_decode_t_contract$_IERC20_$232(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_b6d7ef6bf90de195cf7085f44369095f3c2361b4a84702ba3e87c527107af23e(memPtr) {\n\n        mstore(add(memPtr, 0), \"No claims provided\")\n\n    }\n\n    function abi_encode_t_stringliteral_b6d7ef6bf90de195cf7085f44369095f3c2361b4a84702ba3e87c527107af23e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_b6d7ef6bf90de195cf7085f44369095f3c2361b4a84702ba3e87c527107af23e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b6d7ef6bf90de195cf7085f44369095f3c2361b4a84702ba3e87c527107af23e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b6d7ef6bf90de195cf7085f44369095f3c2361b4a84702ba3e87c527107af23e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    // struct MarketRouter.BatchClaim\n    function abi_decode_t_struct$_BatchClaim_$750_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x40) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x40)\n\n        {\n            // market\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_address(add(headStart, offset), end))\n\n        }\n\n        {\n            // marketId\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_BatchClaim_$750_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_BatchClaim_$750_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_8f5b6b0f857f6092db72772cde67d02693d3b7aad7ac8a9884b2c025cc9a84d1(memPtr) {\n\n        mstore(add(memPtr, 0), \"No bets provided\")\n\n    }\n\n    function abi_encode_t_stringliteral_8f5b6b0f857f6092db72772cde67d02693d3b7aad7ac8a9884b2c025cc9a84d1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_8f5b6b0f857f6092db72772cde67d02693d3b7aad7ac8a9884b2c025cc9a84d1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8f5b6b0f857f6092db72772cde67d02693d3b7aad7ac8a9884b2c025cc9a84d1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8f5b6b0f857f6092db72772cde67d02693d3b7aad7ac8a9884b2c025cc9a84d1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    // struct MarketRouter.BatchBet\n    function abi_decode_t_struct$_BatchBet_$745_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x80) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x80)\n\n        {\n            // market\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_address(add(headStart, offset), end))\n\n        }\n\n        {\n            // marketId\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // outcome\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // amount\n\n            let offset := 96\n\n            mstore(add(value, 0x60), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_BatchBet_$745_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_BatchBet_$745_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_rational_0_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_0_by_1(value)))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_rational_0_by_1__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610034575f3560e01c80638a48ca8514610038578063ead99b6114610054575b5f5ffd5b610052600480360381019061004d9190610849565b610070565b005b61006e60048036038101906100699190610954565b61020c565b005b61007861047f565b5f82829050116100bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100b490610a0b565b60405180910390fd5b5f5f90505f5f90505f5f90505b848490508110156101ad575f8585838181106100e9576100e8610a29565b5b9050604002018036038101906100ff9190610b8c565b9050805f015173ffffffffffffffffffffffffffffffffffffffff1663677bd9ff82602001516040518263ffffffff1660e01b81526004016101419190610bc6565b6020604051808303815f875af192505050801561017c57506040513d601f19601f820116820180604052508101906101799190610bf3565b60015b1561019f57808561018d9190610c4b565b9450838061019a90610c7e565b945050505b8180600101925050506100ca565b503373ffffffffffffffffffffffffffffffffffffffff167fb9c05773bac087c79ca346191a3f49b33e00ab1c6913f7788c9a3ec9391beab283836040516101f6929190610cc5565b60405180910390a250506102086104cc565b5050565b61021461047f565b5f8383905011610259576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025090610d36565b60405180910390fd5b5f5f90505f5f90505b848490508110156102a4578484828181106102805761027f610a29565b5b90506080020160600135826102959190610c4b565b91508080600101915050610262565b506102d23330838573ffffffffffffffffffffffffffffffffffffffff166104d5909392919063ffffffff16565b5f5f90505f5f90505b85859050811015610411575f8686838181106102fa576102f9610a29565b5b9050608002018036038101906103109190610dc9565b9050610344815f015182606001518773ffffffffffffffffffffffffffffffffffffffff166105579092919063ffffffff16565b805f015173ffffffffffffffffffffffffffffffffffffffff1663e71c96978260200151836040015184606001516040518463ffffffff1660e01b815260040161039093929190610df4565b5f604051808303815f87803b1580156103a7575f5ffd5b505af19250505080156103b8575060015b610402578060600151836103cc9190610c4b565b92506103fd3382606001518773ffffffffffffffffffffffffffffffffffffffff166106649092919063ffffffff16565b610403565b5b8180600101925050506102db565b503373ffffffffffffffffffffffffffffffffffffffff167ffaa3f3b5e4bd3185bc059a2498b70867fd2b41976ecd9d924e19972a00a007ee82846104569190610e29565b87879050604051610468929190610cc5565b60405180910390a2505061047a6104cc565b505050565b60025f54036104c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ba90610ea6565b60405180910390fd5b60025f81905550565b60015f81905550565b610551848573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161050a93929190610ed3565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506106e3565b50505050565b5f8373ffffffffffffffffffffffffffffffffffffffff1663095ea7b38484604051602401610587929190610f08565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506105d5848261077e565b61065e57610653848573ffffffffffffffffffffffffffffffffffffffff1663095ea7b3865f60405160240161060c929190610f71565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506106e3565b61065d84826106e3565b5b50505050565b6106de838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610697929190610f08565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506106e3565b505050565b5f5f60205f8451602086015f885af180610702576040513d5f823e3d81fd5b3d92505f519150505f821461071b576001811415610736565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561077857836040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161076f9190610f98565b60405180910390fd5b50505050565b5f5f5f5f60205f8651602088015f8a5af192503d91505f5190508280156107cc57505f82146107b057600181146107cb565b5f8673ffffffffffffffffffffffffffffffffffffffff163b115b5b935050505092915050565b5f604051905090565b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f840112610809576108086107e8565b5b8235905067ffffffffffffffff811115610826576108256107ec565b5b602083019150836040820283011115610842576108416107f0565b5b9250929050565b5f5f6020838503121561085f5761085e6107e0565b5b5f83013567ffffffffffffffff81111561087c5761087b6107e4565b5b610888858286016107f4565b92509250509250929050565b5f5f83601f8401126108a9576108a86107e8565b5b8235905067ffffffffffffffff8111156108c6576108c56107ec565b5b6020830191508360808202830111156108e2576108e16107f0565b5b9250929050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610912826108e9565b9050919050565b5f61092382610908565b9050919050565b61093381610919565b811461093d575f5ffd5b50565b5f8135905061094e8161092a565b92915050565b5f5f5f6040848603121561096b5761096a6107e0565b5b5f84013567ffffffffffffffff811115610988576109876107e4565b5b61099486828701610894565b935093505060206109a786828701610940565b9150509250925092565b5f82825260208201905092915050565b7f4e6f20636c61696d732070726f766964656400000000000000000000000000005f82015250565b5f6109f56012836109b1565b9150610a00826109c1565b602082019050919050565b5f6020820190508181035f830152610a22816109e9565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b610aa082610a5a565b810181811067ffffffffffffffff82111715610abf57610abe610a6a565b5b80604052505050565b5f610ad16107d7565b9050610add8282610a97565b919050565b610aeb81610908565b8114610af5575f5ffd5b50565b5f81359050610b0681610ae2565b92915050565b5f819050919050565b610b1e81610b0c565b8114610b28575f5ffd5b50565b5f81359050610b3981610b15565b92915050565b5f60408284031215610b5457610b53610a56565b5b610b5e6040610ac8565b90505f610b6d84828501610af8565b5f830152506020610b8084828501610b2b565b60208301525092915050565b5f60408284031215610ba157610ba06107e0565b5b5f610bae84828501610b3f565b91505092915050565b610bc081610b0c565b82525050565b5f602082019050610bd95f830184610bb7565b92915050565b5f81519050610bed81610b15565b92915050565b5f60208284031215610c0857610c076107e0565b5b5f610c1584828501610bdf565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610c5582610b0c565b9150610c6083610b0c565b9250828201905080821115610c7857610c77610c1e565b5b92915050565b5f610c8882610b0c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610cba57610cb9610c1e565b5b600182019050919050565b5f604082019050610cd85f830185610bb7565b610ce56020830184610bb7565b9392505050565b7f4e6f20626574732070726f7669646564000000000000000000000000000000005f82015250565b5f610d206010836109b1565b9150610d2b82610cec565b602082019050919050565b5f6020820190508181035f830152610d4d81610d14565b9050919050565b5f60808284031215610d6957610d68610a56565b5b610d736080610ac8565b90505f610d8284828501610af8565b5f830152506020610d9584828501610b2b565b6020830152506040610da984828501610b2b565b6040830152506060610dbd84828501610b2b565b60608301525092915050565b5f60808284031215610dde57610ddd6107e0565b5b5f610deb84828501610d54565b91505092915050565b5f606082019050610e075f830186610bb7565b610e146020830185610bb7565b610e216040830184610bb7565b949350505050565b5f610e3382610b0c565b9150610e3e83610b0c565b9250828203905081811115610e5657610e55610c1e565b5b92915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f610e90601f836109b1565b9150610e9b82610e5c565b602082019050919050565b5f6020820190508181035f830152610ebd81610e84565b9050919050565b610ecd81610908565b82525050565b5f606082019050610ee65f830186610ec4565b610ef36020830185610ec4565b610f006040830184610bb7565b949350505050565b5f604082019050610f1b5f830185610ec4565b610f286020830184610bb7565b9392505050565b5f819050919050565b5f819050919050565b5f610f5b610f56610f5184610f2f565b610f38565b610b0c565b9050919050565b610f6b81610f41565b82525050565b5f604082019050610f845f830185610ec4565b610f916020830184610f62565b9392505050565b5f602082019050610fab5f830184610ec4565b9291505056fea2646970667358221220c9c7ee0b992320b5919878dbad6955358d855382413328a7da5ad5093441455264736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8A48CA85 EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0xEAD99B61 EQ PUSH2 0x54 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x52 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D SWAP2 SWAP1 PUSH2 0x849 JUMP JUMPDEST PUSH2 0x70 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x69 SWAP2 SWAP1 PUSH2 0x954 JUMP JUMPDEST PUSH2 0x20C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x78 PUSH2 0x47F JUMP JUMPDEST PUSH0 DUP3 DUP3 SWAP1 POP GT PUSH2 0xBD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB4 SWAP1 PUSH2 0xA0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 SWAP1 POP PUSH0 PUSH0 SWAP1 POP PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP5 DUP5 SWAP1 POP DUP2 LT ISZERO PUSH2 0x1AD JUMPI PUSH0 DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0xE9 JUMPI PUSH2 0xE8 PUSH2 0xA29 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x40 MUL ADD DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFF SWAP2 SWAP1 PUSH2 0xB8C JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x677BD9FF DUP3 PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xBC6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x17C JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x179 SWAP2 SWAP1 PUSH2 0xBF3 JUMP JUMPDEST PUSH1 0x1 JUMPDEST ISZERO PUSH2 0x19F JUMPI DUP1 DUP6 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0xC4B JUMP JUMPDEST SWAP5 POP DUP4 DUP1 PUSH2 0x19A SWAP1 PUSH2 0xC7E JUMP JUMPDEST SWAP5 POP POP POP JUMPDEST DUP2 DUP1 PUSH1 0x1 ADD SWAP3 POP POP POP PUSH2 0xCA JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB9C05773BAC087C79CA346191A3F49B33E00AB1C6913F7788C9A3EC9391BEAB2 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1F6 SWAP3 SWAP2 SWAP1 PUSH2 0xCC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x208 PUSH2 0x4CC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x214 PUSH2 0x47F JUMP JUMPDEST PUSH0 DUP4 DUP4 SWAP1 POP GT PUSH2 0x259 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x250 SWAP1 PUSH2 0xD36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 SWAP1 POP PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP5 DUP5 SWAP1 POP DUP2 LT ISZERO PUSH2 0x2A4 JUMPI DUP5 DUP5 DUP3 DUP2 DUP2 LT PUSH2 0x280 JUMPI PUSH2 0x27F PUSH2 0xA29 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x80 MUL ADD PUSH1 0x60 ADD CALLDATALOAD DUP3 PUSH2 0x295 SWAP2 SWAP1 PUSH2 0xC4B JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x262 JUMP JUMPDEST POP PUSH2 0x2D2 CALLER ADDRESS DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4D5 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP6 DUP6 SWAP1 POP DUP2 LT ISZERO PUSH2 0x411 JUMPI PUSH0 DUP7 DUP7 DUP4 DUP2 DUP2 LT PUSH2 0x2FA JUMPI PUSH2 0x2F9 PUSH2 0xA29 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x80 MUL ADD DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x310 SWAP2 SWAP1 PUSH2 0xDC9 JUMP JUMPDEST SWAP1 POP PUSH2 0x344 DUP2 PUSH0 ADD MLOAD DUP3 PUSH1 0x60 ADD MLOAD DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x557 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE71C9697 DUP3 PUSH1 0x20 ADD MLOAD DUP4 PUSH1 0x40 ADD MLOAD DUP5 PUSH1 0x60 ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x390 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDF4 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3A7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x3B8 JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0x402 JUMPI DUP1 PUSH1 0x60 ADD MLOAD DUP4 PUSH2 0x3CC SWAP2 SWAP1 PUSH2 0xC4B JUMP JUMPDEST SWAP3 POP PUSH2 0x3FD CALLER DUP3 PUSH1 0x60 ADD MLOAD DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x664 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x403 JUMP JUMPDEST JUMPDEST DUP2 DUP1 PUSH1 0x1 ADD SWAP3 POP POP POP PUSH2 0x2DB JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFAA3F3B5E4BD3185BC059A2498B70867FD2B41976ECD9D924E19972A00A007EE DUP3 DUP5 PUSH2 0x456 SWAP2 SWAP1 PUSH2 0xE29 JUMP JUMPDEST DUP8 DUP8 SWAP1 POP PUSH1 0x40 MLOAD PUSH2 0x468 SWAP3 SWAP2 SWAP1 PUSH2 0xCC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x47A PUSH2 0x4CC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x4C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BA SWAP1 PUSH2 0xEA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x551 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x50A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xED3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x6E3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x587 SWAP3 SWAP2 SWAP1 PUSH2 0xF08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH2 0x5D5 DUP5 DUP3 PUSH2 0x77E JUMP JUMPDEST PUSH2 0x65E JUMPI PUSH2 0x653 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 DUP7 PUSH0 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x60C SWAP3 SWAP2 SWAP1 PUSH2 0xF71 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x6E3 JUMP JUMPDEST PUSH2 0x65D DUP5 DUP3 PUSH2 0x6E3 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x6DE DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x697 SWAP3 SWAP2 SWAP1 PUSH2 0xF08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x6E3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x702 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x71B JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x736 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x778 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76F SWAP2 SWAP1 PUSH2 0xF98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP7 MLOAD PUSH1 0x20 DUP9 ADD PUSH0 DUP11 GAS CALL SWAP3 POP RETURNDATASIZE SWAP2 POP PUSH0 MLOAD SWAP1 POP DUP3 DUP1 ISZERO PUSH2 0x7CC JUMPI POP PUSH0 DUP3 EQ PUSH2 0x7B0 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x7CB JUMP JUMPDEST PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT JUMPDEST JUMPDEST SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x809 JUMPI PUSH2 0x808 PUSH2 0x7E8 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x826 JUMPI PUSH2 0x825 PUSH2 0x7EC JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x40 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x842 JUMPI PUSH2 0x841 PUSH2 0x7F0 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x85F JUMPI PUSH2 0x85E PUSH2 0x7E0 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x87C JUMPI PUSH2 0x87B PUSH2 0x7E4 JUMP JUMPDEST JUMPDEST PUSH2 0x888 DUP6 DUP3 DUP7 ADD PUSH2 0x7F4 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x8A9 JUMPI PUSH2 0x8A8 PUSH2 0x7E8 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8C6 JUMPI PUSH2 0x8C5 PUSH2 0x7EC JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x80 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x8E2 JUMPI PUSH2 0x8E1 PUSH2 0x7F0 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x912 DUP3 PUSH2 0x8E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x923 DUP3 PUSH2 0x908 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x933 DUP2 PUSH2 0x919 JUMP JUMPDEST DUP2 EQ PUSH2 0x93D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x94E DUP2 PUSH2 0x92A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x96B JUMPI PUSH2 0x96A PUSH2 0x7E0 JUMP JUMPDEST JUMPDEST PUSH0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x988 JUMPI PUSH2 0x987 PUSH2 0x7E4 JUMP JUMPDEST JUMPDEST PUSH2 0x994 DUP7 DUP3 DUP8 ADD PUSH2 0x894 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x20 PUSH2 0x9A7 DUP7 DUP3 DUP8 ADD PUSH2 0x940 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F20636C61696D732070726F76696465640000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x9F5 PUSH1 0x12 DUP4 PUSH2 0x9B1 JUMP JUMPDEST SWAP2 POP PUSH2 0xA00 DUP3 PUSH2 0x9C1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA22 DUP2 PUSH2 0x9E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0xAA0 DUP3 PUSH2 0xA5A JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xABF JUMPI PUSH2 0xABE PUSH2 0xA6A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xAD1 PUSH2 0x7D7 JUMP JUMPDEST SWAP1 POP PUSH2 0xADD DUP3 DUP3 PUSH2 0xA97 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAEB DUP2 PUSH2 0x908 JUMP JUMPDEST DUP2 EQ PUSH2 0xAF5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB06 DUP2 PUSH2 0xAE2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB1E DUP2 PUSH2 0xB0C JUMP JUMPDEST DUP2 EQ PUSH2 0xB28 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB39 DUP2 PUSH2 0xB15 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB54 JUMPI PUSH2 0xB53 PUSH2 0xA56 JUMP JUMPDEST JUMPDEST PUSH2 0xB5E PUSH1 0x40 PUSH2 0xAC8 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xB6D DUP5 DUP3 DUP6 ADD PUSH2 0xAF8 JUMP JUMPDEST PUSH0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0xB80 DUP5 DUP3 DUP6 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBA1 JUMPI PUSH2 0xBA0 PUSH2 0x7E0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBAE DUP5 DUP3 DUP6 ADD PUSH2 0xB3F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBC0 DUP2 PUSH2 0xB0C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBD9 PUSH0 DUP4 ADD DUP5 PUSH2 0xBB7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xBED DUP2 PUSH2 0xB15 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC08 JUMPI PUSH2 0xC07 PUSH2 0x7E0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC15 DUP5 DUP3 DUP6 ADD PUSH2 0xBDF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xC55 DUP3 PUSH2 0xB0C JUMP JUMPDEST SWAP2 POP PUSH2 0xC60 DUP4 PUSH2 0xB0C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xC78 JUMPI PUSH2 0xC77 PUSH2 0xC1E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC88 DUP3 PUSH2 0xB0C JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0xCBA JUMPI PUSH2 0xCB9 PUSH2 0xC1E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xCD8 PUSH0 DUP4 ADD DUP6 PUSH2 0xBB7 JUMP JUMPDEST PUSH2 0xCE5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xBB7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E6F20626574732070726F766964656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD20 PUSH1 0x10 DUP4 PUSH2 0x9B1 JUMP JUMPDEST SWAP2 POP PUSH2 0xD2B DUP3 PUSH2 0xCEC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD4D DUP2 PUSH2 0xD14 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD69 JUMPI PUSH2 0xD68 PUSH2 0xA56 JUMP JUMPDEST JUMPDEST PUSH2 0xD73 PUSH1 0x80 PUSH2 0xAC8 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xD82 DUP5 DUP3 DUP6 ADD PUSH2 0xAF8 JUMP JUMPDEST PUSH0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0xD95 DUP5 DUP3 DUP6 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0xDA9 DUP5 DUP3 DUP6 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0xDBD DUP5 DUP3 DUP6 ADD PUSH2 0xB2B JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDDE JUMPI PUSH2 0xDDD PUSH2 0x7E0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDEB DUP5 DUP3 DUP6 ADD PUSH2 0xD54 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xE07 PUSH0 DUP4 ADD DUP7 PUSH2 0xBB7 JUMP JUMPDEST PUSH2 0xE14 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xBB7 JUMP JUMPDEST PUSH2 0xE21 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xBB7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE33 DUP3 PUSH2 0xB0C JUMP JUMPDEST SWAP2 POP PUSH2 0xE3E DUP4 PUSH2 0xB0C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xE56 JUMPI PUSH2 0xE55 PUSH2 0xC1E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE90 PUSH1 0x1F DUP4 PUSH2 0x9B1 JUMP JUMPDEST SWAP2 POP PUSH2 0xE9B DUP3 PUSH2 0xE5C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEBD DUP2 PUSH2 0xE84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xECD DUP2 PUSH2 0x908 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xEE6 PUSH0 DUP4 ADD DUP7 PUSH2 0xEC4 JUMP JUMPDEST PUSH2 0xEF3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xEC4 JUMP JUMPDEST PUSH2 0xF00 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xBB7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF1B PUSH0 DUP4 ADD DUP6 PUSH2 0xEC4 JUMP JUMPDEST PUSH2 0xF28 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xBB7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF5B PUSH2 0xF56 PUSH2 0xF51 DUP5 PUSH2 0xF2F JUMP JUMPDEST PUSH2 0xF38 JUMP JUMPDEST PUSH2 0xB0C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF6B DUP2 PUSH2 0xF41 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF84 PUSH0 DUP4 ADD DUP6 PUSH2 0xEC4 JUMP JUMPDEST PUSH2 0xF91 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF62 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFAB PUSH0 DUP4 ADD DUP5 PUSH2 0xEC4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 0xC7 RETURNCONTRACT 0xB SWAP10 0x23 KECCAK256 0xB5 SWAP2 SWAP9 PUSH25 0xDBAD6955358D855382413328A7DA5AD5093441455264736F6C PUSH4 0x4300081E STOP CALLER ",
							"sourceMap": "445:2276:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1975:743;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;954:1009;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1975:743;2261:21:3;:19;:21::i;:::-;2082:1:7::1;2066:6;;:13;;:17;2058:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;2127:20;2150:1;2127:24;;2162;2189:1;2162:28;;2216:9;2228:1;2216:13;;2211:412;2235:6;;:13;;2231:1;:17;2211:412;;;2267:23;2293:6;;2300:1;2293:9;;;;;;;:::i;:::-;;;;;;;2267:35;;;;;;;;;;:::i;:::-;;;2352:5;:12;;;2335:44;;;2380:5;:14;;;2335:60;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;2331:247:::0;::::1;;2457:7;2441:23;;;;;:::i;:::-;;;2483:18;;;;;:::i;:::-;;;;2396:121;2331:247;2606:3;;;;;;;2252:371;2211:412;;;;2667:10;2648:62;;;2679:12;2693:16;2648:62;;;;;;;:::i;:::-;;;;;;;;2047:671;;2303:20:3::0;:18;:20::i;:::-;1975:743:7;;:::o;954:1009::-;2261:21:3;:19;:21::i;:::-;1073:1:7::1;1059:4;;:11;;:15;1051:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;1116:19;1138:1;1116:23;;1155:9;1167:1;1155:13;;1150:127;1174:4;;:11;;1170:1;:15;1150:127;;;1219:4;;1224:1;1219:7;;;;;;;:::i;:::-;;;;;;;:14;;;1204:29;;;;;:::i;:::-;;;1260:3;;;;;;;1150:127;;;;1326:62;1349:10;1369:4;1376:11;1326:5;:22;;;;:62;;;;;;:::i;:::-;1427:16;1446:1;1427:20;;1460:9;1472:1;1460:13;;1455:410;1479:4;;:11;;1475:1;:15;1455:410;;;1501:19;1523:4;;1528:1;1523:7;;;;;;;:::i;:::-;;;;;;;1501:29;;;;;;;;;;:::i;:::-;;;1571:42;1590:3;:10;;;1602:3;:10;;;1571:5;:18;;;;:42;;;;;:::i;:::-;1647:3;:10;;;1630:37;;;1668:3;:12;;;1682:3;:11;;;1695:3;:10;;;1630:76;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1626:210;;1765:3;:10;;;1753:22;;;;;:::i;:::-;;;1786:42;1805:10;1817:3;:10;;;1786:5;:18;;;;:42;;;;;:::i;:::-;1626:210;;;;1856:3;;;;;;;1494:371;1455:410;;;;1907:10;1892:63;;;1933:8;1919:11;:22;;;;:::i;:::-;1943:4;;:11;;1892:63;;;;;;;:::i;:::-;;;;;;;;1040:923;;2303:20:3::0;:18;:20::i;:::-;954:1009:7;;;:::o;2336:287:3:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;2629:209::-;1716:1;2809:7;:22;;;;2629:209::o;1618:188:5:-;1718:81;1738:5;1760;:18;;;1781:4;1787:2;1791:5;1745:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1718:19;:81::i;:::-;1618:188;;;;:::o;5084:380::-;5171:25;5214:5;:13;;;5230:7;5239:5;5199:47;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5171:75;;5262:44;5286:5;5293:12;5262:23;:44::i;:::-;5257:201;;5322:71;5342:5;5364;:13;;;5380:7;5389:1;5349:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5322:19;:71::i;:::-;5407:40;5427:5;5434:12;5407:19;:40::i;:::-;5257:201;5161:303;5084:380;;;:::o;1219:160::-;1301:71;1321:5;1343;:14;;;1360:2;1364:5;1328:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;8370:720::-;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;8866:16;8852:30;;8916:1;8910:8;8895:23;;8532:396;8956:1;8942:10;:15;:68;;9009:1;8994:11;:16;;8942:68;;;8990:1;8968:5;8960:26;;;:31;8942:68;8938:146;;;9066:5;9033:40;;;;;;;;;;;:::i;:::-;;;;;;;;8938:146;8440:650;;8370:720;;:::o;9592:480::-;9675:4;9691:12;9713:18;9741:19;9875:4;9872:1;9865:4;9859:11;9852:4;9846;9842:15;9839:1;9832:5;9825;9820:60;9809:71;;9907:16;9893:30;;9957:1;9951:8;9936:23;;9985:7;:80;;;;;10011:1;9997:10;:15;:67;;10063:1;10048:11;:16;9997:67;;;10044:1;10023:5;10015:26;;;:30;9997:67;9985:80;9978:87;;;;;9592:480;;;;:::o;7:75:8:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:117;689:1;686;679:12;743:597;845:8;855:6;905:3;898:4;890:6;886:17;882:27;872:122;;913:79;;:::i;:::-;872:122;1026:6;1013:20;1003:30;;1056:18;1048:6;1045:30;1042:117;;;1078:79;;:::i;:::-;1042:117;1192:4;1184:6;1180:17;1168:29;;1246:3;1238:4;1230:6;1226:17;1216:8;1212:32;1209:41;1206:128;;;1253:79;;:::i;:::-;1206:128;743:597;;;;;:::o;1346:617::-;1461:6;1469;1518:2;1506:9;1497:7;1493:23;1489:32;1486:119;;;1524:79;;:::i;:::-;1486:119;1672:1;1661:9;1657:17;1644:31;1702:18;1694:6;1691:30;1688:117;;;1724:79;;:::i;:::-;1688:117;1837:109;1938:7;1929:6;1918:9;1914:22;1837:109;:::i;:::-;1819:127;;;;1615:341;1346:617;;;;;:::o;2007:595::-;2107:8;2117:6;2167:3;2160:4;2152:6;2148:17;2144:27;2134:122;;2175:79;;:::i;:::-;2134:122;2288:6;2275:20;2265:30;;2318:18;2310:6;2307:30;2304:117;;;2340:79;;:::i;:::-;2304:117;2454:4;2446:6;2442:17;2430:29;;2508:3;2500:4;2492:6;2488:17;2478:8;2474:32;2471:41;2468:128;;;2515:79;;:::i;:::-;2468:128;2007:595;;;;;:::o;2608:126::-;2645:7;2685:42;2678:5;2674:54;2663:65;;2608:126;;;:::o;2740:96::-;2777:7;2806:24;2824:5;2806:24;:::i;:::-;2795:35;;2740:96;;;:::o;2842:110::-;2893:7;2922:24;2940:5;2922:24;:::i;:::-;2911:35;;2842:110;;;:::o;2958:150::-;3045:38;3077:5;3045:38;:::i;:::-;3038:5;3035:49;3025:77;;3098:1;3095;3088:12;3025:77;2958:150;:::o;3114:167::-;3174:5;3212:6;3199:20;3190:29;;3228:47;3269:5;3228:47;:::i;:::-;3114:167;;;;:::o;3287:786::-;3423:6;3431;3439;3488:2;3476:9;3467:7;3463:23;3459:32;3456:119;;;3494:79;;:::i;:::-;3456:119;3642:1;3631:9;3627:17;3614:31;3672:18;3664:6;3661:30;3658:117;;;3694:79;;:::i;:::-;3658:117;3807:107;3906:7;3897:6;3886:9;3882:22;3807:107;:::i;:::-;3789:125;;;;3585:339;3963:2;3989:67;4048:7;4039:6;4028:9;4024:22;3989:67;:::i;:::-;3979:77;;3934:132;3287:786;;;;;:::o;4079:169::-;4163:11;4197:6;4192:3;4185:19;4237:4;4232:3;4228:14;4213:29;;4079:169;;;;:::o;4254:168::-;4394:20;4390:1;4382:6;4378:14;4371:44;4254:168;:::o;4428:366::-;4570:3;4591:67;4655:2;4650:3;4591:67;:::i;:::-;4584:74;;4667:93;4756:3;4667:93;:::i;:::-;4785:2;4780:3;4776:12;4769:19;;4428:366;;;:::o;4800:419::-;4966:4;5004:2;4993:9;4989:18;4981:26;;5053:9;5047:4;5043:20;5039:1;5028:9;5024:17;5017:47;5081:131;5207:4;5081:131;:::i;:::-;5073:139;;4800:419;;;:::o;5225:180::-;5273:77;5270:1;5263:88;5370:4;5367:1;5360:15;5394:4;5391:1;5384:15;5411:117;5520:1;5517;5510:12;5534:102;5575:6;5626:2;5622:7;5617:2;5610:5;5606:14;5602:28;5592:38;;5534:102;;;:::o;5642:180::-;5690:77;5687:1;5680:88;5787:4;5784:1;5777:15;5811:4;5808:1;5801:15;5828:281;5911:27;5933:4;5911:27;:::i;:::-;5903:6;5899:40;6041:6;6029:10;6026:22;6005:18;5993:10;5990:34;5987:62;5984:88;;;6052:18;;:::i;:::-;5984:88;6092:10;6088:2;6081:22;5871:238;5828:281;;:::o;6115:129::-;6149:6;6176:20;;:::i;:::-;6166:30;;6205:33;6233:4;6225:6;6205:33;:::i;:::-;6115:129;;;:::o;6373:122::-;6446:24;6464:5;6446:24;:::i;:::-;6439:5;6436:35;6426:63;;6485:1;6482;6475:12;6426:63;6373:122;:::o;6501:139::-;6547:5;6585:6;6572:20;6563:29;;6601:33;6628:5;6601:33;:::i;:::-;6501:139;;;;:::o;6646:77::-;6683:7;6712:5;6701:16;;6646:77;;;:::o;6729:122::-;6802:24;6820:5;6802:24;:::i;:::-;6795:5;6792:35;6782:63;;6841:1;6838;6831:12;6782:63;6729:122;:::o;6857:139::-;6903:5;6941:6;6928:20;6919:29;;6957:33;6984:5;6957:33;:::i;:::-;6857:139;;;;:::o;7040:582::-;7116:5;7160:4;7148:9;7143:3;7139:19;7135:30;7132:117;;;7168:79;;:::i;:::-;7132:117;7267:21;7283:4;7267:21;:::i;:::-;7258:30;;7349:1;7389:49;7434:3;7425:6;7414:9;7410:22;7389:49;:::i;:::-;7382:4;7375:5;7371:16;7364:75;7298:152;7513:2;7554:49;7599:3;7590:6;7579:9;7575:22;7554:49;:::i;:::-;7547:4;7540:5;7536:16;7529:75;7460:155;7040:582;;;;:::o;7628:383::-;7714:6;7763:2;7751:9;7742:7;7738:23;7734:32;7731:119;;;7769:79;;:::i;:::-;7731:119;7889:1;7914:80;7986:7;7977:6;7966:9;7962:22;7914:80;:::i;:::-;7904:90;;7860:144;7628:383;;;;:::o;8017:118::-;8104:24;8122:5;8104:24;:::i;:::-;8099:3;8092:37;8017:118;;:::o;8141:222::-;8234:4;8272:2;8261:9;8257:18;8249:26;;8285:71;8353:1;8342:9;8338:17;8329:6;8285:71;:::i;:::-;8141:222;;;;:::o;8369:143::-;8426:5;8457:6;8451:13;8442:22;;8473:33;8500:5;8473:33;:::i;:::-;8369:143;;;;:::o;8518:351::-;8588:6;8637:2;8625:9;8616:7;8612:23;8608:32;8605:119;;;8643:79;;:::i;:::-;8605:119;8763:1;8788:64;8844:7;8835:6;8824:9;8820:22;8788:64;:::i;:::-;8778:74;;8734:128;8518:351;;;;:::o;8875:180::-;8923:77;8920:1;8913:88;9020:4;9017:1;9010:15;9044:4;9041:1;9034:15;9061:191;9101:3;9120:20;9138:1;9120:20;:::i;:::-;9115:25;;9154:20;9172:1;9154:20;:::i;:::-;9149:25;;9197:1;9194;9190:9;9183:16;;9218:3;9215:1;9212:10;9209:36;;;9225:18;;:::i;:::-;9209:36;9061:191;;;;:::o;9258:233::-;9297:3;9320:24;9338:5;9320:24;:::i;:::-;9311:33;;9366:66;9359:5;9356:77;9353:103;;9436:18;;:::i;:::-;9353:103;9483:1;9476:5;9472:13;9465:20;;9258:233;;;:::o;9497:332::-;9618:4;9656:2;9645:9;9641:18;9633:26;;9669:71;9737:1;9726:9;9722:17;9713:6;9669:71;:::i;:::-;9750:72;9818:2;9807:9;9803:18;9794:6;9750:72;:::i;:::-;9497:332;;;;;:::o;9835:166::-;9975:18;9971:1;9963:6;9959:14;9952:42;9835:166;:::o;10007:366::-;10149:3;10170:67;10234:2;10229:3;10170:67;:::i;:::-;10163:74;;10246:93;10335:3;10246:93;:::i;:::-;10364:2;10359:3;10355:12;10348:19;;10007:366;;;:::o;10379:419::-;10545:4;10583:2;10572:9;10568:18;10560:26;;10632:9;10626:4;10622:20;10618:1;10607:9;10603:17;10596:47;10660:131;10786:4;10660:131;:::i;:::-;10652:139;;10379:419;;;:::o;10840:907::-;10914:5;10958:4;10946:9;10941:3;10937:19;10933:30;10930:117;;;10966:79;;:::i;:::-;10930:117;11065:21;11081:4;11065:21;:::i;:::-;11056:30;;11147:1;11187:49;11232:3;11223:6;11212:9;11208:22;11187:49;:::i;:::-;11180:4;11173:5;11169:16;11162:75;11096:152;11311:2;11352:49;11397:3;11388:6;11377:9;11373:22;11352:49;:::i;:::-;11345:4;11338:5;11334:16;11327:75;11258:155;11475:2;11516:49;11561:3;11552:6;11541:9;11537:22;11516:49;:::i;:::-;11509:4;11502:5;11498:16;11491:75;11423:154;11638:2;11679:49;11724:3;11715:6;11704:9;11700:22;11679:49;:::i;:::-;11672:4;11665:5;11661:16;11654:75;11587:153;10840:907;;;;:::o;11753:380::-;11837:6;11886:3;11874:9;11865:7;11861:23;11857:33;11854:120;;;11893:79;;:::i;:::-;11854:120;12013:1;12038:78;12108:7;12099:6;12088:9;12084:22;12038:78;:::i;:::-;12028:88;;11984:142;11753:380;;;;:::o;12139:442::-;12288:4;12326:2;12315:9;12311:18;12303:26;;12339:71;12407:1;12396:9;12392:17;12383:6;12339:71;:::i;:::-;12420:72;12488:2;12477:9;12473:18;12464:6;12420:72;:::i;:::-;12502;12570:2;12559:9;12555:18;12546:6;12502:72;:::i;:::-;12139:442;;;;;;:::o;12587:194::-;12627:4;12647:20;12665:1;12647:20;:::i;:::-;12642:25;;12681:20;12699:1;12681:20;:::i;:::-;12676:25;;12725:1;12722;12718:9;12710:17;;12749:1;12743:4;12740:11;12737:37;;;12754:18;;:::i;:::-;12737:37;12587:194;;;;:::o;12787:181::-;12927:33;12923:1;12915:6;12911:14;12904:57;12787:181;:::o;12974:366::-;13116:3;13137:67;13201:2;13196:3;13137:67;:::i;:::-;13130:74;;13213:93;13302:3;13213:93;:::i;:::-;13331:2;13326:3;13322:12;13315:19;;12974:366;;;:::o;13346:419::-;13512:4;13550:2;13539:9;13535:18;13527:26;;13599:9;13593:4;13589:20;13585:1;13574:9;13570:17;13563:47;13627:131;13753:4;13627:131;:::i;:::-;13619:139;;13346:419;;;:::o;13771:118::-;13858:24;13876:5;13858:24;:::i;:::-;13853:3;13846:37;13771:118;;:::o;13895:442::-;14044:4;14082:2;14071:9;14067:18;14059:26;;14095:71;14163:1;14152:9;14148:17;14139:6;14095:71;:::i;:::-;14176:72;14244:2;14233:9;14229:18;14220:6;14176:72;:::i;:::-;14258;14326:2;14315:9;14311:18;14302:6;14258:72;:::i;:::-;13895:442;;;;;;:::o;14343:332::-;14464:4;14502:2;14491:9;14487:18;14479:26;;14515:71;14583:1;14572:9;14568:17;14559:6;14515:71;:::i;:::-;14596:72;14664:2;14653:9;14649:18;14640:6;14596:72;:::i;:::-;14343:332;;;;;:::o;14681:85::-;14726:7;14755:5;14744:16;;14681:85;;;:::o;14772:60::-;14800:3;14821:5;14814:12;;14772:60;;;:::o;14838:158::-;14896:9;14929:61;14947:42;14956:32;14982:5;14956:32;:::i;:::-;14947:42;:::i;:::-;14929:61;:::i;:::-;14916:74;;14838:158;;;:::o;15002:147::-;15097:45;15136:5;15097:45;:::i;:::-;15092:3;15085:58;15002:147;;:::o;15155:348::-;15284:4;15322:2;15311:9;15307:18;15299:26;;15335:71;15403:1;15392:9;15388:17;15379:6;15335:71;:::i;:::-;15416:80;15492:2;15481:9;15477:18;15468:6;15416:80;:::i;:::-;15155:348;;;;;:::o;15509:222::-;15602:4;15640:2;15629:9;15625:18;15617:26;;15653:71;15721:1;15710:9;15706:17;15697:6;15653:71;:::i;:::-;15509:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "814200",
								"executionCost": "22962",
								"totalCost": "837162"
							},
							"external": {
								"batchClaim((address,uint256)[])": "infinite",
								"placeBatchBets((address,uint256,uint256,uint256)[],address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 445,
									"end": 2721,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 445,
									"end": 2721,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 445,
									"end": 2721,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 445,
									"end": 2721,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 445,
									"end": 2721,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 445,
									"end": 2721,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 445,
									"end": 2721,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 445,
									"end": 2721,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 445,
									"end": 2721,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 445,
									"end": 2721,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 445,
									"end": 2721,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 445,
									"end": 2721,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 445,
									"end": 2721,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 445,
									"end": 2721,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 445,
									"end": 2721,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 445,
									"end": 2721,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 445,
									"end": 2721,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 445,
									"end": 2721,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 445,
									"end": 2721,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 445,
									"end": 2721,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 445,
									"end": 2721,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c9c7ee0b992320b5919878dbad6955358d855382413328a7da5ad5093441455264736f6c634300081e0033",
									".code": [
										{
											"begin": 445,
											"end": 2721,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 445,
											"end": 2721,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 445,
											"end": 2721,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 445,
											"end": 2721,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 445,
											"end": 2721,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 445,
											"end": 2721,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 445,
											"end": 2721,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 445,
											"end": 2721,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 445,
											"end": 2721,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 445,
											"end": 2721,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 445,
											"end": 2721,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 445,
											"end": 2721,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 445,
											"end": 2721,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 445,
											"end": 2721,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 445,
											"end": 2721,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 445,
											"end": 2721,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 445,
											"end": 2721,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 445,
											"end": 2721,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 445,
											"end": 2721,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 445,
											"end": 2721,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 445,
											"end": 2721,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 445,
											"end": 2721,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 445,
											"end": 2721,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 445,
											"end": 2721,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 445,
											"end": 2721,
											"name": "PUSH",
											"source": 7,
											"value": "8A48CA85"
										},
										{
											"begin": 445,
											"end": 2721,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 445,
											"end": 2721,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 445,
											"end": 2721,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 445,
											"end": 2721,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 445,
											"end": 2721,
											"name": "PUSH",
											"source": 7,
											"value": "EAD99B61"
										},
										{
											"begin": 445,
											"end": 2721,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 445,
											"end": 2721,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 445,
											"end": 2721,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 445,
											"end": 2721,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 445,
											"end": 2721,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 445,
											"end": 2721,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 445,
											"end": 2721,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 445,
											"end": 2721,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 2718,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1975,
											"end": 2718,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 2718,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1975,
											"end": 2718,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1975,
											"end": 2718,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 2718,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 2718,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 2718,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 2718,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 2718,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 2718,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1975,
											"end": 2718,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 2718,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 2718,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 1975,
											"end": 2718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 2718,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1975,
											"end": 2718,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 2718,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 1975,
											"end": 2718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 2718,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1975,
											"end": 2718,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 2718,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 954,
											"end": 1963,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 954,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 954,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 954,
											"end": 1963,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 954,
											"end": 1963,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 954,
											"end": 1963,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 954,
											"end": 1963,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 954,
											"end": 1963,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 954,
											"end": 1963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 954,
											"end": 1963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 954,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 954,
											"end": 1963,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 954,
											"end": 1963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 954,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 954,
											"end": 1963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 954,
											"end": 1963,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 954,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 954,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 954,
											"end": 1963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 954,
											"end": 1963,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 954,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 954,
											"end": 1963,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 2718,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 1975,
											"end": 2718,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2066,
											"end": 2072,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2066,
											"end": 2072,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2066,
											"end": 2079,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2066,
											"end": 2079,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2066,
											"end": 2083,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2058,
											"end": 2106,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 2058,
											"end": 2106,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2058,
											"end": 2106,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2058,
											"end": 2106,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2058,
											"end": 2106,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2058,
											"end": 2106,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2058,
											"end": 2106,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2058,
											"end": 2106,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2058,
											"end": 2106,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2058,
											"end": 2106,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 2058,
											"end": 2106,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2058,
											"end": 2106,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 2058,
											"end": 2106,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2058,
											"end": 2106,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 2058,
											"end": 2106,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2058,
											"end": 2106,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2058,
											"end": 2106,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2058,
											"end": 2106,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2058,
											"end": 2106,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2058,
											"end": 2106,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2058,
											"end": 2106,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2058,
											"end": 2106,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2058,
											"end": 2106,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 2058,
											"end": 2106,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2127,
											"end": 2147,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2150,
											"end": 2151,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2127,
											"end": 2151,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2127,
											"end": 2151,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2162,
											"end": 2186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2189,
											"end": 2190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2162,
											"end": 2190,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2162,
											"end": 2190,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2216,
											"end": 2225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2228,
											"end": 2229,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2216,
											"end": 2229,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2216,
											"end": 2229,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2211,
											"end": 2623,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2211,
											"end": 2623,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2235,
											"end": 2241,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2235,
											"end": 2241,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2235,
											"end": 2248,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2235,
											"end": 2248,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2231,
											"end": 2232,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2231,
											"end": 2248,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2211,
											"end": 2623,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2211,
											"end": 2623,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 2211,
											"end": 2623,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2267,
											"end": 2290,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2299,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2299,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2300,
											"end": 2301,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2302,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2302,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2302,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2302,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 2293,
											"end": 2302,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2302,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2293,
											"end": 2302,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 2293,
											"end": 2302,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2302,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2293,
											"end": 2302,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2302,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 2293,
											"end": 2302,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2302,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2302,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2293,
											"end": 2302,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2302,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2267,
											"end": 2302,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2267,
											"end": 2302,
											"modifierDepth": 1,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2267,
											"end": 2302,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2267,
											"end": 2302,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2267,
											"end": 2302,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2267,
											"end": 2302,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2267,
											"end": 2302,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 2267,
											"end": 2302,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2267,
											"end": 2302,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2267,
											"end": 2302,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 2267,
											"end": 2302,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2267,
											"end": 2302,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 2267,
											"end": 2302,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2267,
											"end": 2302,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2267,
											"end": 2302,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2352,
											"end": 2357,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2352,
											"end": 2364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2352,
											"end": 2364,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2352,
											"end": 2364,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2335,
											"end": 2379,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "677BD9FF"
										},
										{
											"begin": 2380,
											"end": 2385,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2380,
											"end": 2394,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2380,
											"end": 2394,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2380,
											"end": 2394,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 2335,
											"end": 2395,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 2335,
											"end": 2395,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 2335,
											"end": 2395,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2331,
											"end": 2578,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2331,
											"end": 2578,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 2331,
											"end": 2578,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2457,
											"end": 2464,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2441,
											"end": 2464,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2441,
											"end": 2464,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 2441,
											"end": 2464,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2441,
											"end": 2464,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2441,
											"end": 2464,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 2441,
											"end": 2464,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2441,
											"end": 2464,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 2441,
											"end": 2464,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2441,
											"end": 2464,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 2441,
											"end": 2464,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2483,
											"end": 2501,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2483,
											"end": 2501,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2483,
											"end": 2501,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2483,
											"end": 2501,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2483,
											"end": 2501,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 2483,
											"end": 2501,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2483,
											"end": 2501,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2483,
											"end": 2501,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2483,
											"end": 2501,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 2483,
											"end": 2501,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2483,
											"end": 2501,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2396,
											"end": 2517,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2331,
											"end": 2578,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 2331,
											"end": 2578,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2606,
											"end": 2609,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2606,
											"end": 2609,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2606,
											"end": 2609,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2606,
											"end": 2609,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2606,
											"end": 2609,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2606,
											"end": 2609,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2606,
											"end": 2609,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2252,
											"end": 2623,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2211,
											"end": 2623,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2211,
											"end": 2623,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2211,
											"end": 2623,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 2211,
											"end": 2623,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2211,
											"end": 2623,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2667,
											"end": 2677,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2648,
											"end": 2710,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "B9C05773BAC087C79CA346191A3F49B33E00AB1C6913F7788C9A3EC9391BEAB2"
										},
										{
											"begin": 2679,
											"end": 2691,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2693,
											"end": 2709,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2648,
											"end": 2710,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2710,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 2648,
											"end": 2710,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2710,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2710,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2710,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 2648,
											"end": 2710,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2710,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 2648,
											"end": 2710,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2648,
											"end": 2710,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2710,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2710,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2710,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2710,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2710,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 2047,
											"end": 2718,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2047,
											"end": 2718,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1975,
											"end": 2718,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 2718,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 2718,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 954,
											"end": 1963,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 954,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1073,
											"end": 1074,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1059,
											"end": 1063,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1059,
											"end": 1063,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1059,
											"end": 1070,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1059,
											"end": 1070,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1059,
											"end": 1074,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1095,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 1051,
											"end": 1095,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1051,
											"end": 1095,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1051,
											"end": 1095,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1095,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1051,
											"end": 1095,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1095,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 1051,
											"end": 1095,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1095,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 1051,
											"end": 1095,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1095,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 1051,
											"end": 1095,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1051,
											"end": 1095,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1095,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1095,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1095,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1095,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1095,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1095,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 1051,
											"end": 1095,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1116,
											"end": 1135,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1138,
											"end": 1139,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1116,
											"end": 1139,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1116,
											"end": 1139,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1155,
											"end": 1164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1167,
											"end": 1168,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1155,
											"end": 1168,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1155,
											"end": 1168,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1150,
											"end": 1277,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 1150,
											"end": 1277,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1174,
											"end": 1178,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1174,
											"end": 1178,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1174,
											"end": 1185,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1174,
											"end": 1185,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1170,
											"end": 1171,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1170,
											"end": 1185,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1150,
											"end": 1277,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1150,
											"end": 1277,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 1150,
											"end": 1277,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1223,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1223,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1224,
											"end": 1225,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1226,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1226,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1226,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1226,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 1219,
											"end": 1226,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1226,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 1219,
											"end": 1226,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 1219,
											"end": 1226,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1226,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 1219,
											"end": 1226,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1226,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 1219,
											"end": 1226,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1226,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1226,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1226,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 1219,
											"end": 1226,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1226,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1219,
											"end": 1233,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1233,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1204,
											"end": 1233,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1204,
											"end": 1233,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 1204,
											"end": 1233,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1204,
											"end": 1233,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1204,
											"end": 1233,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 1204,
											"end": 1233,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1204,
											"end": 1233,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 1204,
											"end": 1233,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1204,
											"end": 1233,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1204,
											"end": 1233,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 1263,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 1263,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 1263,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1260,
											"end": 1263,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 1263,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 1263,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 1263,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1150,
											"end": 1277,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 1150,
											"end": 1277,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1150,
											"end": 1277,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 1150,
											"end": 1277,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1150,
											"end": 1277,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1326,
											"end": 1388,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 1349,
											"end": 1359,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1369,
											"end": 1373,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 1376,
											"end": 1387,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1326,
											"end": 1331,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1326,
											"end": 1348,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1326,
											"end": 1348,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1326,
											"end": 1348,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 1326,
											"end": 1348,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1326,
											"end": 1388,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1326,
											"end": 1388,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1326,
											"end": 1388,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1326,
											"end": 1388,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1326,
											"end": 1388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1326,
											"end": 1388,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1326,
											"end": 1388,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1326,
											"end": 1388,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 1326,
											"end": 1388,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1427,
											"end": 1443,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1446,
											"end": 1447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1447,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1427,
											"end": 1447,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1460,
											"end": 1469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1472,
											"end": 1473,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 1473,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1460,
											"end": 1473,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1455,
											"end": 1865,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1455,
											"end": 1865,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1479,
											"end": 1483,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1479,
											"end": 1483,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1479,
											"end": 1490,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1479,
											"end": 1490,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1475,
											"end": 1476,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1475,
											"end": 1490,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1455,
											"end": 1865,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1455,
											"end": 1865,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 1455,
											"end": 1865,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1523,
											"end": 1527,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1523,
											"end": 1527,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1528,
											"end": 1529,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1523,
											"end": 1530,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1523,
											"end": 1530,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1523,
											"end": 1530,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1523,
											"end": 1530,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 1523,
											"end": 1530,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1523,
											"end": 1530,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 1523,
											"end": 1530,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 1523,
											"end": 1530,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1523,
											"end": 1530,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 1523,
											"end": 1530,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1523,
											"end": 1530,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 1523,
											"end": 1530,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1523,
											"end": 1530,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1523,
											"end": 1530,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1523,
											"end": 1530,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 1523,
											"end": 1530,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1523,
											"end": 1530,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1530,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1530,
											"modifierDepth": 1,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1530,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1530,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1530,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1530,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1530,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 1501,
											"end": 1530,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1530,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1530,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 1501,
											"end": 1530,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1530,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 1501,
											"end": 1530,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1530,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1530,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1571,
											"end": 1613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 1590,
											"end": 1593,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1590,
											"end": 1600,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1590,
											"end": 1600,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1590,
											"end": 1600,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1602,
											"end": 1605,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1602,
											"end": 1612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1602,
											"end": 1612,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1602,
											"end": 1612,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1571,
											"end": 1576,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1571,
											"end": 1589,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1571,
											"end": 1589,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1571,
											"end": 1589,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 1571,
											"end": 1589,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1571,
											"end": 1613,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1571,
											"end": 1613,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1571,
											"end": 1613,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1571,
											"end": 1613,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1571,
											"end": 1613,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1571,
											"end": 1613,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1571,
											"end": 1613,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 1571,
											"end": 1613,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1647,
											"end": 1650,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1647,
											"end": 1657,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1647,
											"end": 1657,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1647,
											"end": 1657,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 1667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1630,
											"end": 1667,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 1667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "E71C9697"
										},
										{
											"begin": 1668,
											"end": 1671,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1668,
											"end": 1680,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1668,
											"end": 1680,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1668,
											"end": 1680,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1682,
											"end": 1685,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1682,
											"end": 1693,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1682,
											"end": 1693,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1682,
											"end": 1693,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1695,
											"end": 1698,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1695,
											"end": 1705,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1695,
											"end": 1705,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1695,
											"end": 1705,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 1706,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1630,
											"end": 1706,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 1706,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 1706,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1630,
											"end": 1706,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 1706,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 1630,
											"end": 1706,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 1706,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 1706,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 1706,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1630,
											"end": 1706,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 1706,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 1630,
											"end": 1706,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 1706,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 1706,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 1706,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 1706,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 1630,
											"end": 1706,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 1706,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 1630,
											"end": 1706,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 1706,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1630,
											"end": 1706,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1630,
											"end": 1706,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 1706,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 1706,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 1706,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 1706,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 1706,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1630,
											"end": 1706,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 1706,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 1706,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 1706,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 1706,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 1706,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 1706,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 1630,
											"end": 1706,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 1706,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1630,
											"end": 1706,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1630,
											"end": 1706,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 1706,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 1630,
											"end": 1706,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 1706,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 1706,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 1706,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 1706,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 1706,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 1706,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 1706,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 1706,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 1706,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 1706,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 1630,
											"end": 1706,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 1706,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 1706,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1630,
											"end": 1706,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 1630,
											"end": 1706,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1626,
											"end": 1836,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 1626,
											"end": 1836,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1765,
											"end": 1768,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1765,
											"end": 1775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1765,
											"end": 1775,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1765,
											"end": 1775,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1753,
											"end": 1775,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1753,
											"end": 1775,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 1753,
											"end": 1775,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1753,
											"end": 1775,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1753,
											"end": 1775,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 1753,
											"end": 1775,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1753,
											"end": 1775,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 1753,
											"end": 1775,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1753,
											"end": 1775,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1753,
											"end": 1775,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1786,
											"end": 1828,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 1805,
											"end": 1815,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1820,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1817,
											"end": 1827,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1827,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1786,
											"end": 1791,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1786,
											"end": 1804,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1786,
											"end": 1804,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1786,
											"end": 1804,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 1786,
											"end": 1804,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1786,
											"end": 1828,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1786,
											"end": 1828,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1786,
											"end": 1828,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1786,
											"end": 1828,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1786,
											"end": 1828,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1786,
											"end": 1828,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1786,
											"end": 1828,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 1786,
											"end": 1828,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1626,
											"end": 1836,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 1626,
											"end": 1836,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1626,
											"end": 1836,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 1626,
											"end": 1836,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1626,
											"end": 1836,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 1626,
											"end": 1836,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1859,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1859,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1859,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1856,
											"end": 1859,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1859,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1859,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1859,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1494,
											"end": 1865,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1455,
											"end": 1865,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1455,
											"end": 1865,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1455,
											"end": 1865,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 1455,
											"end": 1865,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1455,
											"end": 1865,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1907,
											"end": 1917,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1892,
											"end": 1955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1892,
											"end": 1955,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1892,
											"end": 1955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FAA3F3B5E4BD3185BC059A2498B70867FD2B41976ECD9D924E19972A00A007EE"
										},
										{
											"begin": 1933,
											"end": 1941,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1919,
											"end": 1930,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1919,
											"end": 1941,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 1919,
											"end": 1941,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1919,
											"end": 1941,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1919,
											"end": 1941,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 1919,
											"end": 1941,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1919,
											"end": 1941,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 1919,
											"end": 1941,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1943,
											"end": 1947,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1943,
											"end": 1947,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1943,
											"end": 1954,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1943,
											"end": 1954,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1892,
											"end": 1955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1892,
											"end": 1955,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1892,
											"end": 1955,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 1892,
											"end": 1955,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1892,
											"end": 1955,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1892,
											"end": 1955,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1892,
											"end": 1955,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 1892,
											"end": 1955,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1892,
											"end": 1955,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 1892,
											"end": 1955,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1892,
											"end": 1955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1892,
											"end": 1955,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1892,
											"end": 1955,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1892,
											"end": 1955,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1892,
											"end": 1955,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1892,
											"end": 1955,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1892,
											"end": 1955,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 1040,
											"end": 1963,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1040,
											"end": 1963,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 954,
											"end": 1963,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 954,
											"end": 1963,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 954,
											"end": 1963,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 954,
											"end": 1963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1765,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1789,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 1745,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1718,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 1718,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5084,
											"end": 5464,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 5084,
											"end": 5464,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5171,
											"end": 5196,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5214,
											"end": 5219,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5214,
											"end": 5227,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5214,
											"end": 5227,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5214,
											"end": 5227,
											"name": "PUSH",
											"source": 5,
											"value": "95EA7B3"
										},
										{
											"begin": 5230,
											"end": 5237,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5239,
											"end": 5244,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5199,
											"end": 5246,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5199,
											"end": 5246,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5199,
											"end": 5246,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5199,
											"end": 5246,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5199,
											"end": 5246,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 5199,
											"end": 5246,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5199,
											"end": 5246,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5199,
											"end": 5246,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5199,
											"end": 5246,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 5199,
											"end": 5246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5199,
											"end": 5246,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 5199,
											"end": 5246,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5199,
											"end": 5246,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5199,
											"end": 5246,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5199,
											"end": 5246,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5199,
											"end": 5246,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5199,
											"end": 5246,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5199,
											"end": 5246,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5199,
											"end": 5246,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5199,
											"end": 5246,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5199,
											"end": 5246,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5199,
											"end": 5246,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5199,
											"end": 5246,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5199,
											"end": 5246,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5199,
											"end": 5246,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5199,
											"end": 5246,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5199,
											"end": 5246,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 5199,
											"end": 5246,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 5199,
											"end": 5246,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5199,
											"end": 5246,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5199,
											"end": 5246,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5199,
											"end": 5246,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5199,
											"end": 5246,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5199,
											"end": 5246,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5199,
											"end": 5246,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5199,
											"end": 5246,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5199,
											"end": 5246,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5199,
											"end": 5246,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5199,
											"end": 5246,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 5199,
											"end": 5246,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5199,
											"end": 5246,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5199,
											"end": 5246,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5199,
											"end": 5246,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5199,
											"end": 5246,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5199,
											"end": 5246,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5171,
											"end": 5246,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5171,
											"end": 5246,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5262,
											"end": 5306,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 5286,
											"end": 5291,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5293,
											"end": 5305,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5262,
											"end": 5285,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 5262,
											"end": 5306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5262,
											"end": 5306,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 5262,
											"end": 5306,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5257,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5257,
											"end": 5458,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5322,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 5342,
											"end": 5347,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5364,
											"end": 5369,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5364,
											"end": 5377,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5364,
											"end": 5377,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5364,
											"end": 5377,
											"name": "PUSH",
											"source": 5,
											"value": "95EA7B3"
										},
										{
											"begin": 5380,
											"end": 5387,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5389,
											"end": 5390,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5349,
											"end": 5392,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5349,
											"end": 5392,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5349,
											"end": 5392,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5349,
											"end": 5392,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5349,
											"end": 5392,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 5349,
											"end": 5392,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5349,
											"end": 5392,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5349,
											"end": 5392,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5349,
											"end": 5392,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 5349,
											"end": 5392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5349,
											"end": 5392,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 5349,
											"end": 5392,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5349,
											"end": 5392,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5349,
											"end": 5392,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5349,
											"end": 5392,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5349,
											"end": 5392,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5349,
											"end": 5392,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5349,
											"end": 5392,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5349,
											"end": 5392,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5349,
											"end": 5392,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5349,
											"end": 5392,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5349,
											"end": 5392,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5349,
											"end": 5392,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5349,
											"end": 5392,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5349,
											"end": 5392,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5349,
											"end": 5392,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5349,
											"end": 5392,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 5349,
											"end": 5392,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 5349,
											"end": 5392,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5349,
											"end": 5392,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5349,
											"end": 5392,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5349,
											"end": 5392,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5349,
											"end": 5392,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5349,
											"end": 5392,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5349,
											"end": 5392,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5349,
											"end": 5392,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5349,
											"end": 5392,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5349,
											"end": 5392,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5349,
											"end": 5392,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 5349,
											"end": 5392,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5349,
											"end": 5392,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5349,
											"end": 5392,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5349,
											"end": 5392,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5349,
											"end": 5392,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5349,
											"end": 5392,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5322,
											"end": 5341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 5322,
											"end": 5393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5322,
											"end": 5393,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 5322,
											"end": 5393,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5407,
											"end": 5447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 5427,
											"end": 5432,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5434,
											"end": 5446,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5407,
											"end": 5426,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 5407,
											"end": 5447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5407,
											"end": 5447,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 5407,
											"end": 5447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5257,
											"end": 5458,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5257,
											"end": 5458,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5161,
											"end": 5464,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5084,
											"end": 5464,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5084,
											"end": 5464,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5084,
											"end": 5464,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5084,
											"end": 5464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1348,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 1360,
											"end": 1362,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 1328,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1301,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 1301,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8450,
											"end": 8468,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8478,
											"end": 8497,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8616,
											"end": 8620,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8613,
											"end": 8614,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8600,
											"end": 8611,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8593,
											"end": 8597,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8587,
											"end": 8591,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 8583,
											"end": 8598,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8580,
											"end": 8581,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8573,
											"end": 8578,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 8566,
											"end": 8571,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 8561,
											"end": 8621,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 8673,
											"end": 8680,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8717,
											"end": 8721,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8711,
											"end": 8722,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8762,
											"end": 8778,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8759,
											"end": 8760,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8754,
											"end": 8757,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8739,
											"end": 8779,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 8808,
											"end": 8824,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 8806,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8796,
											"end": 8825,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8866,
											"end": 8882,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8916,
											"end": 8917,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8910,
											"end": 8918,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8532,
											"end": 8928,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8956,
											"end": 8957,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8942,
											"end": 8952,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9009,
											"end": 9010,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 8994,
											"end": 9005,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8990,
											"end": 8991,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8968,
											"end": 8973,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8991,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9066,
											"end": 9071,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 5,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 9033,
											"end": 9073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8370,
											"end": 9090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9592,
											"end": 10072,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 9592,
											"end": 10072,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9675,
											"end": 9679,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9691,
											"end": 9703,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9713,
											"end": 9731,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9741,
											"end": 9760,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9875,
											"end": 9879,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9872,
											"end": 9873,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9865,
											"end": 9869,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 9859,
											"end": 9870,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9852,
											"end": 9856,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9846,
											"end": 9850,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 9842,
											"end": 9857,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9839,
											"end": 9840,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9832,
											"end": 9837,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 9825,
											"end": 9830,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 9820,
											"end": 9880,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 9809,
											"end": 9880,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9809,
											"end": 9880,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9907,
											"end": 9923,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 9893,
											"end": 9923,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9893,
											"end": 9923,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9957,
											"end": 9958,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9951,
											"end": 9959,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9936,
											"end": 9959,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9936,
											"end": 9959,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9985,
											"end": 9992,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9985,
											"end": 10065,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9985,
											"end": 10065,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9985,
											"end": 10065,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 9985,
											"end": 10065,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9985,
											"end": 10065,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10011,
											"end": 10012,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9997,
											"end": 10007,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9997,
											"end": 10012,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9997,
											"end": 10064,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 9997,
											"end": 10064,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10063,
											"end": 10064,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 10048,
											"end": 10059,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10048,
											"end": 10064,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9997,
											"end": 10064,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 9997,
											"end": 10064,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9997,
											"end": 10064,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 9997,
											"end": 10064,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10044,
											"end": 10045,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10023,
											"end": 10028,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 10015,
											"end": 10041,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10015,
											"end": 10041,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10015,
											"end": 10041,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 10015,
											"end": 10045,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 9997,
											"end": 10064,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 9997,
											"end": 10064,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9985,
											"end": 10065,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 9985,
											"end": 10065,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9978,
											"end": 10065,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 9978,
											"end": 10065,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9978,
											"end": 10065,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9978,
											"end": 10065,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9978,
											"end": 10065,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9592,
											"end": 10072,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9592,
											"end": 10072,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9592,
											"end": 10072,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9592,
											"end": 10072,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9592,
											"end": 10072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 334,
											"end": 451,
											"name": "tag",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 334,
											"end": 451,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 443,
											"end": 444,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 440,
											"end": 441,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 433,
											"end": 445,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 457,
											"end": 574,
											"name": "tag",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 457,
											"end": 574,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 566,
											"end": 567,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 563,
											"end": 564,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 556,
											"end": 568,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 580,
											"end": 697,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 580,
											"end": 697,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 689,
											"end": 690,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 686,
											"end": 687,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 679,
											"end": 691,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 743,
											"end": 1340,
											"name": "tag",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 743,
											"end": 1340,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 845,
											"end": 853,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 855,
											"end": 861,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 905,
											"end": 908,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 898,
											"end": 902,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 890,
											"end": 896,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 886,
											"end": 903,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 882,
											"end": 909,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 872,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 872,
											"end": 994,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 913,
											"end": 992,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 913,
											"end": 992,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 913,
											"end": 992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 913,
											"end": 992,
											"name": "tag",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 913,
											"end": 992,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 872,
											"end": 994,
											"name": "tag",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 872,
											"end": 994,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1026,
											"end": 1032,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1003,
											"end": 1033,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1003,
											"end": 1033,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1056,
											"end": 1074,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1048,
											"end": 1054,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1045,
											"end": 1075,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1042,
											"end": 1159,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1042,
											"end": 1159,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 1042,
											"end": 1159,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1078,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 1078,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 1078,
											"end": 1157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1078,
											"end": 1157,
											"name": "tag",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 1078,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1042,
											"end": 1159,
											"name": "tag",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 1042,
											"end": 1159,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1192,
											"end": 1196,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1184,
											"end": 1190,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1180,
											"end": 1197,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1168,
											"end": 1197,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1168,
											"end": 1197,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1246,
											"end": 1249,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1238,
											"end": 1242,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1230,
											"end": 1236,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1243,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1216,
											"end": 1224,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1212,
											"end": 1244,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1209,
											"end": 1250,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1206,
											"end": 1334,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1206,
											"end": 1334,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 1206,
											"end": 1334,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1253,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 1253,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 1253,
											"end": 1332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1253,
											"end": 1332,
											"name": "tag",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 1253,
											"end": 1332,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1206,
											"end": 1334,
											"name": "tag",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 1206,
											"end": 1334,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 743,
											"end": 1340,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 743,
											"end": 1340,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 743,
											"end": 1340,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 743,
											"end": 1340,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 743,
											"end": 1340,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 743,
											"end": 1340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1346,
											"end": 1963,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 1346,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1461,
											"end": 1467,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1469,
											"end": 1475,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1518,
											"end": 1520,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1506,
											"end": 1515,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1497,
											"end": 1504,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1493,
											"end": 1516,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1489,
											"end": 1521,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1486,
											"end": 1605,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1486,
											"end": 1605,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 1486,
											"end": 1605,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1524,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 1524,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 1524,
											"end": 1603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1524,
											"end": 1603,
											"name": "tag",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 1524,
											"end": 1603,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1486,
											"end": 1605,
											"name": "tag",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 1486,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1672,
											"end": 1673,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1661,
											"end": 1670,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1657,
											"end": 1674,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1644,
											"end": 1675,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1702,
											"end": 1720,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1694,
											"end": 1700,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1691,
											"end": 1721,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1688,
											"end": 1805,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1688,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 1688,
											"end": 1805,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1724,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 1724,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 1724,
											"end": 1803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1724,
											"end": 1803,
											"name": "tag",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 1724,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1688,
											"end": 1805,
											"name": "tag",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 1688,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 1946,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 1938,
											"end": 1945,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1929,
											"end": 1935,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1914,
											"end": 1936,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 1946,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 1837,
											"end": 1946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 1946,
											"name": "tag",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 1837,
											"end": 1946,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1819,
											"end": 1946,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1819,
											"end": 1946,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1819,
											"end": 1946,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1819,
											"end": 1946,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1615,
											"end": 1956,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1346,
											"end": 1963,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1346,
											"end": 1963,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1346,
											"end": 1963,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1346,
											"end": 1963,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1346,
											"end": 1963,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1346,
											"end": 1963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2007,
											"end": 2602,
											"name": "tag",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 2007,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2107,
											"end": 2115,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2117,
											"end": 2123,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2170,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2160,
											"end": 2164,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2152,
											"end": 2158,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2148,
											"end": 2165,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2144,
											"end": 2171,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2134,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 2134,
											"end": 2256,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2175,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 2175,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 2175,
											"end": 2254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2175,
											"end": 2254,
											"name": "tag",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 2175,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2134,
											"end": 2256,
											"name": "tag",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 2134,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2288,
											"end": 2294,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2275,
											"end": 2295,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2265,
											"end": 2295,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2265,
											"end": 2295,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2318,
											"end": 2336,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2310,
											"end": 2316,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2307,
											"end": 2337,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2304,
											"end": 2421,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2304,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 2304,
											"end": 2421,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 2340,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 2340,
											"end": 2419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2419,
											"name": "tag",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 2340,
											"end": 2419,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2304,
											"end": 2421,
											"name": "tag",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 2304,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2454,
											"end": 2458,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2446,
											"end": 2452,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2442,
											"end": 2459,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2430,
											"end": 2459,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2430,
											"end": 2459,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2508,
											"end": 2511,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2500,
											"end": 2504,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 2492,
											"end": 2498,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2488,
											"end": 2505,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2478,
											"end": 2486,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2474,
											"end": 2506,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2471,
											"end": 2512,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2468,
											"end": 2596,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2468,
											"end": 2596,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 2468,
											"end": 2596,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2515,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 2515,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 2515,
											"end": 2594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2515,
											"end": 2594,
											"name": "tag",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 2515,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2468,
											"end": 2596,
											"name": "tag",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 2468,
											"end": 2596,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2007,
											"end": 2602,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2007,
											"end": 2602,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2007,
											"end": 2602,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2007,
											"end": 2602,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2007,
											"end": 2602,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2007,
											"end": 2602,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2608,
											"end": 2734,
											"name": "tag",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 2608,
											"end": 2734,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2645,
											"end": 2652,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2685,
											"end": 2727,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2678,
											"end": 2683,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2674,
											"end": 2728,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2663,
											"end": 2728,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2663,
											"end": 2728,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2608,
											"end": 2734,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2608,
											"end": 2734,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2608,
											"end": 2734,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2608,
											"end": 2734,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2740,
											"end": 2836,
											"name": "tag",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 2740,
											"end": 2836,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2777,
											"end": 2784,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2806,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 2824,
											"end": 2829,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2806,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 2806,
											"end": 2830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2806,
											"end": 2830,
											"name": "tag",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 2806,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2795,
											"end": 2830,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2795,
											"end": 2830,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2740,
											"end": 2836,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2740,
											"end": 2836,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2740,
											"end": 2836,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2740,
											"end": 2836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2842,
											"end": 2952,
											"name": "tag",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 2842,
											"end": 2952,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2893,
											"end": 2900,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2922,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 2940,
											"end": 2945,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2922,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 2922,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2922,
											"end": 2946,
											"name": "tag",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 2922,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2911,
											"end": 2946,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2911,
											"end": 2946,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2842,
											"end": 2952,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2842,
											"end": 2952,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2842,
											"end": 2952,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2842,
											"end": 2952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2958,
											"end": 3108,
											"name": "tag",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 2958,
											"end": 3108,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3045,
											"end": 3083,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 3077,
											"end": 3082,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3045,
											"end": 3083,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 3045,
											"end": 3083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3045,
											"end": 3083,
											"name": "tag",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 3045,
											"end": 3083,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3038,
											"end": 3043,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3035,
											"end": 3084,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3025,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 3025,
											"end": 3102,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3098,
											"end": 3099,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3096,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3088,
											"end": 3100,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3025,
											"end": 3102,
											"name": "tag",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 3025,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2958,
											"end": 3108,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2958,
											"end": 3108,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3114,
											"end": 3281,
											"name": "tag",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 3114,
											"end": 3281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3174,
											"end": 3179,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3212,
											"end": 3218,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3199,
											"end": 3219,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3190,
											"end": 3219,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3190,
											"end": 3219,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3228,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 3269,
											"end": 3274,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3228,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 3228,
											"end": 3275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3228,
											"end": 3275,
											"name": "tag",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 3228,
											"end": 3275,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3114,
											"end": 3281,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3114,
											"end": 3281,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3114,
											"end": 3281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3114,
											"end": 3281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3114,
											"end": 3281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3287,
											"end": 4073,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 3287,
											"end": 4073,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3423,
											"end": 3429,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3431,
											"end": 3437,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3439,
											"end": 3445,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3488,
											"end": 3490,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3476,
											"end": 3485,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3467,
											"end": 3474,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3486,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3459,
											"end": 3491,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3456,
											"end": 3575,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3456,
											"end": 3575,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 3456,
											"end": 3575,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3494,
											"end": 3573,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 3494,
											"end": 3573,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 3494,
											"end": 3573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3494,
											"end": 3573,
											"name": "tag",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 3494,
											"end": 3573,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3456,
											"end": 3575,
											"name": "tag",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 3456,
											"end": 3575,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3642,
											"end": 3643,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3631,
											"end": 3640,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3627,
											"end": 3644,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3614,
											"end": 3645,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3672,
											"end": 3690,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3664,
											"end": 3670,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3661,
											"end": 3691,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3658,
											"end": 3775,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3658,
											"end": 3775,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 3658,
											"end": 3775,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3694,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 3694,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 3694,
											"end": 3773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3694,
											"end": 3773,
											"name": "tag",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 3694,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3658,
											"end": 3775,
											"name": "tag",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 3658,
											"end": 3775,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3807,
											"end": 3914,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 3906,
											"end": 3913,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3897,
											"end": 3903,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3886,
											"end": 3895,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3882,
											"end": 3904,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3807,
											"end": 3914,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 3807,
											"end": 3914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3807,
											"end": 3914,
											"name": "tag",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 3807,
											"end": 3914,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3789,
											"end": 3914,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3789,
											"end": 3914,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3789,
											"end": 3914,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3789,
											"end": 3914,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3585,
											"end": 3924,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3963,
											"end": 3965,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3989,
											"end": 4056,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 4048,
											"end": 4055,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4039,
											"end": 4045,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4028,
											"end": 4037,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4024,
											"end": 4046,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3989,
											"end": 4056,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 3989,
											"end": 4056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3989,
											"end": 4056,
											"name": "tag",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 3989,
											"end": 4056,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3979,
											"end": 4056,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3979,
											"end": 4056,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3934,
											"end": 4066,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3287,
											"end": 4073,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3287,
											"end": 4073,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3287,
											"end": 4073,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3287,
											"end": 4073,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3287,
											"end": 4073,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3287,
											"end": 4073,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4079,
											"end": 4248,
											"name": "tag",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 4079,
											"end": 4248,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4163,
											"end": 4174,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4197,
											"end": 4203,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4192,
											"end": 4195,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4185,
											"end": 4204,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4237,
											"end": 4241,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4232,
											"end": 4235,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4228,
											"end": 4242,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4213,
											"end": 4242,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4213,
											"end": 4242,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4079,
											"end": 4248,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4079,
											"end": 4248,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4079,
											"end": 4248,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4079,
											"end": 4248,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4079,
											"end": 4248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4254,
											"end": 4422,
											"name": "tag",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 4254,
											"end": 4422,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4394,
											"end": 4414,
											"name": "PUSH",
											"source": 8,
											"value": "4E6F20636C61696D732070726F76696465640000000000000000000000000000"
										},
										{
											"begin": 4390,
											"end": 4391,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4388,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4378,
											"end": 4392,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4371,
											"end": 4415,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4254,
											"end": 4422,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4254,
											"end": 4422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4428,
											"end": 4794,
											"name": "tag",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 4428,
											"end": 4794,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4570,
											"end": 4573,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4591,
											"end": 4658,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 4655,
											"end": 4657,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 4650,
											"end": 4653,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4591,
											"end": 4658,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 4591,
											"end": 4658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4591,
											"end": 4658,
											"name": "tag",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 4591,
											"end": 4658,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4584,
											"end": 4658,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4584,
											"end": 4658,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4667,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 4756,
											"end": 4759,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4667,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 4667,
											"end": 4760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4667,
											"end": 4760,
											"name": "tag",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 4667,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4785,
											"end": 4787,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4780,
											"end": 4783,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4776,
											"end": 4788,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4769,
											"end": 4788,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4769,
											"end": 4788,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4428,
											"end": 4794,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4428,
											"end": 4794,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4428,
											"end": 4794,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4428,
											"end": 4794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4800,
											"end": 5219,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 4800,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4966,
											"end": 4970,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5004,
											"end": 5006,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4993,
											"end": 5002,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4989,
											"end": 5007,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4981,
											"end": 5007,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4981,
											"end": 5007,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5053,
											"end": 5062,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5047,
											"end": 5051,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5043,
											"end": 5063,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5039,
											"end": 5040,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5028,
											"end": 5037,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5024,
											"end": 5041,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5017,
											"end": 5064,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5212,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 5207,
											"end": 5211,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5212,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 5081,
											"end": 5212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5212,
											"name": "tag",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 5081,
											"end": 5212,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5073,
											"end": 5212,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5073,
											"end": 5212,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4800,
											"end": 5219,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4800,
											"end": 5219,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4800,
											"end": 5219,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4800,
											"end": 5219,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5225,
											"end": 5405,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 5225,
											"end": 5405,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5273,
											"end": 5350,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5270,
											"end": 5271,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5263,
											"end": 5351,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5370,
											"end": 5374,
											"name": "PUSH",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 5367,
											"end": 5368,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5360,
											"end": 5375,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5394,
											"end": 5398,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5391,
											"end": 5392,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5384,
											"end": 5399,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5411,
											"end": 5528,
											"name": "tag",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 5411,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5520,
											"end": 5521,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5518,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5510,
											"end": 5522,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5534,
											"end": 5636,
											"name": "tag",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 5534,
											"end": 5636,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5575,
											"end": 5581,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5626,
											"end": 5628,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 5622,
											"end": 5629,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 5617,
											"end": 5619,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 5610,
											"end": 5615,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5606,
											"end": 5620,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5602,
											"end": 5630,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5592,
											"end": 5630,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5592,
											"end": 5630,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5534,
											"end": 5636,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5534,
											"end": 5636,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5534,
											"end": 5636,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5534,
											"end": 5636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5642,
											"end": 5822,
											"name": "tag",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 5642,
											"end": 5822,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5690,
											"end": 5767,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5687,
											"end": 5688,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5680,
											"end": 5768,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5787,
											"end": 5791,
											"name": "PUSH",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 5784,
											"end": 5785,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5777,
											"end": 5792,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5811,
											"end": 5815,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5808,
											"end": 5809,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5801,
											"end": 5816,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5828,
											"end": 6109,
											"name": "tag",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 5828,
											"end": 6109,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5911,
											"end": 5938,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5911,
											"end": 5938,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 5911,
											"end": 5938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5911,
											"end": 5938,
											"name": "tag",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 5911,
											"end": 5938,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5909,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5899,
											"end": 5939,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6041,
											"end": 6047,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6029,
											"end": 6039,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6026,
											"end": 6048,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6005,
											"end": 6023,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5993,
											"end": 6003,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5990,
											"end": 6024,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5987,
											"end": 6049,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 5984,
											"end": 6072,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5984,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 5984,
											"end": 6072,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6052,
											"end": 6070,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 6052,
											"end": 6070,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 6052,
											"end": 6070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6052,
											"end": 6070,
											"name": "tag",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 6052,
											"end": 6070,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5984,
											"end": 6072,
											"name": "tag",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 5984,
											"end": 6072,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6092,
											"end": 6102,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6088,
											"end": 6090,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6081,
											"end": 6103,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5871,
											"end": 6109,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5828,
											"end": 6109,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5828,
											"end": 6109,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5828,
											"end": 6109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6115,
											"end": 6244,
											"name": "tag",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 6115,
											"end": 6244,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6149,
											"end": 6155,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6176,
											"end": 6196,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 6176,
											"end": 6196,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 6176,
											"end": 6196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6176,
											"end": 6196,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 6176,
											"end": 6196,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6166,
											"end": 6196,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6166,
											"end": 6196,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6205,
											"end": 6238,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 6233,
											"end": 6237,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6231,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6205,
											"end": 6238,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 6205,
											"end": 6238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6205,
											"end": 6238,
											"name": "tag",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 6205,
											"end": 6238,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6115,
											"end": 6244,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6115,
											"end": 6244,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6115,
											"end": 6244,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6115,
											"end": 6244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6373,
											"end": 6495,
											"name": "tag",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 6373,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6446,
											"end": 6470,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 6464,
											"end": 6469,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6446,
											"end": 6470,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 6446,
											"end": 6470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6446,
											"end": 6470,
											"name": "tag",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 6446,
											"end": 6470,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6439,
											"end": 6444,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6436,
											"end": 6471,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 6426,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 6426,
											"end": 6489,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6485,
											"end": 6486,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6482,
											"end": 6483,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6475,
											"end": 6487,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6426,
											"end": 6489,
											"name": "tag",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 6426,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6373,
											"end": 6495,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6373,
											"end": 6495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6501,
											"end": 6640,
											"name": "tag",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 6501,
											"end": 6640,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6547,
											"end": 6552,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6585,
											"end": 6591,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6572,
											"end": 6592,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 6563,
											"end": 6592,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6563,
											"end": 6592,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6601,
											"end": 6634,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 6628,
											"end": 6633,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6601,
											"end": 6634,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 6601,
											"end": 6634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6601,
											"end": 6634,
											"name": "tag",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 6601,
											"end": 6634,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6501,
											"end": 6640,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6501,
											"end": 6640,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6501,
											"end": 6640,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6501,
											"end": 6640,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6501,
											"end": 6640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6646,
											"end": 6723,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 6646,
											"end": 6723,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6683,
											"end": 6690,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6712,
											"end": 6717,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6701,
											"end": 6717,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6701,
											"end": 6717,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6646,
											"end": 6723,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6646,
											"end": 6723,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6646,
											"end": 6723,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6646,
											"end": 6723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6851,
											"name": "tag",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 6729,
											"end": 6851,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6802,
											"end": 6826,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 6820,
											"end": 6825,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6802,
											"end": 6826,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 6802,
											"end": 6826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6802,
											"end": 6826,
											"name": "tag",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 6802,
											"end": 6826,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6795,
											"end": 6800,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6792,
											"end": 6827,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 6782,
											"end": 6845,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 6782,
											"end": 6845,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6841,
											"end": 6842,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6838,
											"end": 6839,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6831,
											"end": 6843,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6782,
											"end": 6845,
											"name": "tag",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 6782,
											"end": 6845,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6851,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6857,
											"end": 6996,
											"name": "tag",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 6857,
											"end": 6996,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6903,
											"end": 6908,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6941,
											"end": 6947,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6928,
											"end": 6948,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 6919,
											"end": 6948,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6919,
											"end": 6948,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6957,
											"end": 6990,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 6984,
											"end": 6989,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6957,
											"end": 6990,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 6957,
											"end": 6990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6957,
											"end": 6990,
											"name": "tag",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 6957,
											"end": 6990,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6857,
											"end": 6996,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6857,
											"end": 6996,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6857,
											"end": 6996,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6857,
											"end": 6996,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6857,
											"end": 6996,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7040,
											"end": 7622,
											"name": "tag",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 7040,
											"end": 7622,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7116,
											"end": 7121,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7160,
											"end": 7164,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7148,
											"end": 7157,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7143,
											"end": 7146,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7139,
											"end": 7158,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7135,
											"end": 7165,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 7132,
											"end": 7249,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7132,
											"end": 7249,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 7132,
											"end": 7249,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7168,
											"end": 7247,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 7168,
											"end": 7247,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 7168,
											"end": 7247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7168,
											"end": 7247,
											"name": "tag",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 7168,
											"end": 7247,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7132,
											"end": 7249,
											"name": "tag",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 7132,
											"end": 7249,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7267,
											"end": 7288,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 7283,
											"end": 7287,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7267,
											"end": 7288,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 7267,
											"end": 7288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7267,
											"end": 7288,
											"name": "tag",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 7267,
											"end": 7288,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7258,
											"end": 7288,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7258,
											"end": 7288,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7349,
											"end": 7350,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7389,
											"end": 7438,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 7434,
											"end": 7437,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7425,
											"end": 7431,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7414,
											"end": 7423,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7410,
											"end": 7432,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7389,
											"end": 7438,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 7389,
											"end": 7438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7389,
											"end": 7438,
											"name": "tag",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 7389,
											"end": 7438,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7382,
											"end": 7386,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7375,
											"end": 7380,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7371,
											"end": 7387,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7364,
											"end": 7439,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7298,
											"end": 7450,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7513,
											"end": 7515,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7554,
											"end": 7603,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 7599,
											"end": 7602,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7590,
											"end": 7596,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7579,
											"end": 7588,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7575,
											"end": 7597,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7554,
											"end": 7603,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 7554,
											"end": 7603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7554,
											"end": 7603,
											"name": "tag",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 7554,
											"end": 7603,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7547,
											"end": 7551,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7540,
											"end": 7545,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7536,
											"end": 7552,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7529,
											"end": 7604,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7460,
											"end": 7615,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7040,
											"end": 7622,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7040,
											"end": 7622,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7040,
											"end": 7622,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7040,
											"end": 7622,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7040,
											"end": 7622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7628,
											"end": 8011,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 7628,
											"end": 8011,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7714,
											"end": 7720,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7763,
											"end": 7765,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7751,
											"end": 7760,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7742,
											"end": 7749,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7738,
											"end": 7761,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7734,
											"end": 7766,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 7731,
											"end": 7850,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7731,
											"end": 7850,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 7731,
											"end": 7850,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7769,
											"end": 7848,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 7769,
											"end": 7848,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 7769,
											"end": 7848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7769,
											"end": 7848,
											"name": "tag",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 7769,
											"end": 7848,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7731,
											"end": 7850,
											"name": "tag",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 7731,
											"end": 7850,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7889,
											"end": 7890,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7914,
											"end": 7994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 7986,
											"end": 7993,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7977,
											"end": 7983,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7966,
											"end": 7975,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7962,
											"end": 7984,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7914,
											"end": 7994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 7914,
											"end": 7994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7914,
											"end": 7994,
											"name": "tag",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 7914,
											"end": 7994,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7904,
											"end": 7994,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7904,
											"end": 7994,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7860,
											"end": 8004,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7628,
											"end": 8011,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7628,
											"end": 8011,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7628,
											"end": 8011,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7628,
											"end": 8011,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7628,
											"end": 8011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8017,
											"end": 8135,
											"name": "tag",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 8017,
											"end": 8135,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8104,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 8122,
											"end": 8127,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8104,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 8104,
											"end": 8128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8104,
											"end": 8128,
											"name": "tag",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 8104,
											"end": 8128,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8099,
											"end": 8102,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8092,
											"end": 8129,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8017,
											"end": 8135,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8017,
											"end": 8135,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8017,
											"end": 8135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8141,
											"end": 8363,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 8141,
											"end": 8363,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8234,
											"end": 8238,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8272,
											"end": 8274,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8261,
											"end": 8270,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8257,
											"end": 8275,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8249,
											"end": 8275,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8249,
											"end": 8275,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8285,
											"end": 8356,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 8353,
											"end": 8354,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8342,
											"end": 8351,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8338,
											"end": 8355,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8329,
											"end": 8335,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8285,
											"end": 8356,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 8285,
											"end": 8356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8285,
											"end": 8356,
											"name": "tag",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 8285,
											"end": 8356,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8141,
											"end": 8363,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8141,
											"end": 8363,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8141,
											"end": 8363,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8141,
											"end": 8363,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8141,
											"end": 8363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8369,
											"end": 8512,
											"name": "tag",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 8369,
											"end": 8512,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8426,
											"end": 8431,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8457,
											"end": 8463,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8451,
											"end": 8464,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8442,
											"end": 8464,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8442,
											"end": 8464,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8473,
											"end": 8506,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 8500,
											"end": 8505,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8473,
											"end": 8506,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 8473,
											"end": 8506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8473,
											"end": 8506,
											"name": "tag",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 8473,
											"end": 8506,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8369,
											"end": 8512,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8369,
											"end": 8512,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8369,
											"end": 8512,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8369,
											"end": 8512,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8369,
											"end": 8512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8518,
											"end": 8869,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 8518,
											"end": 8869,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8588,
											"end": 8594,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8637,
											"end": 8639,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8625,
											"end": 8634,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8616,
											"end": 8623,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8612,
											"end": 8635,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8608,
											"end": 8640,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 8605,
											"end": 8724,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8605,
											"end": 8724,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 8605,
											"end": 8724,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8643,
											"end": 8722,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 8643,
											"end": 8722,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 8643,
											"end": 8722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8643,
											"end": 8722,
											"name": "tag",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 8643,
											"end": 8722,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8605,
											"end": 8724,
											"name": "tag",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 8605,
											"end": 8724,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8763,
											"end": 8764,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8788,
											"end": 8852,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 8844,
											"end": 8851,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8835,
											"end": 8841,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8824,
											"end": 8833,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8820,
											"end": 8842,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8788,
											"end": 8852,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 8788,
											"end": 8852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8788,
											"end": 8852,
											"name": "tag",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 8788,
											"end": 8852,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8778,
											"end": 8852,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8778,
											"end": 8852,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8734,
											"end": 8862,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8518,
											"end": 8869,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8518,
											"end": 8869,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8518,
											"end": 8869,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8518,
											"end": 8869,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8518,
											"end": 8869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8875,
											"end": 9055,
											"name": "tag",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 8875,
											"end": 9055,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8923,
											"end": 9000,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8920,
											"end": 8921,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8913,
											"end": 9001,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9020,
											"end": 9024,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 9017,
											"end": 9018,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9010,
											"end": 9025,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9044,
											"end": 9048,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 9041,
											"end": 9042,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9034,
											"end": 9049,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9061,
											"end": 9252,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 9061,
											"end": 9252,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9101,
											"end": 9104,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9120,
											"end": 9140,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 9138,
											"end": 9139,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9120,
											"end": 9140,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 9120,
											"end": 9140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9120,
											"end": 9140,
											"name": "tag",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 9120,
											"end": 9140,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9115,
											"end": 9140,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9115,
											"end": 9140,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9154,
											"end": 9174,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 9172,
											"end": 9173,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9154,
											"end": 9174,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 9154,
											"end": 9174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9154,
											"end": 9174,
											"name": "tag",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 9154,
											"end": 9174,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9149,
											"end": 9174,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9149,
											"end": 9174,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9197,
											"end": 9198,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9194,
											"end": 9195,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9190,
											"end": 9199,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9183,
											"end": 9199,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9183,
											"end": 9199,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9218,
											"end": 9221,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9215,
											"end": 9216,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9212,
											"end": 9222,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 9209,
											"end": 9245,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9209,
											"end": 9245,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 9209,
											"end": 9245,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9225,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 9225,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 9225,
											"end": 9243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9225,
											"end": 9243,
											"name": "tag",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 9225,
											"end": 9243,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9209,
											"end": 9245,
											"name": "tag",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 9209,
											"end": 9245,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9061,
											"end": 9252,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9061,
											"end": 9252,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9061,
											"end": 9252,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9061,
											"end": 9252,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9061,
											"end": 9252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9258,
											"end": 9491,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 9258,
											"end": 9491,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9297,
											"end": 9300,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9320,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 9338,
											"end": 9343,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9320,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 9320,
											"end": 9344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9320,
											"end": 9344,
											"name": "tag",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 9320,
											"end": 9344,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9311,
											"end": 9344,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9311,
											"end": 9344,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9366,
											"end": 9432,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9359,
											"end": 9364,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9356,
											"end": 9433,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9353,
											"end": 9456,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 9353,
											"end": 9456,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9436,
											"end": 9454,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 9436,
											"end": 9454,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 9436,
											"end": 9454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9436,
											"end": 9454,
											"name": "tag",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 9436,
											"end": 9454,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9353,
											"end": 9456,
											"name": "tag",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 9353,
											"end": 9456,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9483,
											"end": 9484,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 9476,
											"end": 9481,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9472,
											"end": 9485,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9465,
											"end": 9485,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9465,
											"end": 9485,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9258,
											"end": 9491,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9258,
											"end": 9491,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9258,
											"end": 9491,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9258,
											"end": 9491,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9497,
											"end": 9829,
											"name": "tag",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 9497,
											"end": 9829,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9618,
											"end": 9622,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9656,
											"end": 9658,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9645,
											"end": 9654,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9641,
											"end": 9659,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9633,
											"end": 9659,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9633,
											"end": 9659,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9669,
											"end": 9740,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 9737,
											"end": 9738,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9726,
											"end": 9735,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9722,
											"end": 9739,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9713,
											"end": 9719,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9669,
											"end": 9740,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 9669,
											"end": 9740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9669,
											"end": 9740,
											"name": "tag",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 9669,
											"end": 9740,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9750,
											"end": 9822,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 9818,
											"end": 9820,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9807,
											"end": 9816,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9803,
											"end": 9821,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9794,
											"end": 9800,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9750,
											"end": 9822,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 9750,
											"end": 9822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9750,
											"end": 9822,
											"name": "tag",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 9750,
											"end": 9822,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9497,
											"end": 9829,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 9497,
											"end": 9829,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9497,
											"end": 9829,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9497,
											"end": 9829,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9497,
											"end": 9829,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9497,
											"end": 9829,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9835,
											"end": 10001,
											"name": "tag",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 9835,
											"end": 10001,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9975,
											"end": 9993,
											"name": "PUSH",
											"source": 8,
											"value": "4E6F20626574732070726F766964656400000000000000000000000000000000"
										},
										{
											"begin": 9971,
											"end": 9972,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9963,
											"end": 9969,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9959,
											"end": 9973,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9952,
											"end": 9994,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9835,
											"end": 10001,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9835,
											"end": 10001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10007,
											"end": 10373,
											"name": "tag",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 10007,
											"end": 10373,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10149,
											"end": 10152,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10170,
											"end": 10237,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 10234,
											"end": 10236,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 10229,
											"end": 10232,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10170,
											"end": 10237,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 10170,
											"end": 10237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10170,
											"end": 10237,
											"name": "tag",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 10170,
											"end": 10237,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10163,
											"end": 10237,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10163,
											"end": 10237,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10246,
											"end": 10339,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 10335,
											"end": 10338,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10246,
											"end": 10339,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 10246,
											"end": 10339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10246,
											"end": 10339,
											"name": "tag",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 10246,
											"end": 10339,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10364,
											"end": 10366,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10359,
											"end": 10362,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10355,
											"end": 10367,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10348,
											"end": 10367,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10348,
											"end": 10367,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10007,
											"end": 10373,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10007,
											"end": 10373,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10007,
											"end": 10373,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10007,
											"end": 10373,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10379,
											"end": 10798,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 10379,
											"end": 10798,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10545,
											"end": 10549,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10583,
											"end": 10585,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10572,
											"end": 10581,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10568,
											"end": 10586,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10560,
											"end": 10586,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10560,
											"end": 10586,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10632,
											"end": 10641,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10626,
											"end": 10630,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10622,
											"end": 10642,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10618,
											"end": 10619,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10607,
											"end": 10616,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10603,
											"end": 10620,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10596,
											"end": 10643,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10660,
											"end": 10791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 10786,
											"end": 10790,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10660,
											"end": 10791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 10660,
											"end": 10791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10660,
											"end": 10791,
											"name": "tag",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 10660,
											"end": 10791,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10652,
											"end": 10791,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10652,
											"end": 10791,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10379,
											"end": 10798,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10379,
											"end": 10798,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10379,
											"end": 10798,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10379,
											"end": 10798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10840,
											"end": 11747,
											"name": "tag",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 10840,
											"end": 11747,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10914,
											"end": 10919,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10958,
											"end": 10962,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 10946,
											"end": 10955,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10941,
											"end": 10944,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10937,
											"end": 10956,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10933,
											"end": 10963,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 10930,
											"end": 11047,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10930,
											"end": 11047,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 10930,
											"end": 11047,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10966,
											"end": 11045,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 10966,
											"end": 11045,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 10966,
											"end": 11045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10966,
											"end": 11045,
											"name": "tag",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 10966,
											"end": 11045,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10930,
											"end": 11047,
											"name": "tag",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 10930,
											"end": 11047,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11065,
											"end": 11086,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 11081,
											"end": 11085,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 11065,
											"end": 11086,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 11065,
											"end": 11086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11065,
											"end": 11086,
											"name": "tag",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 11065,
											"end": 11086,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11056,
											"end": 11086,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11056,
											"end": 11086,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11147,
											"end": 11148,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11187,
											"end": 11236,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 11232,
											"end": 11235,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11223,
											"end": 11229,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11212,
											"end": 11221,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 11208,
											"end": 11230,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11187,
											"end": 11236,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 11187,
											"end": 11236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11187,
											"end": 11236,
											"name": "tag",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 11187,
											"end": 11236,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11180,
											"end": 11184,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11173,
											"end": 11178,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11169,
											"end": 11185,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11162,
											"end": 11237,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11096,
											"end": 11248,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11311,
											"end": 11313,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11352,
											"end": 11401,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 11397,
											"end": 11400,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11388,
											"end": 11394,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11377,
											"end": 11386,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 11373,
											"end": 11395,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11352,
											"end": 11401,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 11352,
											"end": 11401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11352,
											"end": 11401,
											"name": "tag",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 11352,
											"end": 11401,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11345,
											"end": 11349,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11338,
											"end": 11343,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11334,
											"end": 11350,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11327,
											"end": 11402,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11258,
											"end": 11413,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11475,
											"end": 11477,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11516,
											"end": 11565,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 11561,
											"end": 11564,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11552,
											"end": 11558,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11541,
											"end": 11550,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 11537,
											"end": 11559,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11516,
											"end": 11565,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 11516,
											"end": 11565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11516,
											"end": 11565,
											"name": "tag",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 11516,
											"end": 11565,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11509,
											"end": 11513,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11502,
											"end": 11507,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11498,
											"end": 11514,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11491,
											"end": 11566,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11423,
											"end": 11577,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11638,
											"end": 11640,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 11679,
											"end": 11728,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 11724,
											"end": 11727,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11715,
											"end": 11721,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11704,
											"end": 11713,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 11700,
											"end": 11722,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11679,
											"end": 11728,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 11679,
											"end": 11728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11679,
											"end": 11728,
											"name": "tag",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 11679,
											"end": 11728,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11672,
											"end": 11676,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 11665,
											"end": 11670,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11661,
											"end": 11677,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11654,
											"end": 11729,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11587,
											"end": 11740,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10840,
											"end": 11747,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10840,
											"end": 11747,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10840,
											"end": 11747,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10840,
											"end": 11747,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10840,
											"end": 11747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11753,
											"end": 12133,
											"name": "tag",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 11753,
											"end": 12133,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11837,
											"end": 11843,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11886,
											"end": 11889,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 11874,
											"end": 11883,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11865,
											"end": 11872,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11861,
											"end": 11884,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11857,
											"end": 11890,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 11854,
											"end": 11974,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11854,
											"end": 11974,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 11854,
											"end": 11974,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11893,
											"end": 11972,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 11893,
											"end": 11972,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 11893,
											"end": 11972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11893,
											"end": 11972,
											"name": "tag",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 11893,
											"end": 11972,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11854,
											"end": 11974,
											"name": "tag",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 11854,
											"end": 11974,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12013,
											"end": 12014,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12038,
											"end": 12116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 12108,
											"end": 12115,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12099,
											"end": 12105,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12088,
											"end": 12097,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 12084,
											"end": 12106,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12038,
											"end": 12116,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 12038,
											"end": 12116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12038,
											"end": 12116,
											"name": "tag",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 12038,
											"end": 12116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12028,
											"end": 12116,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12028,
											"end": 12116,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11984,
											"end": 12126,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11753,
											"end": 12133,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11753,
											"end": 12133,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11753,
											"end": 12133,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11753,
											"end": 12133,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11753,
											"end": 12133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12139,
											"end": 12581,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 12139,
											"end": 12581,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12288,
											"end": 12292,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12326,
											"end": 12328,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 12315,
											"end": 12324,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12311,
											"end": 12329,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12303,
											"end": 12329,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12303,
											"end": 12329,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12339,
											"end": 12410,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 12407,
											"end": 12408,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12396,
											"end": 12405,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12392,
											"end": 12409,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12383,
											"end": 12389,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 12339,
											"end": 12410,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 12339,
											"end": 12410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12339,
											"end": 12410,
											"name": "tag",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 12339,
											"end": 12410,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12420,
											"end": 12492,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 12488,
											"end": 12490,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12477,
											"end": 12486,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12473,
											"end": 12491,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12464,
											"end": 12470,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 12420,
											"end": 12492,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 12420,
											"end": 12492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12420,
											"end": 12492,
											"name": "tag",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 12420,
											"end": 12492,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12502,
											"end": 12574,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 12570,
											"end": 12572,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12559,
											"end": 12568,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12555,
											"end": 12573,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12546,
											"end": 12552,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12502,
											"end": 12574,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 12502,
											"end": 12574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12502,
											"end": 12574,
											"name": "tag",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 12502,
											"end": 12574,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12139,
											"end": 12581,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 12139,
											"end": 12581,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 12139,
											"end": 12581,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12139,
											"end": 12581,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12139,
											"end": 12581,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12139,
											"end": 12581,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12139,
											"end": 12581,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12587,
											"end": 12781,
											"name": "tag",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 12587,
											"end": 12781,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12627,
											"end": 12631,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12647,
											"end": 12667,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 12665,
											"end": 12666,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12647,
											"end": 12667,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 12647,
											"end": 12667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12647,
											"end": 12667,
											"name": "tag",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 12647,
											"end": 12667,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12642,
											"end": 12667,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12642,
											"end": 12667,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12681,
											"end": 12701,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 12699,
											"end": 12700,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12681,
											"end": 12701,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 12681,
											"end": 12701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12681,
											"end": 12701,
											"name": "tag",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 12681,
											"end": 12701,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12676,
											"end": 12701,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12676,
											"end": 12701,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12725,
											"end": 12726,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12722,
											"end": 12723,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12718,
											"end": 12727,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12710,
											"end": 12727,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12710,
											"end": 12727,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12749,
											"end": 12750,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12743,
											"end": 12747,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12740,
											"end": 12751,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 12737,
											"end": 12774,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12737,
											"end": 12774,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 12737,
											"end": 12774,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12754,
											"end": 12772,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 12754,
											"end": 12772,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 12754,
											"end": 12772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12754,
											"end": 12772,
											"name": "tag",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 12754,
											"end": 12772,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12737,
											"end": 12774,
											"name": "tag",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 12737,
											"end": 12774,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12587,
											"end": 12781,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12587,
											"end": 12781,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12587,
											"end": 12781,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12587,
											"end": 12781,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12587,
											"end": 12781,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12787,
											"end": 12968,
											"name": "tag",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 12787,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12927,
											"end": 12960,
											"name": "PUSH",
											"source": 8,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 12923,
											"end": 12924,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12915,
											"end": 12921,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12911,
											"end": 12925,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12904,
											"end": 12961,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12787,
											"end": 12968,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12787,
											"end": 12968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12974,
											"end": 13340,
											"name": "tag",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 12974,
											"end": 13340,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13116,
											"end": 13119,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13137,
											"end": 13204,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 13201,
											"end": 13203,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 13196,
											"end": 13199,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13137,
											"end": 13204,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 13137,
											"end": 13204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13137,
											"end": 13204,
											"name": "tag",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 13137,
											"end": 13204,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13130,
											"end": 13204,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13130,
											"end": 13204,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13213,
											"end": 13306,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 13302,
											"end": 13305,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13213,
											"end": 13306,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 13213,
											"end": 13306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13213,
											"end": 13306,
											"name": "tag",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 13213,
											"end": 13306,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13331,
											"end": 13333,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13326,
											"end": 13329,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13322,
											"end": 13334,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13315,
											"end": 13334,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13315,
											"end": 13334,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12974,
											"end": 13340,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12974,
											"end": 13340,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12974,
											"end": 13340,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12974,
											"end": 13340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13346,
											"end": 13765,
											"name": "tag",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 13346,
											"end": 13765,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13512,
											"end": 13516,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13550,
											"end": 13552,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13539,
											"end": 13548,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13535,
											"end": 13553,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13527,
											"end": 13553,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13527,
											"end": 13553,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13599,
											"end": 13608,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13593,
											"end": 13597,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13589,
											"end": 13609,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13585,
											"end": 13586,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13574,
											"end": 13583,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13570,
											"end": 13587,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13563,
											"end": 13610,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13627,
											"end": 13758,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 13753,
											"end": 13757,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13627,
											"end": 13758,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 13627,
											"end": 13758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13627,
											"end": 13758,
											"name": "tag",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 13627,
											"end": 13758,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13619,
											"end": 13758,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13619,
											"end": 13758,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13346,
											"end": 13765,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13346,
											"end": 13765,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13346,
											"end": 13765,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13346,
											"end": 13765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13771,
											"end": 13889,
											"name": "tag",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 13771,
											"end": 13889,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13858,
											"end": 13882,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 13876,
											"end": 13881,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13858,
											"end": 13882,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 13858,
											"end": 13882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13858,
											"end": 13882,
											"name": "tag",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 13858,
											"end": 13882,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13853,
											"end": 13856,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13846,
											"end": 13883,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13771,
											"end": 13889,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13771,
											"end": 13889,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13771,
											"end": 13889,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13895,
											"end": 14337,
											"name": "tag",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 13895,
											"end": 14337,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14044,
											"end": 14048,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14082,
											"end": 14084,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 14071,
											"end": 14080,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14067,
											"end": 14085,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14059,
											"end": 14085,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14059,
											"end": 14085,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14095,
											"end": 14166,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 14163,
											"end": 14164,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14152,
											"end": 14161,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14148,
											"end": 14165,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14139,
											"end": 14145,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 14095,
											"end": 14166,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 14095,
											"end": 14166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14095,
											"end": 14166,
											"name": "tag",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 14095,
											"end": 14166,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14176,
											"end": 14248,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 14244,
											"end": 14246,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14233,
											"end": 14242,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14229,
											"end": 14247,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14220,
											"end": 14226,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 14176,
											"end": 14248,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 14176,
											"end": 14248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14176,
											"end": 14248,
											"name": "tag",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 14176,
											"end": 14248,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14258,
											"end": 14330,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 14326,
											"end": 14328,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 14315,
											"end": 14324,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14311,
											"end": 14329,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14302,
											"end": 14308,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 14258,
											"end": 14330,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 14258,
											"end": 14330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14258,
											"end": 14330,
											"name": "tag",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 14258,
											"end": 14330,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13895,
											"end": 14337,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 13895,
											"end": 14337,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 13895,
											"end": 14337,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13895,
											"end": 14337,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13895,
											"end": 14337,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13895,
											"end": 14337,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13895,
											"end": 14337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14343,
											"end": 14675,
											"name": "tag",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 14343,
											"end": 14675,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14464,
											"end": 14468,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14502,
											"end": 14504,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 14491,
											"end": 14500,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14487,
											"end": 14505,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14479,
											"end": 14505,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14479,
											"end": 14505,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14515,
											"end": 14586,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 14583,
											"end": 14584,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14572,
											"end": 14581,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14568,
											"end": 14585,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14559,
											"end": 14565,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 14515,
											"end": 14586,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 14515,
											"end": 14586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14515,
											"end": 14586,
											"name": "tag",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 14515,
											"end": 14586,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14596,
											"end": 14668,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 14664,
											"end": 14666,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14653,
											"end": 14662,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14649,
											"end": 14667,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14640,
											"end": 14646,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 14596,
											"end": 14668,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 14596,
											"end": 14668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14596,
											"end": 14668,
											"name": "tag",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 14596,
											"end": 14668,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14343,
											"end": 14675,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 14343,
											"end": 14675,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14343,
											"end": 14675,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14343,
											"end": 14675,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14343,
											"end": 14675,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14343,
											"end": 14675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14681,
											"end": 14766,
											"name": "tag",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 14681,
											"end": 14766,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14726,
											"end": 14733,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14755,
											"end": 14760,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14744,
											"end": 14760,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14744,
											"end": 14760,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14681,
											"end": 14766,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14681,
											"end": 14766,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14681,
											"end": 14766,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14681,
											"end": 14766,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14772,
											"end": 14832,
											"name": "tag",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 14772,
											"end": 14832,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14800,
											"end": 14803,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14821,
											"end": 14826,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14814,
											"end": 14826,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14814,
											"end": 14826,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14772,
											"end": 14832,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14772,
											"end": 14832,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14772,
											"end": 14832,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14772,
											"end": 14832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14838,
											"end": 14996,
											"name": "tag",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 14838,
											"end": 14996,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14896,
											"end": 14905,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14929,
											"end": 14990,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 14947,
											"end": 14989,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 14956,
											"end": 14988,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 14982,
											"end": 14987,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 14956,
											"end": 14988,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 14956,
											"end": 14988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14956,
											"end": 14988,
											"name": "tag",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 14956,
											"end": 14988,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14947,
											"end": 14989,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 14947,
											"end": 14989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14947,
											"end": 14989,
											"name": "tag",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 14947,
											"end": 14989,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14929,
											"end": 14990,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 14929,
											"end": 14990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14929,
											"end": 14990,
											"name": "tag",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 14929,
											"end": 14990,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14916,
											"end": 14990,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14916,
											"end": 14990,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14838,
											"end": 14996,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14838,
											"end": 14996,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14838,
											"end": 14996,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14838,
											"end": 14996,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15002,
											"end": 15149,
											"name": "tag",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 15002,
											"end": 15149,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15097,
											"end": 15142,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 15136,
											"end": 15141,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15097,
											"end": 15142,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 15097,
											"end": 15142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15097,
											"end": 15142,
											"name": "tag",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 15097,
											"end": 15142,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15092,
											"end": 15095,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15085,
											"end": 15143,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15002,
											"end": 15149,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15002,
											"end": 15149,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15002,
											"end": 15149,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15155,
											"end": 15503,
											"name": "tag",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 15155,
											"end": 15503,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15284,
											"end": 15288,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15322,
											"end": 15324,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 15311,
											"end": 15320,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15307,
											"end": 15325,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15299,
											"end": 15325,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15299,
											"end": 15325,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15335,
											"end": 15406,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 15403,
											"end": 15404,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15392,
											"end": 15401,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15388,
											"end": 15405,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15379,
											"end": 15385,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 15335,
											"end": 15406,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 15335,
											"end": 15406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15335,
											"end": 15406,
											"name": "tag",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 15335,
											"end": 15406,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15416,
											"end": 15496,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 15492,
											"end": 15494,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15481,
											"end": 15490,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15477,
											"end": 15495,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15468,
											"end": 15474,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 15416,
											"end": 15496,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 15416,
											"end": 15496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15416,
											"end": 15496,
											"name": "tag",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 15416,
											"end": 15496,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15155,
											"end": 15503,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 15155,
											"end": 15503,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 15155,
											"end": 15503,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15155,
											"end": 15503,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15155,
											"end": 15503,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15155,
											"end": 15503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15509,
											"end": 15731,
											"name": "tag",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 15509,
											"end": 15731,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15602,
											"end": 15606,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15640,
											"end": 15642,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15629,
											"end": 15638,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15625,
											"end": 15643,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15617,
											"end": 15643,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15617,
											"end": 15643,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15653,
											"end": 15724,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 15721,
											"end": 15722,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15710,
											"end": 15719,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15706,
											"end": 15723,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15697,
											"end": 15703,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 15653,
											"end": 15724,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 15653,
											"end": 15724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15653,
											"end": 15724,
											"name": "tag",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 15653,
											"end": 15724,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15509,
											"end": 15731,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 15509,
											"end": 15731,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15509,
											"end": 15731,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15509,
											"end": 15731,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15509,
											"end": 15731,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"MarketRouter.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"batchClaim((address,uint256)[])": "8a48ca85",
							"placeBatchBets((address,uint256,uint256,uint256)[],address)": "ead99b61"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"marketCount\",\"type\":\"uint256\"}],\"name\":\"BatchBetPlaced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalClaimed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"marketCount\",\"type\":\"uint256\"}],\"name\":\"BatchClaimExecuted\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"market\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"marketId\",\"type\":\"uint256\"}],\"internalType\":\"struct MarketRouter.BatchClaim[]\",\"name\":\"claims\",\"type\":\"tuple[]\"}],\"name\":\"batchClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"market\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"marketId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outcome\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct MarketRouter.BatchBet[]\",\"name\":\"bets\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"placeBatchBets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MarketRouter.sol\":\"MarketRouter\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"MarketRouter.sol\":{\"keccak256\":\"0xce8e121d77d720a94bcd0e1a406ac44c87de894e8fda6b78a5751c1198c0745a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba56d3ad3b2a9d80e6b52afdcdfae8aa945b457859da0933cb1bfb124b048907\",\"dweb:/ipfs/QmVGhVd1uvt2ojoYqGKn6KnWTTRBhdM6BB55FFW7YvCFzn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 100,
								"contract": "MarketRouter.sol:MarketRouter",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"PredictionMarket": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "marketId",
									"type": "uint256"
								}
							],
							"name": "claimWinnings",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "marketId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "outcome",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "placeBet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"claimWinnings(uint256)": "677bd9ff",
							"placeBet(uint256,uint256,uint256)": "e71c9697"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"marketId\",\"type\":\"uint256\"}],\"name\":\"claimWinnings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"marketId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outcome\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"placeBet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MarketRouter.sol\":\"PredictionMarket\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"MarketRouter.sol\":{\"keccak256\":\"0xce8e121d77d720a94bcd0e1a406ac44c87de894e8fda6b78a5751c1198c0745a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba56d3ad3b2a9d80e6b52afdcdfae8aa945b457859da0933cb1bfb124b048907\",\"dweb:/ipfs/QmVGhVd1uvt2ojoYqGKn6KnWTTRBhdM6BB55FFW7YvCFzn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							81
						],
						"IERC165": [
							708
						],
						"IERC20": [
							232
						]
					},
					"id": 82,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 82,
							"sourceUnit": 90,
							"src": "133:36:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 232,
										"src": "141:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 82,
							"sourceUnit": 86,
							"src": "170:38:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 708,
										"src": "178:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "IERC20",
										"nameLocations": [
											"590:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 232,
										"src": "590:6:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "IERC165",
										"nameLocations": [
											"598:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 708,
										"src": "598:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:0"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:0",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 81,
							"linearizedBaseContracts": [
								81,
								708,
								232
							],
							"name": "IERC1363",
							"nameLocation": "578:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 20,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1548:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 12,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1560:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1593:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 17,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:0"
									},
									"scope": 81,
									"src": "1523:76:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 32,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2088:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 22,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2100:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2115:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 26,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2154:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 29,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:0"
									},
									"scope": 81,
									"src": "2063:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2653:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2667:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2679:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2712:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:0"
									},
									"scope": 81,
									"src": "2624:94:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3294:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3308:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3320:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3335:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 52,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3374:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:0"
									},
									"scope": 81,
									"src": "3265:115:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 68,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3805:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3822:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3855:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 65,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:0"
									},
									"scope": 81,
									"src": "3781:80:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4374:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4391:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4406:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 74,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4445:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 77,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:0"
									},
									"scope": 81,
									"src": "4350:101:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 82,
							"src": "568:3885:0",
							"usedErrors": [],
							"usedEvents": [
								166,
								175
							]
						}
					],
					"src": "107:4347:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							708
						]
					},
					"id": 86,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 83,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 85,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 86,
							"sourceUnit": 709,
							"src": "133:59:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 84,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 708,
										"src": "141:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:87:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							232
						]
					},
					"id": 90,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 87,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "105:25:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 89,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 90,
							"sourceUnit": 233,
							"src": "132:49:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 88,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 232,
										"src": "140:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:77:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							154
						]
					},
					"id": 155,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 91,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 92,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:3",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 154,
							"linearizedBaseContracts": [
								154
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 95,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 154,
									"src": "1676:41:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 93,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 94,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 98,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 154,
									"src": "1723:37:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 96,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 97,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 100,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 154,
									"src": "1767:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 99,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "1811:39:3",
										"statements": [
											{
												"expression": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 103,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "1821:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 104,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "1831:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 106,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:3"
											}
										]
									},
									"id": 108,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:3"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:3"
									},
									"scope": 154,
									"src": "1797:53:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 118,
										"nodeType": "Block",
										"src": "2251:79:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 111,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 134,
														"src": "2261:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 113,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:3"
											},
											{
												"id": 114,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:3"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 115,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 142,
														"src": "2303:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 117,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:3"
											}
										]
									},
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:3",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 119,
									"name": "nonReentrant",
									"nameLocation": "2236:12:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:3"
									},
									"src": "2227:103:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 133,
										"nodeType": "Block",
										"src": "2375:248:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 123,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 100,
																"src": "2468:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 124,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "2479:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 122,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 128,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:3"
											},
											{
												"expression": {
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 129,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "2598:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 130,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 98,
														"src": "2608:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:3"
											}
										]
									},
									"id": 134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:3"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:3"
									},
									"scope": 154,
									"src": "2336:287:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "2667:171:3",
										"statements": [
											{
												"expression": {
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 137,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "2809:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 138,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "2819:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:3"
											}
										]
									},
									"id": 142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:3"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:3"
									},
									"scope": 154,
									"src": "2629:209:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 152,
										"nodeType": "Block",
										"src": "3081:43:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 148,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "3098:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 149,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 98,
														"src": "3109:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 147,
												"id": 151,
												"nodeType": "Return",
												"src": "3091:26:3"
											}
										]
									},
									"documentation": {
										"id": 143,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:3",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:3"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "3075:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 145,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:3"
									},
									"scope": 154,
									"src": "3017:107:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 155,
							"src": "888:2238:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							232
						]
					},
					"id": 233,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 156,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 157,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 232,
							"linearizedBaseContracts": [
								232
							],
							"name": "IERC20",
							"nameLocation": "215:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 166,
									"name": "Transfer",
									"nameLocation": "397:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "406:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "428:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "448:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:4"
									},
									"src": "391:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 175,
									"name": "Approval",
									"nameLocation": "628:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "637:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "660:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "685:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:4"
									},
									"src": "622:78:4"
								},
								{
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 181,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:4"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "822:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:4"
									},
									"scope": 232,
									"src": "776:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 189,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "932:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:4"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "972:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:4"
									},
									"scope": 232,
									"src": "913:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 199,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "1223:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "1235:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:4"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "1268:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 196,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:4"
									},
									"scope": 232,
									"src": "1205:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 209,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "1568:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "1583:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:4"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "1623:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:4"
									},
									"scope": 232,
									"src": "1549:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 219,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "2327:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "2344:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:4"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "2377:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 216,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:4"
									},
									"scope": 232,
									"src": "2310:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 231,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2713:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2727:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2739:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:4"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2772:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 228,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:4"
									},
									"scope": 232,
									"src": "2691:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 233,
							"src": "205:2575:4",
							"usedErrors": [],
							"usedEvents": [
								166,
								175
							]
						}
					],
					"src": "106:2675:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							81
						],
						"IERC20": [
							232
						],
						"SafeERC20": [
							696
						]
					},
					"id": 697,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 234,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 236,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 697,
							"sourceUnit": 233,
							"src": "141:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 235,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 232,
										"src": "149:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 238,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 697,
							"sourceUnit": 82,
							"src": "179:58:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 237,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 81,
										"src": "187:8:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 239,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:5",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 696,
							"linearizedBaseContracts": [
								696
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:5",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 244,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "823:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:5"
									},
									"src": "792:46:5"
								},
								{
									"documentation": {
										"id": 245,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:5",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 253,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "959:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 246,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "976:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "1002:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:5"
									},
									"src": "920:109:5"
								},
								{
									"body": {
										"id": 276,
										"nodeType": "Block",
										"src": "1291:88:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 265,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "1321:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 268,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 257,
																		"src": "1343:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 269,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 199,
																	"src": "1343:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 270,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 259,
																			"src": "1360:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 271,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 261,
																			"src": "1364:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 272,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 266,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 267,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 264,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 654,
														"src": "1301:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 275,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:5"
											}
										]
									},
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:5",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 277,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "1241:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 256,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 255,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "1241:6:5"
													},
													"referencedDeclaration": 232,
													"src": "1241:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "1255:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "1267:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:5"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:5"
									},
									"scope": 696,
									"src": "1219:160:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 303,
										"nodeType": "Block",
										"src": "1708:98:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 291,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "1738:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 294,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 281,
																		"src": "1760:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:5",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 231,
																	"src": "1760:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 296,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 283,
																			"src": "1781:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 297,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 285,
																			"src": "1787:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 298,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 287,
																			"src": "1791:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 299,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 292,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 290,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 654,
														"src": "1718:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:5"
											}
										]
									},
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:5",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 304,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "1644:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 280,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 279,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "1644:6:5"
													},
													"referencedDeclaration": 232,
													"src": "1644:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "1658:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "1672:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "1684:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:5"
									},
									"returnParameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:5"
									},
									"scope": 696,
									"src": "1618:188:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 329,
										"nodeType": "Block",
										"src": "2033:99:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 318,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "2074:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 321,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 308,
																		"src": "2096:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 199,
																	"src": "2096:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 323,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 310,
																			"src": "2113:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 324,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 312,
																			"src": "2117:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 325,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2112:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 319,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2081:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 320,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2085:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2081:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:43:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 317,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "2050:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:75:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 316,
												"id": 328,
												"nodeType": "Return",
												"src": "2043:82:5"
											}
										]
									},
									"documentation": {
										"id": 305,
										"nodeType": "StructuredDocumentation",
										"src": "1812:126:5",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 330,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "1952:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1975:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "1968:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 307,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 306,
														"name": "IERC20",
														"nameLocations": [
															"1968:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "1968:6:5"
													},
													"referencedDeclaration": 232,
													"src": "1968:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1990:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "1982:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2002:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "1994:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:41:5"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "2027:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 314,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:6:5"
									},
									"scope": 696,
									"src": "1943:189:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "2381:109:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 346,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "2422:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 349,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 334,
																		"src": "2444:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 350,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:12:5",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 231,
																	"src": "2444:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 351,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 336,
																			"src": "2465:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 352,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 338,
																			"src": "2471:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 353,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 340,
																			"src": "2475:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 354,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2464:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 347,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2429:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 348,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2433:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2429:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:53:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 345,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "2398:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:85:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 344,
												"id": 357,
												"nodeType": "Return",
												"src": "2391:92:5"
											}
										]
									},
									"documentation": {
										"id": 331,
										"nodeType": "StructuredDocumentation",
										"src": "2138:130:5",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2282:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2309:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2302:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 333,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 332,
														"name": "IERC20",
														"nameLocations": [
															"2302:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "2302:6:5"
													},
													"referencedDeclaration": 232,
													"src": "2302:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2316:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2338:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2330:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2342:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:55:5"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2375:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:5"
									},
									"scope": 696,
									"src": "2273:217:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "3232:139:5",
										"statements": [
											{
												"assignments": [
													371
												],
												"declarations": [
													{
														"constant": false,
														"id": 371,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3250:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 389,
														"src": "3242:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 370,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 380,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 376,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3289:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$696",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$696",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 375,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3281:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 374,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3281:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3281:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 378,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "3296:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 372,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "3265:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														"id": 373,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3271:9:5",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 209,
														"src": "3265:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:62:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 382,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "3327:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 383,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "3334:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 384,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 371,
																"src": "3343:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 385,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 367,
																"src": "3358:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3343:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 381,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 480,
														"src": "3314:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 388,
												"nodeType": "ExpressionStatement",
												"src": "3314:50:5"
											}
										]
									},
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "2496:645:5",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3155:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3177:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 362,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 361,
														"name": "IERC20",
														"nameLocations": [
															"3177:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "3177:6:5"
													},
													"referencedDeclaration": 232,
													"src": "3177:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3199:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3191:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3216:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3208:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:46:5"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:5"
									},
									"scope": 696,
									"src": "3146:225:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 432,
										"nodeType": "Block",
										"src": "4137:370:5",
										"statements": [
											{
												"id": 431,
												"nodeType": "UncheckedBlock",
												"src": "4147:354:5",
												"statements": [
													{
														"assignments": [
															402
														],
														"declarations": [
															{
																"constant": false,
																"id": 402,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4179:16:5",
																"nodeType": "VariableDeclaration",
																"scope": 431,
																"src": "4171:24:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 401,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 411,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 407,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4222:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$696",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$696",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4214:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 405,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4214:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 408,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 409,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 396,
																	"src": "4229:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 403,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 394,
																	"src": "4198:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$232",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4204:9:5",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 209,
																"src": "4198:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4198:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:66:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 412,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 402,
																"src": "4255:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 413,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "4274:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4255:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 422,
														"nodeType": "IfStatement",
														"src": "4251:160:5",
														"trueBody": {
															"id": 421,
															"nodeType": "Block",
															"src": "4293:118:5",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 416,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 396,
																				"src": "4351:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 417,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 402,
																				"src": "4360:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 418,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 398,
																				"src": "4378:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 415,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 253,
																			"src": "4318:32:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 419,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4318:78:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 420,
																	"nodeType": "RevertStatement",
																	"src": "4311:85:5"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 424,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 394,
																	"src": "4437:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$232",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 425,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 396,
																	"src": "4444:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 426,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 402,
																		"src": "4453:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 427,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 398,
																		"src": "4472:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4453:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$232",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 423,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "4424:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4424:66:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 430,
														"nodeType": "ExpressionStatement",
														"src": "4424:66:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "3377:657:5",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4048:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4077:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "4070:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 393,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 392,
														"name": "IERC20",
														"nameLocations": [
															"4070:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "4070:6:5"
													},
													"referencedDeclaration": 232,
													"src": "4070:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4092:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "4084:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4109:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "4101:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:58:5"
									},
									"returnParameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:5"
									},
									"scope": 696,
									"src": "4039:468:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "5161:303:5",
										"statements": [
											{
												"assignments": [
													445
												],
												"declarations": [
													{
														"constant": false,
														"id": 445,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "5184:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 479,
														"src": "5171:25:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 444,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5171:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 454,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 448,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 437,
																"src": "5214:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$232",
																	"typeString": "contract IERC20"
																}
															},
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:5",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 219,
															"src": "5214:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 450,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 439,
																	"src": "5230:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 451,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 441,
																	"src": "5239:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 452,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5229:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 446,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5199:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 447,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5203:10:5",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "5199:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:75:5"
											},
											{
												"condition": {
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5261:45:5",
													"subExpression": {
														"arguments": [
															{
																"id": 456,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 437,
																"src": "5286:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$232",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 457,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 445,
																"src": "5293:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$232",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 455,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "5262:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 458,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5262:44:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 478,
												"nodeType": "IfStatement",
												"src": "5257:201:5",
												"trueBody": {
													"id": 477,
													"nodeType": "Block",
													"src": "5308:150:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 461,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 437,
																		"src": "5342:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 464,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 437,
																					"src": "5364:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$232",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 465,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5370:7:5",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 219,
																				"src": "5364:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 466,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 439,
																						"src": "5380:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 467,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5389:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 468,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5379:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 462,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5349:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 463,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5353:10:5",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "5349:14:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:43:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 460,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 654,
																	"src": "5322:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5322:71:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 471,
															"nodeType": "ExpressionStatement",
															"src": "5322:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 473,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 437,
																		"src": "5427:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 474,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 445,
																		"src": "5434:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 472,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 654,
																	"src": "5407:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5407:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 476,
															"nodeType": "ExpressionStatement",
															"src": "5407:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "4513:566:5",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5093:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5113:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "5106:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 436,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 435,
														"name": "IERC20",
														"nameLocations": [
															"5106:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "5106:6:5"
													},
													"referencedDeclaration": 232,
													"src": "5106:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "5120:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5145:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "5137:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:46:5"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:5"
									},
									"scope": 696,
									"src": "5084:380:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "5911:219:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 493,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 486,
																"src": "5925:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5928:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5925:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 495,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5925:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5925:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6011:39:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 507,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 486,
																	"src": "6034:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 508,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 488,
																	"src": "6038:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 509,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 490,
																	"src": "6045:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 505,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 484,
																	"src": "6012:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6018:15:5",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 32,
																"src": "6012:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:38:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 520,
													"nodeType": "IfStatement",
													"src": "6007:117:5",
													"trueBody": {
														"id": 519,
														"nodeType": "Block",
														"src": "6052:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 515,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 484,
																					"src": "6106:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 514,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6098:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 513,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6098:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 516,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6098:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 512,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 244,
																		"src": "6073:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6073:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 518,
																"nodeType": "RevertStatement",
																"src": "6066:47:5"
															}
														]
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5921:203:5",
												"trueBody": {
													"id": 504,
													"nodeType": "Block",
													"src": "5946:55:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 499,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 484,
																		"src": "5973:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 500,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 486,
																		"src": "5980:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 501,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 488,
																		"src": "5984:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 498,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 277,
																	"src": "5960:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 503,
															"nodeType": "ExpressionStatement",
															"src": "5960:30:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "5470:333:5",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5817:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5849:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "5840:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 483,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 482,
														"name": "IERC1363",
														"nameLocations": [
															"5840:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "5840:8:5"
													},
													"referencedDeclaration": 81,
													"src": "5840:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "5856:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "5868:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5896:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "5883:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 489,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:62:5"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5911:0:5"
									},
									"scope": 696,
									"src": "5808:322:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 569,
										"nodeType": "Block",
										"src": "6649:239:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 538,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 531,
																"src": "6663:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6666:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6663:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 540,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6671:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6663:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 541,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6663:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6759:49:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 529,
																	"src": "6786:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 554,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 531,
																	"src": "6792:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 555,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 533,
																	"src": "6796:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 556,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 535,
																	"src": "6803:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 551,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 527,
																	"src": "6760:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 552,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6766:19:5",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 58,
																"src": "6760:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 557,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6760:48:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 567,
													"nodeType": "IfStatement",
													"src": "6755:127:5",
													"trueBody": {
														"id": 566,
														"nodeType": "Block",
														"src": "6810:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 562,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 527,
																					"src": "6864:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 561,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6856:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 560,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6856:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6856:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 559,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 244,
																		"src": "6831:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6831:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 565,
																"nodeType": "RevertStatement",
																"src": "6824:47:5"
															}
														]
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "6659:223:5",
												"trueBody": {
													"id": 550,
													"nodeType": "Block",
													"src": "6684:65:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 544,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 527,
																		"src": "6715:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 545,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 529,
																		"src": "6722:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 546,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 531,
																		"src": "6728:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 547,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 533,
																		"src": "6732:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 543,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 304,
																	"src": "6698:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6698:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 549,
															"nodeType": "ExpressionStatement",
															"src": "6698:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "6136:341:5",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6491:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "6527:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 526,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 525,
														"name": "IERC1363",
														"nameLocations": [
															"6527:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "6527:8:5"
													},
													"referencedDeclaration": 81,
													"src": "6527:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6559:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "6551:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6581:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "6573:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6601:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "6593:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "6616:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 534,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:122:5"
									},
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6649:0:5"
									},
									"scope": 696,
									"src": "6482:406:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 612,
										"nodeType": "Block",
										"src": "7655:218:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 583,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 576,
																"src": "7669:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7672:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7669:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 585,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7677:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7669:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 586,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7687:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7669:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 601,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7755:38:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 597,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 576,
																	"src": "7777:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 598,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 578,
																	"src": "7781:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 599,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "7788:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 595,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 574,
																	"src": "7756:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7762:14:5",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 80,
																"src": "7756:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 600,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:37:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 610,
													"nodeType": "IfStatement",
													"src": "7751:116:5",
													"trueBody": {
														"id": 609,
														"nodeType": "Block",
														"src": "7795:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 605,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 574,
																					"src": "7849:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 604,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7841:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 603,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7841:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 606,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7841:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 602,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 244,
																		"src": "7816:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7816:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 608,
																"nodeType": "RevertStatement",
																"src": "7809:47:5"
															}
														]
													}
												},
												"id": 611,
												"nodeType": "IfStatement",
												"src": "7665:202:5",
												"trueBody": {
													"id": 594,
													"nodeType": "Block",
													"src": "7690:55:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 589,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 574,
																		"src": "7717:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 590,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 576,
																		"src": "7724:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 591,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 578,
																		"src": "7728:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 588,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 480,
																	"src": "7704:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7704:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 593,
															"nodeType": "ExpressionStatement",
															"src": "7704:30:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 571,
										"nodeType": "StructuredDocumentation",
										"src": "6894:654:5",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 613,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7562:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7593:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "7584:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 573,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 572,
														"name": "IERC1363",
														"nameLocations": [
															"7584:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "7584:8:5"
													},
													"referencedDeclaration": 81,
													"src": "7584:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7608:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "7600:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7620:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "7612:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7640:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "7627:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 579,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7627:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:62:5"
									},
									"returnParameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:5"
									},
									"scope": 696,
									"src": "7553:320:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 653,
										"nodeType": "Block",
										"src": "8440:650:5",
										"statements": [
											{
												"assignments": [
													623
												],
												"declarations": [
													{
														"constant": false,
														"id": 623,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "8458:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 653,
														"src": "8450:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 622,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8450:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 624,
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:18:5"
											},
											{
												"assignments": [
													626
												],
												"declarations": [
													{
														"constant": false,
														"id": 626,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "8486:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 653,
														"src": "8478:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 625,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 627,
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:19:5"
											},
											{
												"AST": {
													"nativeSrc": "8532:396:5",
													"nodeType": "YulBlock",
													"src": "8532:396:5",
													"statements": [
														{
															"nativeSrc": "8546:75:5",
															"nodeType": "YulVariableDeclaration",
															"src": "8546:75:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "8566:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:5"
																		},
																		"nativeSrc": "8566:5:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8566:5:5"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "8573:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "8573:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8580:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8587:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "8587:4:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8593:4:5",
																				"nodeType": "YulLiteral",
																				"src": "8593:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8583:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:5"
																		},
																		"nativeSrc": "8583:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8583:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8606:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8600:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "8600:5:5"
																		},
																		"nativeSrc": "8600:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8600:11:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8613:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8616:4:5",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "8561:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:5"
																},
																"nativeSrc": "8561:60:5",
																"nodeType": "YulFunctionCall",
																"src": "8561:60:5"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "8550:7:5",
																	"nodeType": "YulTypedName",
																	"src": "8550:7:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8682:157:5",
																"nodeType": "YulBlock",
																"src": "8682:157:5",
																"statements": [
																	{
																		"nativeSrc": "8700:22:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8700:22:5",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8717:4:5",
																					"nodeType": "YulLiteral",
																					"src": "8717:4:5",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8711:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "8711:5:5"
																			},
																			"nativeSrc": "8711:11:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8711:11:5"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8704:3:5",
																				"nodeType": "YulTypedName",
																				"src": "8704:3:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8754:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8759:1:5",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8762:14:5",
																						"nodeType": "YulIdentifier",
																						"src": "8762:14:5"
																					},
																					"nativeSrc": "8762:16:5",
																					"nodeType": "YulFunctionCall",
																					"src": "8762:16:5"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8739:14:5",
																				"nodeType": "YulIdentifier",
																				"src": "8739:14:5"
																			},
																			"nativeSrc": "8739:40:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8739:40:5"
																		},
																		"nativeSrc": "8739:40:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:40:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8803:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8803:3:5"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8808:14:5",
																						"nodeType": "YulIdentifier",
																						"src": "8808:14:5"
																					},
																					"nativeSrc": "8808:16:5",
																					"nodeType": "YulFunctionCall",
																					"src": "8808:16:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8796:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:5"
																			},
																			"nativeSrc": "8796:29:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8796:29:5"
																		},
																		"nativeSrc": "8796:29:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8796:29:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8673:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "8673:7:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8666:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:5"
																},
																"nativeSrc": "8666:15:5",
																"nodeType": "YulFunctionCall",
																"src": "8666:15:5"
															},
															"nativeSrc": "8663:176:5",
															"nodeType": "YulIf",
															"src": "8663:176:5"
														},
														{
															"nativeSrc": "8852:30:5",
															"nodeType": "YulAssignment",
															"src": "8852:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8866:14:5",
																	"nodeType": "YulIdentifier",
																	"src": "8866:14:5"
																},
																"nativeSrc": "8866:16:5",
																"nodeType": "YulFunctionCall",
																"src": "8866:16:5"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8852:10:5",
																	"nodeType": "YulIdentifier",
																	"src": "8852:10:5"
																}
															]
														},
														{
															"nativeSrc": "8895:23:5",
															"nodeType": "YulAssignment",
															"src": "8895:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8916:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8916:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8910:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "8910:5:5"
																},
																"nativeSrc": "8910:8:5",
																"nodeType": "YulFunctionCall",
																"src": "8910:8:5"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8895:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "8895:11:5"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 619,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:4:5",
														"valueSize": 1
													},
													{
														"declaration": 619,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:4:5",
														"valueSize": 1
													},
													{
														"declaration": 623,
														"isOffset": false,
														"isSlot": false,
														"src": "8852:10:5",
														"valueSize": 1
													},
													{
														"declaration": 626,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:11:5",
														"valueSize": 1
													},
													{
														"declaration": 617,
														"isOffset": false,
														"isSlot": false,
														"src": "8573:5:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 628,
												"nodeType": "InlineAssembly",
												"src": "8507:421:5"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 631,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 629,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 623,
															"src": "8942:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 630,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8956:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8942:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 642,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 640,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "8994:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 641,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8994:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8942:68:5",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 639,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 634,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 617,
																			"src": "8968:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$232",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$232",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 633,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8960:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 632,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8960:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8960:14:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 636,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8975:4:5",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8960:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8980:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8960:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8990:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8960:31:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 652,
												"nodeType": "IfStatement",
												"src": "8938:146:5",
												"trueBody": {
													"id": 651,
													"nodeType": "Block",
													"src": "9012:72:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 647,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 617,
																				"src": "9066:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$232",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$232",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 645,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:14:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 644,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 244,
																	"src": "9033:24:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9033:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 650,
															"nodeType": "RevertStatement",
															"src": "9026:47:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 614,
										"nodeType": "StructuredDocumentation",
										"src": "7879:486:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 654,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "8379:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8406:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "8399:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 616,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 615,
														"name": "IERC20",
														"nameLocations": [
															"8399:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "8399:6:5"
													},
													"referencedDeclaration": 232,
													"src": "8399:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8426:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "8413:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 618,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8413:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:33:5"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8440:0:5"
									},
									"scope": 696,
									"src": "8370:720:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 694,
										"nodeType": "Block",
										"src": "9681:391:5",
										"statements": [
											{
												"assignments": [
													666
												],
												"declarations": [
													{
														"constant": false,
														"id": 666,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9696:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 694,
														"src": "9691:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 665,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9691:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 667,
												"nodeType": "VariableDeclarationStatement",
												"src": "9691:12:5"
											},
											{
												"assignments": [
													669
												],
												"declarations": [
													{
														"constant": false,
														"id": 669,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9721:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 694,
														"src": "9713:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 668,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 670,
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:18:5"
											},
											{
												"assignments": [
													672
												],
												"declarations": [
													{
														"constant": false,
														"id": 672,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9749:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 694,
														"src": "9741:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 671,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 673,
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:19:5"
											},
											{
												"AST": {
													"nativeSrc": "9795:174:5",
													"nodeType": "YulBlock",
													"src": "9795:174:5",
													"statements": [
														{
															"nativeSrc": "9809:71:5",
															"nodeType": "YulAssignment",
															"src": "9809:71:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9825:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:5"
																		},
																		"nativeSrc": "9825:5:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9825:5:5"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9832:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "9832:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9839:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9846:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9846:4:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9852:4:5",
																				"nodeType": "YulLiteral",
																				"src": "9852:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9842:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:5"
																		},
																		"nativeSrc": "9842:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9842:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9865:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9859:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "9859:5:5"
																		},
																		"nativeSrc": "9859:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9859:11:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9872:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9875:4:5",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9820:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:5"
																},
																"nativeSrc": "9820:60:5",
																"nodeType": "YulFunctionCall",
																"src": "9820:60:5"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9809:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "9809:7:5"
																}
															]
														},
														{
															"nativeSrc": "9893:30:5",
															"nodeType": "YulAssignment",
															"src": "9893:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9907:14:5",
																	"nodeType": "YulIdentifier",
																	"src": "9907:14:5"
																},
																"nativeSrc": "9907:16:5",
																"nodeType": "YulFunctionCall",
																"src": "9907:16:5"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9893:10:5",
																	"nodeType": "YulIdentifier",
																	"src": "9893:10:5"
																}
															]
														},
														{
															"nativeSrc": "9936:23:5",
															"nodeType": "YulAssignment",
															"src": "9936:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9957:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9957:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9951:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "9951:5:5"
																},
																"nativeSrc": "9951:8:5",
																"nodeType": "YulFunctionCall",
																"src": "9951:8:5"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9936:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:5"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 660,
														"isOffset": false,
														"isSlot": false,
														"src": "9846:4:5",
														"valueSize": 1
													},
													{
														"declaration": 660,
														"isOffset": false,
														"isSlot": false,
														"src": "9865:4:5",
														"valueSize": 1
													},
													{
														"declaration": 669,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:10:5",
														"valueSize": 1
													},
													{
														"declaration": 672,
														"isOffset": false,
														"isSlot": false,
														"src": "9936:11:5",
														"valueSize": 1
													},
													{
														"declaration": 666,
														"isOffset": false,
														"isSlot": false,
														"src": "9809:7:5",
														"valueSize": 1
													},
													{
														"declaration": 658,
														"isOffset": false,
														"isSlot": false,
														"src": "9832:5:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 674,
												"nodeType": "InlineAssembly",
												"src": "9770:199:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 675,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 666,
														"src": "9985:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 676,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "9997:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 677,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10011:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9997:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 687,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 672,
																		"src": "10048:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 688,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10063:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10048:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 690,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9997:67:5",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 681,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 658,
																						"src": "10023:5:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$232",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$232",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 680,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10015:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 679,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10015:7:5",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 682,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10015:14:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 683,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10030:4:5",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "10015:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10035:6:5",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10015:26:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 685,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10015:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 691,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9996:69:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9985:80:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 664,
												"id": 693,
												"nodeType": "Return",
												"src": "9978:87:5"
											}
										]
									},
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "9096:491:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 695,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "9601:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9632:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "9625:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 657,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 656,
														"name": "IERC20",
														"nameLocations": [
															"9625:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "9625:6:5"
													},
													"referencedDeclaration": 232,
													"src": "9625:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9652:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "9639:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 659,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9639:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:5"
									},
									"returnParameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "9675:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 662,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9675:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9674:6:5"
									},
									"scope": 696,
									"src": "9592:480:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 697,
							"src": "698:9376:5",
							"usedErrors": [
								244,
								253
							],
							"usedEvents": []
						}
					],
					"src": "115:9960:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							708
						]
					},
					"id": 709,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 698,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "115:25:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 699,
								"nodeType": "StructuredDocumentation",
								"src": "142:280:6",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 708,
							"linearizedBaseContracts": [
								708
							],
							"name": "IERC165",
							"nameLocation": "433:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 700,
										"nodeType": "StructuredDocumentation",
										"src": "447:340:6",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 707,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "801:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "826:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "819:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 701,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "819:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:20:6"
									},
									"returnParameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "862:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 704,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "862:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:6:6"
									},
									"scope": 708,
									"src": "792:76:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 709,
							"src": "423:447:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:756:6"
				},
				"id": 6
			},
			"MarketRouter.sol": {
				"ast": {
					"absolutePath": "MarketRouter.sol",
					"exportedSymbols": {
						"IERC1363": [
							81
						],
						"IERC20": [
							232
						],
						"MarketRouter": [
							977
						],
						"PredictionMarket": [
							730
						],
						"ReentrancyGuard": [
							154
						],
						"SafeERC20": [
							696
						]
					},
					"id": 978,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 710,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 711,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 978,
							"sourceUnit": 155,
							"src": "61:62:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 712,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 978,
							"sourceUnit": 697,
							"src": "125:65:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 713,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 978,
							"sourceUnit": 233,
							"src": "192:56:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "PredictionMarket",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 730,
							"linearizedBaseContracts": [
								730
							],
							"name": "PredictionMarket",
							"nameLocation": "262:16:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "e71c9697",
									"id": 722,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "placeBet",
									"nameLocation": "295:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "marketId",
												"nameLocation": "312:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "304:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "304:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "outcome",
												"nameLocation": "330:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "322:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "322:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "347:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "339:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "339:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "303:51:7"
									},
									"returnParameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "363:0:7"
									},
									"scope": 730,
									"src": "286:78:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "677bd9ff",
									"id": 729,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claimWinnings",
									"nameLocation": "379:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "marketId",
												"nameLocation": "401:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "393:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:18:7"
									},
									"returnParameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "429:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "429:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "428:9:7"
									},
									"scope": 730,
									"src": "370:68:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 978,
							"src": "252:189:7",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 731,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"470:15:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 154,
										"src": "470:15:7"
									},
									"id": 732,
									"nodeType": "InheritanceSpecifier",
									"src": "470:15:7"
								}
							],
							"canonicalName": "MarketRouter",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 977,
							"linearizedBaseContracts": [
								977,
								154
							],
							"name": "MarketRouter",
							"nameLocation": "454:12:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 736,
									"libraryName": {
										"id": 733,
										"name": "SafeERC20",
										"nameLocations": [
											"499:9:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 696,
										"src": "499:9:7"
									},
									"nodeType": "UsingForDirective",
									"src": "493:27:7",
									"typeName": {
										"id": 735,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 734,
											"name": "IERC20",
											"nameLocations": [
												"513:6:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 232,
											"src": "513:6:7"
										},
										"referencedDeclaration": 232,
										"src": "513:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$232",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"canonicalName": "MarketRouter.BatchBet",
									"id": 745,
									"members": [
										{
											"constant": false,
											"id": 738,
											"mutability": "mutable",
											"name": "market",
											"nameLocation": "567:6:7",
											"nodeType": "VariableDeclaration",
											"scope": 745,
											"src": "559:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 737,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "559:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 740,
											"mutability": "mutable",
											"name": "marketId",
											"nameLocation": "592:8:7",
											"nodeType": "VariableDeclaration",
											"scope": 745,
											"src": "584:16:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 739,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "584:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 742,
											"mutability": "mutable",
											"name": "outcome",
											"nameLocation": "619:7:7",
											"nodeType": "VariableDeclaration",
											"scope": 745,
											"src": "611:15:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 741,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "611:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 744,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "645:6:7",
											"nodeType": "VariableDeclaration",
											"scope": 745,
											"src": "637:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 743,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "637:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BatchBet",
									"nameLocation": "539:8:7",
									"nodeType": "StructDefinition",
									"scope": 977,
									"src": "532:127:7",
									"visibility": "public"
								},
								{
									"canonicalName": "MarketRouter.BatchClaim",
									"id": 750,
									"members": [
										{
											"constant": false,
											"id": 747,
											"mutability": "mutable",
											"name": "market",
											"nameLocation": "708:6:7",
											"nodeType": "VariableDeclaration",
											"scope": 750,
											"src": "700:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 746,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "700:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 749,
											"mutability": "mutable",
											"name": "marketId",
											"nameLocation": "733:8:7",
											"nodeType": "VariableDeclaration",
											"scope": 750,
											"src": "725:16:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 748,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "725:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BatchClaim",
									"nameLocation": "678:10:7",
									"nodeType": "StructDefinition",
									"scope": 977,
									"src": "671:78:7",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "faa3f3b5e4bd3185bc059a2498b70867fd2b41976ecd9d924e19972a00a007ee",
									"id": 758,
									"name": "BatchBetPlaced",
									"nameLocation": "767:14:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "798:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "782:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 751,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "782:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 754,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalAmount",
												"nameLocation": "812:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "804:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "804:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 756,
												"indexed": false,
												"mutability": "mutable",
												"name": "marketCount",
												"nameLocation": "833:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "825:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "825:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "781:64:7"
									},
									"src": "761:85:7"
								},
								{
									"anonymous": false,
									"eventSelector": "b9c05773bac087c79ca346191a3f49b33e00ab1c6913f7788c9a3ec9391beab2",
									"id": 766,
									"name": "BatchClaimExecuted",
									"nameLocation": "858:18:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 760,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "893:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "877:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalClaimed",
												"nameLocation": "907:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "899:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"indexed": false,
												"mutability": "mutable",
												"name": "marketCount",
												"nameLocation": "929:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "921:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "921:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:65:7"
									},
									"src": "852:90:7"
								},
								{
									"body": {
										"id": 898,
										"nodeType": "Block",
										"src": "1040:923:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 782,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 779,
																	"name": "bets",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 770,
																	"src": "1059:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_BatchBet_$745_calldata_ptr_$dyn_calldata_ptr",
																		"typeString": "struct MarketRouter.BatchBet calldata[] calldata"
																	}
																},
																"id": 780,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1064:6:7",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1059:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 781,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1073:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1059:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20626574732070726f7669646564",
															"id": 783,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1076:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8f5b6b0f857f6092db72772cde67d02693d3b7aad7ac8a9884b2c025cc9a84d1",
																"typeString": "literal_string \"No bets provided\""
															},
															"value": "No bets provided"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8f5b6b0f857f6092db72772cde67d02693d3b7aad7ac8a9884b2c025cc9a84d1",
																"typeString": "literal_string \"No bets provided\""
															}
														],
														"id": 778,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1051:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1051:44:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 785,
												"nodeType": "ExpressionStatement",
												"src": "1051:44:7"
											},
											{
												"assignments": [
													787
												],
												"declarations": [
													{
														"constant": false,
														"id": 787,
														"mutability": "mutable",
														"name": "totalAmount",
														"nameLocation": "1124:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 898,
														"src": "1116:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 786,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1116:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 789,
												"initialValue": {
													"hexValue": "30",
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1138:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1116:23:7"
											},
											{
												"body": {
													"id": 809,
													"nodeType": "Block",
													"src": "1189:88:7",
													"statements": [
														{
															"expression": {
																"id": 803,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 798,
																	"name": "totalAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 787,
																	"src": "1204:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 799,
																			"name": "bets",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 770,
																			"src": "1219:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_BatchBet_$745_calldata_ptr_$dyn_calldata_ptr",
																				"typeString": "struct MarketRouter.BatchBet calldata[] calldata"
																			}
																		},
																		"id": 801,
																		"indexExpression": {
																			"id": 800,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 791,
																			"src": "1224:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1219:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_BatchBet_$745_calldata_ptr",
																			"typeString": "struct MarketRouter.BatchBet calldata"
																		}
																	},
																	"id": 802,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1227:6:7",
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 744,
																	"src": "1219:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1204:29:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 804,
															"nodeType": "ExpressionStatement",
															"src": "1204:29:7"
														},
														{
															"id": 808,
															"nodeType": "UncheckedBlock",
															"src": "1248:18:7",
															"statements": [
																{
																	"expression": {
																		"id": 806,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": false,
																		"src": "1260:3:7",
																		"subExpression": {
																			"id": 805,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 791,
																			"src": "1260:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 807,
																	"nodeType": "ExpressionStatement",
																	"src": "1260:3:7"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 794,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 791,
														"src": "1170:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 795,
															"name": "bets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "1174:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_BatchBet_$745_calldata_ptr_$dyn_calldata_ptr",
																"typeString": "struct MarketRouter.BatchBet calldata[] calldata"
															}
														},
														"id": 796,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1179:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1174:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1170:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 810,
												"initializationExpression": {
													"assignments": [
														791
													],
													"declarations": [
														{
															"constant": false,
															"id": 791,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1163:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 810,
															"src": "1155:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 790,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1155:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 793,
													"initialValue": {
														"hexValue": "30",
														"id": 792,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1167:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1155:13:7"
												},
												"isSimpleCounterLoop": false,
												"nodeType": "ForStatement",
												"src": "1150:127:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 814,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1349:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1353:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1349:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 818,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1369:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MarketRouter_$977",
																		"typeString": "contract MarketRouter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MarketRouter_$977",
																		"typeString": "contract MarketRouter"
																	}
																],
																"id": 817,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1361:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 816,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1361:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 819,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1361:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 820,
															"name": "totalAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "1376:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 811,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "1326:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														"id": 813,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1332:16:7",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 304,
														"src": "1326:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$232_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1326:62:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 822,
												"nodeType": "ExpressionStatement",
												"src": "1326:62:7"
											},
											{
												"assignments": [
													824
												],
												"declarations": [
													{
														"constant": false,
														"id": 824,
														"mutability": "mutable",
														"name": "refunded",
														"nameLocation": "1435:8:7",
														"nodeType": "VariableDeclaration",
														"scope": 898,
														"src": "1427:16:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 823,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1427:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 826,
												"initialValue": {
													"hexValue": "30",
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1446:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1427:20:7"
											},
											{
												"body": {
													"id": 886,
													"nodeType": "Block",
													"src": "1494:371:7",
													"statements": [
														{
															"assignments": [
																837
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 837,
																	"mutability": "mutable",
																	"name": "bet",
																	"nameLocation": "1517:3:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 886,
																	"src": "1501:19:7",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_BatchBet_$745_memory_ptr",
																		"typeString": "struct MarketRouter.BatchBet"
																	},
																	"typeName": {
																		"id": 836,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 835,
																			"name": "BatchBet",
																			"nameLocations": [
																				"1501:8:7"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 745,
																			"src": "1501:8:7"
																		},
																		"referencedDeclaration": 745,
																		"src": "1501:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_BatchBet_$745_storage_ptr",
																			"typeString": "struct MarketRouter.BatchBet"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 841,
															"initialValue": {
																"baseExpression": {
																	"id": 838,
																	"name": "bets",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 770,
																	"src": "1523:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_BatchBet_$745_calldata_ptr_$dyn_calldata_ptr",
																		"typeString": "struct MarketRouter.BatchBet calldata[] calldata"
																	}
																},
																"id": 840,
																"indexExpression": {
																	"id": 839,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 828,
																	"src": "1528:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1523:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_BatchBet_$745_calldata_ptr",
																	"typeString": "struct MarketRouter.BatchBet calldata"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1501:29:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 845,
																			"name": "bet",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 837,
																			"src": "1590:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_BatchBet_$745_memory_ptr",
																				"typeString": "struct MarketRouter.BatchBet memory"
																			}
																		},
																		"id": 846,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1594:6:7",
																		"memberName": "market",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 738,
																		"src": "1590:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 847,
																			"name": "bet",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 837,
																			"src": "1602:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_BatchBet_$745_memory_ptr",
																				"typeString": "struct MarketRouter.BatchBet memory"
																			}
																		},
																		"id": 848,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1606:6:7",
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 744,
																		"src": "1602:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 842,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 773,
																		"src": "1571:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 844,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1577:12:7",
																	"memberName": "forceApprove",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 480,
																	"src": "1571:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$232_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 849,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1571:42:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 850,
															"nodeType": "ExpressionStatement",
															"src": "1571:42:7"
														},
														{
															"clauses": [
																{
																	"block": {
																		"id": 863,
																		"nodeType": "Block",
																		"src": "1707:28:7",
																		"statements": []
																	},
																	"errorName": "",
																	"id": 864,
																	"nodeType": "TryCatchClause",
																	"src": "1707:28:7"
																},
																{
																	"block": {
																		"id": 879,
																		"nodeType": "Block",
																		"src": "1742:94:7",
																		"statements": [
																			{
																				"expression": {
																					"id": 868,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 865,
																						"name": "refunded",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 824,
																						"src": "1753:8:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "+=",
																					"rightHandSide": {
																						"expression": {
																							"id": 866,
																							"name": "bet",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 837,
																							"src": "1765:3:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_BatchBet_$745_memory_ptr",
																								"typeString": "struct MarketRouter.BatchBet memory"
																							}
																						},
																						"id": 867,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "1769:6:7",
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 744,
																						"src": "1765:10:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "1753:22:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 869,
																				"nodeType": "ExpressionStatement",
																				"src": "1753:22:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"expression": {
																								"id": 873,
																								"name": "msg",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967281,
																								"src": "1805:3:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_message",
																									"typeString": "msg"
																								}
																							},
																							"id": 874,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "1809:6:7",
																							"memberName": "sender",
																							"nodeType": "MemberAccess",
																							"src": "1805:10:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"expression": {
																								"id": 875,
																								"name": "bet",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 837,
																								"src": "1817:3:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_BatchBet_$745_memory_ptr",
																									"typeString": "struct MarketRouter.BatchBet memory"
																								}
																							},
																							"id": 876,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "1821:6:7",
																							"memberName": "amount",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 744,
																							"src": "1817:10:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"id": 870,
																							"name": "token",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 773,
																							"src": "1786:5:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_IERC20_$232",
																								"typeString": "contract IERC20"
																							}
																						},
																						"id": 872,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "1792:12:7",
																						"memberName": "safeTransfer",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 277,
																						"src": "1786:18:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$232_$",
																							"typeString": "function (contract IERC20,address,uint256)"
																						}
																					},
																					"id": 877,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1786:42:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 878,
																				"nodeType": "ExpressionStatement",
																				"src": "1786:42:7"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 880,
																	"nodeType": "TryCatchClause",
																	"src": "1736:100:7"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 856,
																			"name": "bet",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 837,
																			"src": "1668:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_BatchBet_$745_memory_ptr",
																				"typeString": "struct MarketRouter.BatchBet memory"
																			}
																		},
																		"id": 857,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1672:8:7",
																		"memberName": "marketId",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 740,
																		"src": "1668:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 858,
																			"name": "bet",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 837,
																			"src": "1682:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_BatchBet_$745_memory_ptr",
																				"typeString": "struct MarketRouter.BatchBet memory"
																			}
																		},
																		"id": 859,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1686:7:7",
																		"memberName": "outcome",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 742,
																		"src": "1682:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 860,
																			"name": "bet",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 837,
																			"src": "1695:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_BatchBet_$745_memory_ptr",
																				"typeString": "struct MarketRouter.BatchBet memory"
																			}
																		},
																		"id": 861,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1699:6:7",
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 744,
																		"src": "1695:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 852,
																					"name": "bet",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 837,
																					"src": "1647:3:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_BatchBet_$745_memory_ptr",
																						"typeString": "struct MarketRouter.BatchBet memory"
																					}
																				},
																				"id": 853,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1651:6:7",
																				"memberName": "market",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 738,
																				"src": "1647:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 851,
																			"name": "PredictionMarket",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 730,
																			"src": "1630:16:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_PredictionMarket_$730_$",
																				"typeString": "type(contract PredictionMarket)"
																			}
																		},
																		"id": 854,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1630:28:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_PredictionMarket_$730",
																			"typeString": "contract PredictionMarket"
																		}
																	},
																	"id": 855,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1659:8:7",
																	"memberName": "placeBet",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 722,
																	"src": "1630:37:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256,uint256) external"
																	}
																},
																"id": 862,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1630:76:7",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 881,
															"nodeType": "TryStatement",
															"src": "1626:210:7"
														},
														{
															"id": 885,
															"nodeType": "UncheckedBlock",
															"src": "1844:18:7",
															"statements": [
																{
																	"expression": {
																		"id": 883,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": false,
																		"src": "1856:3:7",
																		"subExpression": {
																			"id": 882,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 828,
																			"src": "1856:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 884,
																	"nodeType": "ExpressionStatement",
																	"src": "1856:3:7"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 831,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "1475:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 832,
															"name": "bets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "1479:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_BatchBet_$745_calldata_ptr_$dyn_calldata_ptr",
																"typeString": "struct MarketRouter.BatchBet calldata[] calldata"
															}
														},
														"id": 833,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1484:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1479:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1475:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 887,
												"initializationExpression": {
													"assignments": [
														828
													],
													"declarations": [
														{
															"constant": false,
															"id": 828,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1468:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 887,
															"src": "1460:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 827,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1460:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 830,
													"initialValue": {
														"hexValue": "30",
														"id": 829,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1472:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1460:13:7"
												},
												"isSimpleCounterLoop": false,
												"nodeType": "ForStatement",
												"src": "1455:410:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 889,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1907:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 890,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1911:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1907:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 893,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 891,
																"name": "totalAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 787,
																"src": "1919:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 892,
																"name": "refunded",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 824,
																"src": "1933:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1919:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 894,
																"name": "bets",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 770,
																"src": "1943:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_BatchBet_$745_calldata_ptr_$dyn_calldata_ptr",
																	"typeString": "struct MarketRouter.BatchBet calldata[] calldata"
																}
															},
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1948:6:7",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "1943:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 888,
														"name": "BatchBetPlaced",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 758,
														"src": "1892:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1892:63:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 897,
												"nodeType": "EmitStatement",
												"src": "1887:68:7"
											}
										]
									},
									"functionSelector": "ead99b61",
									"id": 899,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 776,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 775,
												"name": "nonReentrant",
												"nameLocations": [
													"1027:12:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 119,
												"src": "1027:12:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1027:12:7"
										}
									],
									"name": "placeBatchBets",
									"nameLocation": "963:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "bets",
												"nameLocation": "998:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "978:24:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_BatchBet_$745_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct MarketRouter.BatchBet[]"
												},
												"typeName": {
													"baseType": {
														"id": 768,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 767,
															"name": "BatchBet",
															"nameLocations": [
																"978:8:7"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 745,
															"src": "978:8:7"
														},
														"referencedDeclaration": 745,
														"src": "978:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BatchBet_$745_storage_ptr",
															"typeString": "struct MarketRouter.BatchBet"
														}
													},
													"id": 769,
													"nodeType": "ArrayTypeName",
													"src": "978:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_BatchBet_$745_storage_$dyn_storage_ptr",
														"typeString": "struct MarketRouter.BatchBet[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1011:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "1004:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 772,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 771,
														"name": "IERC20",
														"nameLocations": [
															"1004:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "1004:6:7"
													},
													"referencedDeclaration": 232,
													"src": "1004:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "977:40:7"
									},
									"returnParameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1040:0:7"
									},
									"scope": 977,
									"src": "954:1009:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 975,
										"nodeType": "Block",
										"src": "2047:671:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 909,
																	"name": "claims",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 903,
																	"src": "2066:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_BatchClaim_$750_calldata_ptr_$dyn_calldata_ptr",
																		"typeString": "struct MarketRouter.BatchClaim calldata[] calldata"
																	}
																},
																"id": 910,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2073:6:7",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2066:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 911,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2082:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2066:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20636c61696d732070726f7669646564",
															"id": 913,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2085:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b6d7ef6bf90de195cf7085f44369095f3c2361b4a84702ba3e87c527107af23e",
																"typeString": "literal_string \"No claims provided\""
															},
															"value": "No claims provided"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b6d7ef6bf90de195cf7085f44369095f3c2361b4a84702ba3e87c527107af23e",
																"typeString": "literal_string \"No claims provided\""
															}
														],
														"id": 908,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2058:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2058:48:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 915,
												"nodeType": "ExpressionStatement",
												"src": "2058:48:7"
											},
											{
												"assignments": [
													917
												],
												"declarations": [
													{
														"constant": false,
														"id": 917,
														"mutability": "mutable",
														"name": "totalClaimed",
														"nameLocation": "2135:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 975,
														"src": "2127:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 916,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2127:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 919,
												"initialValue": {
													"hexValue": "30",
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2150:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2127:24:7"
											},
											{
												"assignments": [
													921
												],
												"declarations": [
													{
														"constant": false,
														"id": 921,
														"mutability": "mutable",
														"name": "successfulClaims",
														"nameLocation": "2170:16:7",
														"nodeType": "VariableDeclaration",
														"scope": 975,
														"src": "2162:24:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 920,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2162:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 923,
												"initialValue": {
													"hexValue": "30",
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2189:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2162:28:7"
											},
											{
												"body": {
													"id": 966,
													"nodeType": "Block",
													"src": "2252:371:7",
													"statements": [
														{
															"assignments": [
																934
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 934,
																	"mutability": "mutable",
																	"name": "claim",
																	"nameLocation": "2285:5:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 966,
																	"src": "2267:23:7",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_BatchClaim_$750_memory_ptr",
																		"typeString": "struct MarketRouter.BatchClaim"
																	},
																	"typeName": {
																		"id": 933,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 932,
																			"name": "BatchClaim",
																			"nameLocations": [
																				"2267:10:7"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 750,
																			"src": "2267:10:7"
																		},
																		"referencedDeclaration": 750,
																		"src": "2267:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_BatchClaim_$750_storage_ptr",
																			"typeString": "struct MarketRouter.BatchClaim"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 938,
															"initialValue": {
																"baseExpression": {
																	"id": 935,
																	"name": "claims",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 903,
																	"src": "2293:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_BatchClaim_$750_calldata_ptr_$dyn_calldata_ptr",
																		"typeString": "struct MarketRouter.BatchClaim calldata[] calldata"
																	}
																},
																"id": 937,
																"indexExpression": {
																	"id": 936,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 925,
																	"src": "2300:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2293:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_BatchClaim_$750_calldata_ptr",
																	"typeString": "struct MarketRouter.BatchClaim calldata"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2267:35:7"
														},
														{
															"clauses": [
																{
																	"block": {
																		"id": 957,
																		"nodeType": "Block",
																		"src": "2422:95:7",
																		"statements": [
																			{
																				"expression": {
																					"id": 952,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 950,
																						"name": "totalClaimed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 917,
																						"src": "2441:12:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "+=",
																					"rightHandSide": {
																						"id": 951,
																						"name": "claimed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 948,
																						"src": "2457:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "2441:23:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 953,
																				"nodeType": "ExpressionStatement",
																				"src": "2441:23:7"
																			},
																			{
																				"expression": {
																					"id": 955,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "++",
																					"prefix": false,
																					"src": "2483:18:7",
																					"subExpression": {
																						"id": 954,
																						"name": "successfulClaims",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 921,
																						"src": "2483:16:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 956,
																				"nodeType": "ExpressionStatement",
																				"src": "2483:18:7"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 958,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 949,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 948,
																				"mutability": "mutable",
																				"name": "claimed",
																				"nameLocation": "2413:7:7",
																				"nodeType": "VariableDeclaration",
																				"scope": 958,
																				"src": "2405:15:7",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 947,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "2405:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "2404:17:7"
																	},
																	"src": "2396:121:7"
																},
																{
																	"block": {
																		"id": 959,
																		"nodeType": "Block",
																		"src": "2524:54:7",
																		"statements": []
																	},
																	"errorName": "",
																	"id": 960,
																	"nodeType": "TryCatchClause",
																	"src": "2518:60:7"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 944,
																			"name": "claim",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 934,
																			"src": "2380:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_BatchClaim_$750_memory_ptr",
																				"typeString": "struct MarketRouter.BatchClaim memory"
																			}
																		},
																		"id": 945,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2386:8:7",
																		"memberName": "marketId",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 749,
																		"src": "2380:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 940,
																					"name": "claim",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 934,
																					"src": "2352:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_BatchClaim_$750_memory_ptr",
																						"typeString": "struct MarketRouter.BatchClaim memory"
																					}
																				},
																				"id": 941,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2358:6:7",
																				"memberName": "market",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 747,
																				"src": "2352:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 939,
																			"name": "PredictionMarket",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 730,
																			"src": "2335:16:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_PredictionMarket_$730_$",
																				"typeString": "type(contract PredictionMarket)"
																			}
																		},
																		"id": 942,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2335:30:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_PredictionMarket_$730",
																			"typeString": "contract PredictionMarket"
																		}
																	},
																	"id": 943,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2366:13:7",
																	"memberName": "claimWinnings",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 729,
																	"src": "2335:44:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) external returns (uint256)"
																	}
																},
																"id": 946,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2335:60:7",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 961,
															"nodeType": "TryStatement",
															"src": "2331:247:7"
														},
														{
															"id": 965,
															"nodeType": "UncheckedBlock",
															"src": "2594:18:7",
															"statements": [
																{
																	"expression": {
																		"id": 963,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": false,
																		"src": "2606:3:7",
																		"subExpression": {
																			"id": 962,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 925,
																			"src": "2606:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 964,
																	"nodeType": "ExpressionStatement",
																	"src": "2606:3:7"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 928,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 925,
														"src": "2231:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 929,
															"name": "claims",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "2235:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_BatchClaim_$750_calldata_ptr_$dyn_calldata_ptr",
																"typeString": "struct MarketRouter.BatchClaim calldata[] calldata"
															}
														},
														"id": 930,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2242:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2235:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2231:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 967,
												"initializationExpression": {
													"assignments": [
														925
													],
													"declarations": [
														{
															"constant": false,
															"id": 925,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2224:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 967,
															"src": "2216:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 924,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2216:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 927,
													"initialValue": {
														"hexValue": "30",
														"id": 926,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2228:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2216:13:7"
												},
												"isSimpleCounterLoop": false,
												"nodeType": "ForStatement",
												"src": "2211:412:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 969,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2667:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 970,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2671:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2667:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 971,
															"name": "totalClaimed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 917,
															"src": "2679:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 972,
															"name": "successfulClaims",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "2693:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 968,
														"name": "BatchClaimExecuted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 766,
														"src": "2648:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2648:62:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 974,
												"nodeType": "EmitStatement",
												"src": "2643:67:7"
											}
										]
									},
									"functionSelector": "8a48ca85",
									"id": 976,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 906,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 905,
												"name": "nonReentrant",
												"nameLocations": [
													"2034:12:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 119,
												"src": "2034:12:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2034:12:7"
										}
									],
									"name": "batchClaim",
									"nameLocation": "1984:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "claims",
												"nameLocation": "2017:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "1995:28:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_BatchClaim_$750_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct MarketRouter.BatchClaim[]"
												},
												"typeName": {
													"baseType": {
														"id": 901,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 900,
															"name": "BatchClaim",
															"nameLocations": [
																"1995:10:7"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 750,
															"src": "1995:10:7"
														},
														"referencedDeclaration": 750,
														"src": "1995:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BatchClaim_$750_storage_ptr",
															"typeString": "struct MarketRouter.BatchClaim"
														}
													},
													"id": 902,
													"nodeType": "ArrayTypeName",
													"src": "1995:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_BatchClaim_$750_storage_$dyn_storage_ptr",
														"typeString": "struct MarketRouter.BatchClaim[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1994:30:7"
									},
									"returnParameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2047:0:7"
									},
									"scope": 977,
									"src": "1975:743:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 978,
							"src": "445:2276:7",
							"usedErrors": [
								244
							],
							"usedEvents": [
								758,
								766
							]
						}
					],
					"src": "33:2690:7"
				},
				"id": 7
			}
		}
	}
}