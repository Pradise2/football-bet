{
	"id": "54f74203376a01ae7d87882e1592d876",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"MockERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.19;\r\n\r\n// ===============================================\r\n// CONTRACT: MockERC20 (Configurable Test Token)\r\n// ===============================================\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract MockERC20 is ERC20, Ownable {\r\n    uint8 private _decimals;\r\n\r\n    // ===================================================\r\n    // CONSTRUCTOR\r\n    // ===================================================\r\n    constructor(\r\n        string memory name,\r\n        string memory symbol,\r\n        uint8 decimals_,\r\n        uint256 initialSupply,\r\n        address initialOwner\r\n    ) ERC20(name, symbol) Ownable(initialOwner) {\r\n        _decimals = decimals_;\r\n        if (initialSupply > 0) {\r\n            _mint(initialOwner, initialSupply);\r\n        }\r\n    }\r\n\r\n    // ===================================================\r\n    // METADATA OVERRIDE\r\n    // ===================================================\r\n    function decimals() public view virtual override returns (uint8) {\r\n        return _decimals;\r\n    }\r\n\r\n    // ===================================================\r\n    // MINT FUNCTIONS\r\n    // ===================================================\r\n\r\n    /// @notice Mint new tokens (owner only)\r\n    function mint(address to, uint256 amount) external onlyOwner {\r\n        _mint(to, amount);\r\n    }\r\n\r\n    /// @notice Public faucet for testing (anyone can mint to themselves)\r\n    /// @dev Use only in local/test deployments — remove for production\r\n    function faucet(uint256 amount) external {\r\n        _mint(msg.sender, amount);\r\n    }\r\n\r\n    // ===================================================\r\n    // BURN FUNCTIONS\r\n    // ===================================================\r\n\r\n    /// @notice Burn tokens from caller’s balance\r\n    function burn(uint256 amount) external {\r\n        _burn(msg.sender, amount);\r\n    }\r\n\r\n    /// @notice Burn tokens from another account (requires allowance)\r\n    function burnFrom(address account, uint256 amount) external {\r\n        _spendAllowance(account, msg.sender, amount);\r\n        _burn(account, amount);\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /// @inheritdoc IERC20\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /// @inheritdoc IERC20\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /// @inheritdoc IERC20\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"MockERC20.sol": {
				"MockERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "uint8",
									"name": "decimals_",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "initialSupply",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "faucet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"faucet(uint256)": {
								"details": "Use only in local/test deployments — remove for production"
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"MockERC20.sol\":330:2210  contract MockERC20 is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"MockERC20.sol\":546:890  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"MockERC20.sol\":742:754  initialOwner */\n  dup1\n    /* \"MockERC20.sol\":720:724  name */\n  dup6\n    /* \"MockERC20.sol\":726:732  symbol */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1656:1661  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"MockERC20.sol\":779:788  decimals_ */\n  dup3\n    /* \"MockERC20.sol\":767:776  _decimals */\n  0x05\n  0x14\n    /* \"MockERC20.sol\":767:788  _decimals = decimals_ */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"MockERC20.sol\":819:820  0 */\n  0x00\n    /* \"MockERC20.sol\":803:816  initialSupply */\n  dup3\n    /* \"MockERC20.sol\":803:820  initialSupply > 0 */\n  gt\n    /* \"MockERC20.sol\":799:883  if (initialSupply > 0) {... */\n  iszero\n  tag_18\n  jumpi\n    /* \"MockERC20.sol\":837:871  _mint(initialOwner, initialSupply) */\n  tag_19\n    /* \"MockERC20.sol\":843:855  initialOwner */\n  dup2\n    /* \"MockERC20.sol\":857:870  initialSupply */\n  dup4\n    /* \"MockERC20.sol\":837:842  _mint */\n  shl(0x20, tag_20)\n    /* \"MockERC20.sol\":837:871  _mint(initialOwner, initialSupply) */\n  0x20\n  shr\n  jump\t// in\ntag_19:\n    /* \"MockERC20.sol\":799:883  if (initialSupply > 0) {... */\ntag_18:\n    /* \"MockERC20.sol\":546:890  constructor(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"MockERC20.sol\":330:2210  contract MockERC20 is ERC20, Ownable {... */\n  jump(tag_21)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7362:7570  function _mint(address account, uint256 value) internal {... */\ntag_20:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7451:7452  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7453  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7439  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7453  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7428:7519  if (account == address(0)) {... */\n  tag_24\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7506  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7476:7508  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_25\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_25:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7428:7519  if (account == address(0)) {... */\ntag_24:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7563  _update(address(0), account, value) */\n  tag_26\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7545  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7548:7555  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7557:7562  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  _update */\n  shl(0x20, tag_27)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7563  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_26:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7362:7570  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_27:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6017:6018  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6005  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n  tag_29\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6153:6158  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6149  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6158  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_30\n  swap2\n  swap1\n  tag_31\n  jump\t// in\ntag_30:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n  jump(tag_32)\ntag_29:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6189:6208  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6220  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6221:6225  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6189:6226  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6258:6263  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6244:6255  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6244:6263  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n  iszero\n  tag_33\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6315:6319  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6334:6339  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6290:6340  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_34\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_35\n  jump\t// in\ntag_34:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\ntag_33:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6507:6512  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6493:6504  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6493:6512  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6484  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6485:6489  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6512  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6175:6537  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\ntag_32:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6565:6566  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6553  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n  tag_36\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6730:6735  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6726  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6735  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n  jump(tag_37)\ntag_36:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6942:6947  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6934  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6935:6937  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6947  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\ntag_37:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7004  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6996:7000  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7006:7011  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n  mload(0x40)\n  tag_38\n  swap2\n  swap1\n  tag_39\n  jump\t// in\ntag_38:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_40:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_41:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_42:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  0x00\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_43:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  0x00\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_44:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  0x00\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_45:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_46:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_47:\n    /* \"#utility.yul\":957:984   */\n  tag_93\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_45\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_94\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_95\n  tag_46\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":1030:1118   */\ntag_94:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_48:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_97\n  tag_40\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_98\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_47\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_49:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_100\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_101\n  tag_46\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":1434:1490   */\ntag_100:\n    /* \"#utility.yul\":1508:1537   */\n  tag_102\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_45\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1749   */\ntag_50:\n    /* \"#utility.yul\":1699:1705   */\n  dup3\n    /* \"#utility.yul\":1694:1697   */\n  dup2\n    /* \"#utility.yul\":1689:1692   */\n  dup4\n    /* \"#utility.yul\":1683:1706   */\n  mcopy\n    /* \"#utility.yul\":1740:1741   */\n  0x00\n    /* \"#utility.yul\":1731:1737   */\n  dup4\n    /* \"#utility.yul\":1726:1729   */\n  dup4\n    /* \"#utility.yul\":1722:1738   */\n  add\n    /* \"#utility.yul\":1715:1742   */\n  mstore\n    /* \"#utility.yul\":1610:1749   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1755:2189   */\ntag_51:\n    /* \"#utility.yul\":1844:1849   */\n  0x00\n    /* \"#utility.yul\":1869:1935   */\n  tag_105\n    /* \"#utility.yul\":1885:1934   */\n  tag_106\n    /* \"#utility.yul\":1927:1933   */\n  dup5\n    /* \"#utility.yul\":1885:1934   */\n  tag_49\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":1869:1935   */\n  tag_48\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":1860:1935   */\n  swap1\n  pop\n    /* \"#utility.yul\":1958:1964   */\n  dup3\n    /* \"#utility.yul\":1951:1956   */\n  dup2\n    /* \"#utility.yul\":1944:1965   */\n  mstore\n    /* \"#utility.yul\":1996:2000   */\n  0x20\n    /* \"#utility.yul\":1989:1994   */\n  dup2\n    /* \"#utility.yul\":1985:2001   */\n  add\n    /* \"#utility.yul\":2034:2037   */\n  dup5\n    /* \"#utility.yul\":2025:2031   */\n  dup5\n    /* \"#utility.yul\":2020:2023   */\n  dup5\n    /* \"#utility.yul\":2016:2032   */\n  add\n    /* \"#utility.yul\":2013:2038   */\n  gt\n    /* \"#utility.yul\":2010:2122   */\n  iszero\n  tag_107\n  jumpi\n    /* \"#utility.yul\":2041:2120   */\n  tag_108\n  tag_44\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":2010:2122   */\ntag_107:\n    /* \"#utility.yul\":2131:2183   */\n  tag_109\n    /* \"#utility.yul\":2176:2182   */\n  dup5\n    /* \"#utility.yul\":2171:2174   */\n  dup3\n    /* \"#utility.yul\":2166:2169   */\n  dup6\n    /* \"#utility.yul\":2131:2183   */\n  tag_50\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":1850:2189   */\n  pop\n    /* \"#utility.yul\":1755:2189   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2209:2564   */\ntag_52:\n    /* \"#utility.yul\":2276:2281   */\n  0x00\n    /* \"#utility.yul\":2325:2328   */\n  dup3\n    /* \"#utility.yul\":2318:2322   */\n  0x1f\n    /* \"#utility.yul\":2310:2316   */\n  dup4\n    /* \"#utility.yul\":2306:2323   */\n  add\n    /* \"#utility.yul\":2302:2329   */\n  slt\n    /* \"#utility.yul\":2292:2414   */\n  tag_111\n  jumpi\n    /* \"#utility.yul\":2333:2412   */\n  tag_112\n  tag_43\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":2292:2414   */\ntag_111:\n    /* \"#utility.yul\":2443:2449   */\n  dup2\n    /* \"#utility.yul\":2437:2450   */\n  mload\n    /* \"#utility.yul\":2468:2558   */\n  tag_113\n    /* \"#utility.yul\":2554:2557   */\n  dup5\n    /* \"#utility.yul\":2546:2552   */\n  dup3\n    /* \"#utility.yul\":2539:2543   */\n  0x20\n    /* \"#utility.yul\":2531:2537   */\n  dup7\n    /* \"#utility.yul\":2527:2544   */\n  add\n    /* \"#utility.yul\":2468:2558   */\n  tag_51\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":2459:2558   */\n  swap2\n  pop\n    /* \"#utility.yul\":2282:2564   */\n  pop\n    /* \"#utility.yul\":2209:2564   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2570:2656   */\ntag_53:\n    /* \"#utility.yul\":2605:2612   */\n  0x00\n    /* \"#utility.yul\":2645:2649   */\n  0xff\n    /* \"#utility.yul\":2638:2643   */\n  dup3\n    /* \"#utility.yul\":2634:2650   */\n  and\n    /* \"#utility.yul\":2623:2650   */\n  swap1\n  pop\n    /* \"#utility.yul\":2570:2656   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2662:2780   */\ntag_54:\n    /* \"#utility.yul\":2733:2755   */\n  tag_116\n    /* \"#utility.yul\":2749:2754   */\n  dup2\n    /* \"#utility.yul\":2733:2755   */\n  tag_53\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":2726:2731   */\n  dup2\n    /* \"#utility.yul\":2723:2756   */\n  eq\n    /* \"#utility.yul\":2713:2774   */\n  tag_117\n  jumpi\n    /* \"#utility.yul\":2770:2771   */\n  0x00\n    /* \"#utility.yul\":2767:2768   */\n  0x00\n    /* \"#utility.yul\":2760:2772   */\n  revert\n    /* \"#utility.yul\":2713:2774   */\ntag_117:\n    /* \"#utility.yul\":2662:2780   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2786:2925   */\ntag_55:\n    /* \"#utility.yul\":2841:2846   */\n  0x00\n    /* \"#utility.yul\":2872:2878   */\n  dup2\n    /* \"#utility.yul\":2866:2879   */\n  mload\n    /* \"#utility.yul\":2857:2879   */\n  swap1\n  pop\n    /* \"#utility.yul\":2888:2919   */\n  tag_119\n    /* \"#utility.yul\":2913:2918   */\n  dup2\n    /* \"#utility.yul\":2888:2919   */\n  tag_54\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":2786:2925   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2931:3008   */\ntag_56:\n    /* \"#utility.yul\":2968:2975   */\n  0x00\n    /* \"#utility.yul\":2997:3002   */\n  dup2\n    /* \"#utility.yul\":2986:3002   */\n  swap1\n  pop\n    /* \"#utility.yul\":2931:3008   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3014:3136   */\ntag_57:\n    /* \"#utility.yul\":3087:3111   */\n  tag_122\n    /* \"#utility.yul\":3105:3110   */\n  dup2\n    /* \"#utility.yul\":3087:3111   */\n  tag_56\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":3080:3085   */\n  dup2\n    /* \"#utility.yul\":3077:3112   */\n  eq\n    /* \"#utility.yul\":3067:3130   */\n  tag_123\n  jumpi\n    /* \"#utility.yul\":3126:3127   */\n  0x00\n    /* \"#utility.yul\":3123:3124   */\n  0x00\n    /* \"#utility.yul\":3116:3128   */\n  revert\n    /* \"#utility.yul\":3067:3130   */\ntag_123:\n    /* \"#utility.yul\":3014:3136   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3142:3285   */\ntag_58:\n    /* \"#utility.yul\":3199:3204   */\n  0x00\n    /* \"#utility.yul\":3230:3236   */\n  dup2\n    /* \"#utility.yul\":3224:3237   */\n  mload\n    /* \"#utility.yul\":3215:3237   */\n  swap1\n  pop\n    /* \"#utility.yul\":3246:3279   */\n  tag_125\n    /* \"#utility.yul\":3273:3278   */\n  dup2\n    /* \"#utility.yul\":3246:3279   */\n  tag_57\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":3142:3285   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3291:3417   */\ntag_59:\n    /* \"#utility.yul\":3328:3335   */\n  0x00\n    /* \"#utility.yul\":3368:3410   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":3361:3366   */\n  dup3\n    /* \"#utility.yul\":3357:3411   */\n  and\n    /* \"#utility.yul\":3346:3411   */\n  swap1\n  pop\n    /* \"#utility.yul\":3291:3417   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3423:3519   */\ntag_60:\n    /* \"#utility.yul\":3460:3467   */\n  0x00\n    /* \"#utility.yul\":3489:3513   */\n  tag_128\n    /* \"#utility.yul\":3507:3512   */\n  dup3\n    /* \"#utility.yul\":3489:3513   */\n  tag_59\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":3478:3513   */\n  swap1\n  pop\n    /* \"#utility.yul\":3423:3519   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3525:3647   */\ntag_61:\n    /* \"#utility.yul\":3598:3622   */\n  tag_130\n    /* \"#utility.yul\":3616:3621   */\n  dup2\n    /* \"#utility.yul\":3598:3622   */\n  tag_60\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":3591:3596   */\n  dup2\n    /* \"#utility.yul\":3588:3623   */\n  eq\n    /* \"#utility.yul\":3578:3641   */\n  tag_131\n  jumpi\n    /* \"#utility.yul\":3637:3638   */\n  0x00\n    /* \"#utility.yul\":3634:3635   */\n  0x00\n    /* \"#utility.yul\":3627:3639   */\n  revert\n    /* \"#utility.yul\":3578:3641   */\ntag_131:\n    /* \"#utility.yul\":3525:3647   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3653:3796   */\ntag_62:\n    /* \"#utility.yul\":3710:3715   */\n  0x00\n    /* \"#utility.yul\":3741:3747   */\n  dup2\n    /* \"#utility.yul\":3735:3748   */\n  mload\n    /* \"#utility.yul\":3726:3748   */\n  swap1\n  pop\n    /* \"#utility.yul\":3757:3790   */\n  tag_133\n    /* \"#utility.yul\":3784:3789   */\n  dup2\n    /* \"#utility.yul\":3757:3790   */\n  tag_61\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":3653:3796   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3802:5121   */\ntag_3:\n    /* \"#utility.yul\":3926:3932   */\n  0x00\n    /* \"#utility.yul\":3934:3940   */\n  0x00\n    /* \"#utility.yul\":3942:3948   */\n  0x00\n    /* \"#utility.yul\":3950:3956   */\n  0x00\n    /* \"#utility.yul\":3958:3964   */\n  0x00\n    /* \"#utility.yul\":4007:4010   */\n  0xa0\n    /* \"#utility.yul\":3995:4004   */\n  dup7\n    /* \"#utility.yul\":3986:3993   */\n  dup9\n    /* \"#utility.yul\":3982:4005   */\n  sub\n    /* \"#utility.yul\":3978:4011   */\n  slt\n    /* \"#utility.yul\":3975:4095   */\n  iszero\n  tag_135\n  jumpi\n    /* \"#utility.yul\":4014:4093   */\n  tag_136\n  tag_41\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":3975:4095   */\ntag_135:\n    /* \"#utility.yul\":4155:4156   */\n  0x00\n    /* \"#utility.yul\":4144:4153   */\n  dup7\n    /* \"#utility.yul\":4140:4157   */\n  add\n    /* \"#utility.yul\":4134:4158   */\n  mload\n    /* \"#utility.yul\":4185:4203   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4177:4183   */\n  dup2\n    /* \"#utility.yul\":4174:4204   */\n  gt\n    /* \"#utility.yul\":4171:4288   */\n  iszero\n  tag_137\n  jumpi\n    /* \"#utility.yul\":4207:4286   */\n  tag_138\n  tag_42\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":4171:4288   */\ntag_137:\n    /* \"#utility.yul\":4312:4386   */\n  tag_139\n    /* \"#utility.yul\":4378:4385   */\n  dup9\n    /* \"#utility.yul\":4369:4375   */\n  dup3\n    /* \"#utility.yul\":4358:4367   */\n  dup10\n    /* \"#utility.yul\":4354:4376   */\n  add\n    /* \"#utility.yul\":4312:4386   */\n  tag_52\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":4302:4386   */\n  swap6\n  pop\n    /* \"#utility.yul\":4105:4396   */\n  pop\n    /* \"#utility.yul\":4456:4458   */\n  0x20\n    /* \"#utility.yul\":4445:4454   */\n  dup7\n    /* \"#utility.yul\":4441:4459   */\n  add\n    /* \"#utility.yul\":4435:4460   */\n  mload\n    /* \"#utility.yul\":4487:4505   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4479:4485   */\n  dup2\n    /* \"#utility.yul\":4476:4506   */\n  gt\n    /* \"#utility.yul\":4473:4590   */\n  iszero\n  tag_140\n  jumpi\n    /* \"#utility.yul\":4509:4588   */\n  tag_141\n  tag_42\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":4473:4590   */\ntag_140:\n    /* \"#utility.yul\":4614:4688   */\n  tag_142\n    /* \"#utility.yul\":4680:4687   */\n  dup9\n    /* \"#utility.yul\":4671:4677   */\n  dup3\n    /* \"#utility.yul\":4660:4669   */\n  dup10\n    /* \"#utility.yul\":4656:4678   */\n  add\n    /* \"#utility.yul\":4614:4688   */\n  tag_52\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":4604:4688   */\n  swap5\n  pop\n    /* \"#utility.yul\":4406:4698   */\n  pop\n    /* \"#utility.yul\":4737:4739   */\n  0x40\n    /* \"#utility.yul\":4763:4825   */\n  tag_143\n    /* \"#utility.yul\":4817:4824   */\n  dup9\n    /* \"#utility.yul\":4808:4814   */\n  dup3\n    /* \"#utility.yul\":4797:4806   */\n  dup10\n    /* \"#utility.yul\":4793:4815   */\n  add\n    /* \"#utility.yul\":4763:4825   */\n  tag_55\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":4753:4825   */\n  swap4\n  pop\n    /* \"#utility.yul\":4708:4835   */\n  pop\n    /* \"#utility.yul\":4874:4876   */\n  0x60\n    /* \"#utility.yul\":4900:4964   */\n  tag_144\n    /* \"#utility.yul\":4956:4963   */\n  dup9\n    /* \"#utility.yul\":4947:4953   */\n  dup3\n    /* \"#utility.yul\":4936:4945   */\n  dup10\n    /* \"#utility.yul\":4932:4954   */\n  add\n    /* \"#utility.yul\":4900:4964   */\n  tag_58\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":4890:4964   */\n  swap3\n  pop\n    /* \"#utility.yul\":4845:4974   */\n  pop\n    /* \"#utility.yul\":5013:5016   */\n  0x80\n    /* \"#utility.yul\":5040:5104   */\n  tag_145\n    /* \"#utility.yul\":5096:5103   */\n  dup9\n    /* \"#utility.yul\":5087:5093   */\n  dup3\n    /* \"#utility.yul\":5076:5085   */\n  dup10\n    /* \"#utility.yul\":5072:5094   */\n  add\n    /* \"#utility.yul\":5040:5104   */\n  tag_62\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":5030:5104   */\n  swap2\n  pop\n    /* \"#utility.yul\":4984:5114   */\n  pop\n    /* \"#utility.yul\":3802:5121   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  swap1\n  swap4\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5127:5226   */\ntag_63:\n    /* \"#utility.yul\":5179:5185   */\n  0x00\n    /* \"#utility.yul\":5213:5218   */\n  dup2\n    /* \"#utility.yul\":5207:5219   */\n  mload\n    /* \"#utility.yul\":5197:5219   */\n  swap1\n  pop\n    /* \"#utility.yul\":5127:5226   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5232:5412   */\ntag_64:\n    /* \"#utility.yul\":5280:5357   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":5277:5278   */\n  0x00\n    /* \"#utility.yul\":5270:5358   */\n  mstore\n    /* \"#utility.yul\":5377:5381   */\n  0x22\n    /* \"#utility.yul\":5374:5375   */\n  0x04\n    /* \"#utility.yul\":5367:5382   */\n  mstore\n    /* \"#utility.yul\":5401:5405   */\n  0x24\n    /* \"#utility.yul\":5398:5399   */\n  0x00\n    /* \"#utility.yul\":5391:5406   */\n  revert\n    /* \"#utility.yul\":5418:5738   */\ntag_65:\n    /* \"#utility.yul\":5462:5468   */\n  0x00\n    /* \"#utility.yul\":5499:5500   */\n  0x02\n    /* \"#utility.yul\":5493:5497   */\n  dup3\n    /* \"#utility.yul\":5489:5501   */\n  div\n    /* \"#utility.yul\":5479:5501   */\n  swap1\n  pop\n    /* \"#utility.yul\":5546:5547   */\n  0x01\n    /* \"#utility.yul\":5540:5544   */\n  dup3\n    /* \"#utility.yul\":5536:5548   */\n  and\n    /* \"#utility.yul\":5567:5585   */\n  dup1\n    /* \"#utility.yul\":5557:5638   */\n  tag_149\n  jumpi\n    /* \"#utility.yul\":5623:5627   */\n  0x7f\n    /* \"#utility.yul\":5615:5621   */\n  dup3\n    /* \"#utility.yul\":5611:5628   */\n  and\n    /* \"#utility.yul\":5601:5628   */\n  swap2\n  pop\n    /* \"#utility.yul\":5557:5638   */\ntag_149:\n    /* \"#utility.yul\":5685:5687   */\n  0x20\n    /* \"#utility.yul\":5677:5683   */\n  dup3\n    /* \"#utility.yul\":5674:5688   */\n  lt\n    /* \"#utility.yul\":5654:5672   */\n  dup2\n    /* \"#utility.yul\":5651:5689   */\n  sub\n    /* \"#utility.yul\":5648:5732   */\n  tag_150\n  jumpi\n    /* \"#utility.yul\":5704:5722   */\n  tag_151\n  tag_64\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":5648:5732   */\ntag_150:\n    /* \"#utility.yul\":5469:5738   */\n  pop\n    /* \"#utility.yul\":5418:5738   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5744:5885   */\ntag_66:\n    /* \"#utility.yul\":5793:5797   */\n  0x00\n    /* \"#utility.yul\":5816:5819   */\n  dup2\n    /* \"#utility.yul\":5808:5819   */\n  swap1\n  pop\n    /* \"#utility.yul\":5839:5842   */\n  dup2\n    /* \"#utility.yul\":5836:5837   */\n  0x00\n    /* \"#utility.yul\":5829:5843   */\n  mstore\n    /* \"#utility.yul\":5873:5877   */\n  0x20\n    /* \"#utility.yul\":5870:5871   */\n  0x00\n    /* \"#utility.yul\":5860:5878   */\n  keccak256\n    /* \"#utility.yul\":5852:5878   */\n  swap1\n  pop\n    /* \"#utility.yul\":5744:5885   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5891:5984   */\ntag_67:\n    /* \"#utility.yul\":5928:5934   */\n  0x00\n    /* \"#utility.yul\":5975:5977   */\n  0x20\n    /* \"#utility.yul\":5970:5972   */\n  0x1f\n    /* \"#utility.yul\":5963:5968   */\n  dup4\n    /* \"#utility.yul\":5959:5973   */\n  add\n    /* \"#utility.yul\":5955:5978   */\n  div\n    /* \"#utility.yul\":5945:5978   */\n  swap1\n  pop\n    /* \"#utility.yul\":5891:5984   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5990:6097   */\ntag_68:\n    /* \"#utility.yul\":6034:6042   */\n  0x00\n    /* \"#utility.yul\":6084:6089   */\n  dup3\n    /* \"#utility.yul\":6078:6082   */\n  dup3\n    /* \"#utility.yul\":6074:6090   */\n  shl\n    /* \"#utility.yul\":6053:6090   */\n  swap1\n  pop\n    /* \"#utility.yul\":5990:6097   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6103:6496   */\ntag_69:\n    /* \"#utility.yul\":6172:6178   */\n  0x00\n    /* \"#utility.yul\":6222:6223   */\n  0x08\n    /* \"#utility.yul\":6210:6220   */\n  dup4\n    /* \"#utility.yul\":6206:6224   */\n  mul\n    /* \"#utility.yul\":6245:6342   */\n  tag_156\n    /* \"#utility.yul\":6275:6341   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":6264:6273   */\n  dup3\n    /* \"#utility.yul\":6245:6342   */\n  tag_68\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":6363:6402   */\n  tag_157\n    /* \"#utility.yul\":6393:6401   */\n  dup7\n    /* \"#utility.yul\":6382:6391   */\n  dup4\n    /* \"#utility.yul\":6363:6402   */\n  tag_68\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":6351:6402   */\n  swap6\n  pop\n    /* \"#utility.yul\":6435:6439   */\n  dup1\n    /* \"#utility.yul\":6431:6440   */\n  not\n    /* \"#utility.yul\":6424:6429   */\n  dup5\n    /* \"#utility.yul\":6420:6441   */\n  and\n    /* \"#utility.yul\":6411:6441   */\n  swap4\n  pop\n    /* \"#utility.yul\":6484:6488   */\n  dup1\n    /* \"#utility.yul\":6474:6482   */\n  dup7\n    /* \"#utility.yul\":6470:6489   */\n  and\n    /* \"#utility.yul\":6463:6468   */\n  dup5\n    /* \"#utility.yul\":6460:6490   */\n  or\n    /* \"#utility.yul\":6450:6490   */\n  swap3\n  pop\n    /* \"#utility.yul\":6179:6496   */\n  pop\n  pop\n    /* \"#utility.yul\":6103:6496   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6502:6562   */\ntag_70:\n    /* \"#utility.yul\":6530:6533   */\n  0x00\n    /* \"#utility.yul\":6551:6556   */\n  dup2\n    /* \"#utility.yul\":6544:6556   */\n  swap1\n  pop\n    /* \"#utility.yul\":6502:6562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6568:6710   */\ntag_71:\n    /* \"#utility.yul\":6618:6627   */\n  0x00\n    /* \"#utility.yul\":6651:6704   */\n  tag_160\n    /* \"#utility.yul\":6669:6703   */\n  tag_161\n    /* \"#utility.yul\":6678:6702   */\n  tag_162\n    /* \"#utility.yul\":6696:6701   */\n  dup5\n    /* \"#utility.yul\":6678:6702   */\n  tag_56\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":6669:6703   */\n  tag_70\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":6651:6704   */\n  tag_56\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":6638:6704   */\n  swap1\n  pop\n    /* \"#utility.yul\":6568:6710   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6716:6791   */\ntag_72:\n    /* \"#utility.yul\":6759:6762   */\n  0x00\n    /* \"#utility.yul\":6780:6785   */\n  dup2\n    /* \"#utility.yul\":6773:6785   */\n  swap1\n  pop\n    /* \"#utility.yul\":6716:6791   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6797:7066   */\ntag_73:\n    /* \"#utility.yul\":6907:6946   */\n  tag_165\n    /* \"#utility.yul\":6938:6945   */\n  dup4\n    /* \"#utility.yul\":6907:6946   */\n  tag_71\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":6968:7059   */\n  tag_166\n    /* \"#utility.yul\":7017:7058   */\n  tag_167\n    /* \"#utility.yul\":7041:7057   */\n  dup3\n    /* \"#utility.yul\":7017:7058   */\n  tag_72\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":7009:7015   */\n  dup5\n    /* \"#utility.yul\":7002:7006   */\n  dup5\n    /* \"#utility.yul\":6996:7007   */\n  sload\n    /* \"#utility.yul\":6968:7059   */\n  tag_69\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":6962:6966   */\n  dup3\n    /* \"#utility.yul\":6955:7060   */\n  sstore\n    /* \"#utility.yul\":6873:7066   */\n  pop\n    /* \"#utility.yul\":6797:7066   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7072:7145   */\ntag_74:\n    /* \"#utility.yul\":7117:7120   */\n  0x00\n    /* \"#utility.yul\":7138:7139   */\n  0x00\n    /* \"#utility.yul\":7131:7139   */\n  swap1\n  pop\n    /* \"#utility.yul\":7072:7145   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7151:7340   */\ntag_75:\n    /* \"#utility.yul\":7228:7260   */\n  tag_170\n  tag_74\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":7269:7334   */\n  tag_171\n    /* \"#utility.yul\":7327:7333   */\n  dup2\n    /* \"#utility.yul\":7319:7325   */\n  dup5\n    /* \"#utility.yul\":7313:7317   */\n  dup5\n    /* \"#utility.yul\":7269:7334   */\n  tag_73\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":7204:7340   */\n  pop\n    /* \"#utility.yul\":7151:7340   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7346:7532   */\ntag_76:\n    /* \"#utility.yul\":7406:7526   */\ntag_173:\n    /* \"#utility.yul\":7423:7426   */\n  dup2\n    /* \"#utility.yul\":7416:7421   */\n  dup2\n    /* \"#utility.yul\":7413:7427   */\n  lt\n    /* \"#utility.yul\":7406:7526   */\n  iszero\n  tag_175\n  jumpi\n    /* \"#utility.yul\":7477:7516   */\n  tag_176\n    /* \"#utility.yul\":7514:7515   */\n  0x00\n    /* \"#utility.yul\":7507:7512   */\n  dup3\n    /* \"#utility.yul\":7477:7516   */\n  tag_75\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":7450:7451   */\n  0x01\n    /* \"#utility.yul\":7443:7448   */\n  dup2\n    /* \"#utility.yul\":7439:7452   */\n  add\n    /* \"#utility.yul\":7430:7452   */\n  swap1\n  pop\n    /* \"#utility.yul\":7406:7526   */\n  jump(tag_173)\ntag_175:\n    /* \"#utility.yul\":7346:7532   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7538:8081   */\ntag_77:\n    /* \"#utility.yul\":7639:7641   */\n  0x1f\n    /* \"#utility.yul\":7634:7637   */\n  dup3\n    /* \"#utility.yul\":7631:7642   */\n  gt\n    /* \"#utility.yul\":7628:8074   */\n  iszero\n  tag_178\n  jumpi\n    /* \"#utility.yul\":7673:7711   */\n  tag_179\n    /* \"#utility.yul\":7705:7710   */\n  dup2\n    /* \"#utility.yul\":7673:7711   */\n  tag_66\n  jump\t// in\ntag_179:\n    /* \"#utility.yul\":7757:7786   */\n  tag_180\n    /* \"#utility.yul\":7775:7785   */\n  dup5\n    /* \"#utility.yul\":7757:7786   */\n  tag_67\n  jump\t// in\ntag_180:\n    /* \"#utility.yul\":7747:7755   */\n  dup2\n    /* \"#utility.yul\":7743:7787   */\n  add\n    /* \"#utility.yul\":7940:7942   */\n  0x20\n    /* \"#utility.yul\":7928:7938   */\n  dup6\n    /* \"#utility.yul\":7925:7943   */\n  lt\n    /* \"#utility.yul\":7922:7971   */\n  iszero\n  tag_181\n  jumpi\n    /* \"#utility.yul\":7961:7969   */\n  dup2\n    /* \"#utility.yul\":7946:7969   */\n  swap1\n  pop\n    /* \"#utility.yul\":7922:7971   */\ntag_181:\n    /* \"#utility.yul\":7984:8064   */\n  tag_182\n    /* \"#utility.yul\":8040:8062   */\n  tag_183\n    /* \"#utility.yul\":8058:8061   */\n  dup6\n    /* \"#utility.yul\":8040:8062   */\n  tag_67\n  jump\t// in\ntag_183:\n    /* \"#utility.yul\":8030:8038   */\n  dup4\n    /* \"#utility.yul\":8026:8063   */\n  add\n    /* \"#utility.yul\":8013:8024   */\n  dup3\n    /* \"#utility.yul\":7984:8064   */\n  tag_76\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":7643:8074   */\n  pop\n  pop\n    /* \"#utility.yul\":7628:8074   */\ntag_178:\n    /* \"#utility.yul\":7538:8081   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8087:8204   */\ntag_78:\n    /* \"#utility.yul\":8141:8149   */\n  0x00\n    /* \"#utility.yul\":8191:8196   */\n  dup3\n    /* \"#utility.yul\":8185:8189   */\n  dup3\n    /* \"#utility.yul\":8181:8197   */\n  shr\n    /* \"#utility.yul\":8160:8197   */\n  swap1\n  pop\n    /* \"#utility.yul\":8087:8204   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8210:8379   */\ntag_79:\n    /* \"#utility.yul\":8254:8260   */\n  0x00\n    /* \"#utility.yul\":8287:8338   */\n  tag_186\n    /* \"#utility.yul\":8335:8336   */\n  0x00\n    /* \"#utility.yul\":8331:8337   */\n  not\n    /* \"#utility.yul\":8323:8328   */\n  dup5\n    /* \"#utility.yul\":8320:8321   */\n  0x08\n    /* \"#utility.yul\":8316:8329   */\n  mul\n    /* \"#utility.yul\":8287:8338   */\n  tag_78\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":8283:8339   */\n  not\n    /* \"#utility.yul\":8368:8372   */\n  dup1\n    /* \"#utility.yul\":8362:8366   */\n  dup4\n    /* \"#utility.yul\":8358:8373   */\n  and\n    /* \"#utility.yul\":8348:8373   */\n  swap2\n  pop\n    /* \"#utility.yul\":8261:8379   */\n  pop\n    /* \"#utility.yul\":8210:8379   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8384:8679   */\ntag_80:\n    /* \"#utility.yul\":8460:8464   */\n  0x00\n    /* \"#utility.yul\":8606:8635   */\n  tag_188\n    /* \"#utility.yul\":8631:8634   */\n  dup4\n    /* \"#utility.yul\":8625:8629   */\n  dup4\n    /* \"#utility.yul\":8606:8635   */\n  tag_79\n  jump\t// in\ntag_188:\n    /* \"#utility.yul\":8598:8635   */\n  swap2\n  pop\n    /* \"#utility.yul\":8668:8671   */\n  dup3\n    /* \"#utility.yul\":8665:8666   */\n  0x02\n    /* \"#utility.yul\":8661:8672   */\n  mul\n    /* \"#utility.yul\":8655:8659   */\n  dup3\n    /* \"#utility.yul\":8652:8673   */\n  or\n    /* \"#utility.yul\":8644:8673   */\n  swap1\n  pop\n    /* \"#utility.yul\":8384:8679   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8684:10079   */\ntag_9:\n    /* \"#utility.yul\":8801:8838   */\n  tag_190\n    /* \"#utility.yul\":8834:8837   */\n  dup3\n    /* \"#utility.yul\":8801:8838   */\n  tag_63\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":8903:8921   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":8895:8901   */\n  dup2\n    /* \"#utility.yul\":8892:8922   */\n  gt\n    /* \"#utility.yul\":8889:8945   */\n  iszero\n  tag_191\n  jumpi\n    /* \"#utility.yul\":8925:8943   */\n  tag_192\n  tag_46\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":8889:8945   */\ntag_191:\n    /* \"#utility.yul\":8969:9007   */\n  tag_193\n    /* \"#utility.yul\":9001:9005   */\n  dup3\n    /* \"#utility.yul\":8995:9006   */\n  sload\n    /* \"#utility.yul\":8969:9007   */\n  tag_65\n  jump\t// in\ntag_193:\n    /* \"#utility.yul\":9054:9121   */\n  tag_194\n    /* \"#utility.yul\":9114:9120   */\n  dup3\n    /* \"#utility.yul\":9106:9112   */\n  dup3\n    /* \"#utility.yul\":9100:9104   */\n  dup6\n    /* \"#utility.yul\":9054:9121   */\n  tag_77\n  jump\t// in\ntag_194:\n    /* \"#utility.yul\":9148:9149   */\n  0x00\n    /* \"#utility.yul\":9172:9176   */\n  0x20\n    /* \"#utility.yul\":9159:9176   */\n  swap1\n  pop\n    /* \"#utility.yul\":9204:9206   */\n  0x1f\n    /* \"#utility.yul\":9196:9202   */\n  dup4\n    /* \"#utility.yul\":9193:9207   */\n  gt\n    /* \"#utility.yul\":9221:9222   */\n  0x01\n    /* \"#utility.yul\":9216:9834   */\n  dup2\n  eq\n  tag_196\n  jumpi\n    /* \"#utility.yul\":9878:9879   */\n  0x00\n    /* \"#utility.yul\":9895:9901   */\n  dup5\n    /* \"#utility.yul\":9892:9969   */\n  iszero\n  tag_197\n  jumpi\n    /* \"#utility.yul\":9944:9953   */\n  dup3\n    /* \"#utility.yul\":9939:9942   */\n  dup8\n    /* \"#utility.yul\":9935:9954   */\n  add\n    /* \"#utility.yul\":9929:9955   */\n  mload\n    /* \"#utility.yul\":9920:9955   */\n  swap1\n  pop\n    /* \"#utility.yul\":9892:9969   */\ntag_197:\n    /* \"#utility.yul\":9995:10062   */\n  tag_198\n    /* \"#utility.yul\":10055:10061   */\n  dup6\n    /* \"#utility.yul\":10048:10053   */\n  dup3\n    /* \"#utility.yul\":9995:10062   */\n  tag_80\n  jump\t// in\ntag_198:\n    /* \"#utility.yul\":9989:9993   */\n  dup7\n    /* \"#utility.yul\":9982:10063   */\n  sstore\n    /* \"#utility.yul\":9851:10073   */\n  pop\n    /* \"#utility.yul\":9186:10073   */\n  jump(tag_195)\n    /* \"#utility.yul\":9216:9834   */\ntag_196:\n    /* \"#utility.yul\":9268:9272   */\n  0x1f\n    /* \"#utility.yul\":9264:9273   */\n  not\n    /* \"#utility.yul\":9256:9262   */\n  dup5\n    /* \"#utility.yul\":9252:9274   */\n  and\n    /* \"#utility.yul\":9302:9339   */\n  tag_199\n    /* \"#utility.yul\":9334:9338   */\n  dup7\n    /* \"#utility.yul\":9302:9339   */\n  tag_66\n  jump\t// in\ntag_199:\n    /* \"#utility.yul\":9361:9362   */\n  0x00\n    /* \"#utility.yul\":9375:9583   */\ntag_200:\n    /* \"#utility.yul\":9389:9396   */\n  dup3\n    /* \"#utility.yul\":9386:9387   */\n  dup2\n    /* \"#utility.yul\":9383:9397   */\n  lt\n    /* \"#utility.yul\":9375:9583   */\n  iszero\n  tag_202\n  jumpi\n    /* \"#utility.yul\":9468:9477   */\n  dup5\n    /* \"#utility.yul\":9463:9466   */\n  dup10\n    /* \"#utility.yul\":9459:9478   */\n  add\n    /* \"#utility.yul\":9453:9479   */\n  mload\n    /* \"#utility.yul\":9445:9451   */\n  dup3\n    /* \"#utility.yul\":9438:9480   */\n  sstore\n    /* \"#utility.yul\":9519:9520   */\n  0x01\n    /* \"#utility.yul\":9511:9517   */\n  dup3\n    /* \"#utility.yul\":9507:9521   */\n  add\n    /* \"#utility.yul\":9497:9521   */\n  swap2\n  pop\n    /* \"#utility.yul\":9566:9568   */\n  0x20\n    /* \"#utility.yul\":9555:9564   */\n  dup6\n    /* \"#utility.yul\":9551:9569   */\n  add\n    /* \"#utility.yul\":9538:9569   */\n  swap5\n  pop\n    /* \"#utility.yul\":9412:9416   */\n  0x20\n    /* \"#utility.yul\":9409:9410   */\n  dup2\n    /* \"#utility.yul\":9405:9417   */\n  add\n    /* \"#utility.yul\":9400:9417   */\n  swap1\n  pop\n    /* \"#utility.yul\":9375:9583   */\n  jump(tag_200)\ntag_202:\n    /* \"#utility.yul\":9611:9617   */\n  dup7\n    /* \"#utility.yul\":9602:9609   */\n  dup4\n    /* \"#utility.yul\":9599:9618   */\n  lt\n    /* \"#utility.yul\":9596:9775   */\n  iszero\n  tag_203\n  jumpi\n    /* \"#utility.yul\":9669:9678   */\n  dup5\n    /* \"#utility.yul\":9664:9667   */\n  dup10\n    /* \"#utility.yul\":9660:9679   */\n  add\n    /* \"#utility.yul\":9654:9680   */\n  mload\n    /* \"#utility.yul\":9712:9760   */\n  tag_204\n    /* \"#utility.yul\":9754:9758   */\n  0x1f\n    /* \"#utility.yul\":9746:9752   */\n  dup10\n    /* \"#utility.yul\":9742:9759   */\n  and\n    /* \"#utility.yul\":9731:9740   */\n  dup3\n    /* \"#utility.yul\":9712:9760   */\n  tag_79\n  jump\t// in\ntag_204:\n    /* \"#utility.yul\":9704:9710   */\n  dup4\n    /* \"#utility.yul\":9697:9761   */\n  sstore\n    /* \"#utility.yul\":9619:9775   */\n  pop\n    /* \"#utility.yul\":9596:9775   */\ntag_203:\n    /* \"#utility.yul\":9821:9822   */\n  0x01\n    /* \"#utility.yul\":9817:9818   */\n  0x02\n    /* \"#utility.yul\":9809:9815   */\n  dup9\n    /* \"#utility.yul\":9805:9819   */\n  mul\n    /* \"#utility.yul\":9801:9823   */\n  add\n    /* \"#utility.yul\":9795:9799   */\n  dup9\n    /* \"#utility.yul\":9788:9824   */\n  sstore\n    /* \"#utility.yul\":9223:9834   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":9186:10073   */\ntag_195:\n  pop\n    /* \"#utility.yul\":8776:10079   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8684:10079   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10085:10203   */\ntag_81:\n    /* \"#utility.yul\":10172:10196   */\n  tag_206\n    /* \"#utility.yul\":10190:10195   */\n  dup2\n    /* \"#utility.yul\":10172:10196   */\n  tag_60\n  jump\t// in\ntag_206:\n    /* \"#utility.yul\":10167:10170   */\n  dup3\n    /* \"#utility.yul\":10160:10197   */\n  mstore\n    /* \"#utility.yul\":10085:10203   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10209:10431   */\ntag_14:\n    /* \"#utility.yul\":10302:10306   */\n  0x00\n    /* \"#utility.yul\":10340:10342   */\n  0x20\n    /* \"#utility.yul\":10329:10338   */\n  dup3\n    /* \"#utility.yul\":10325:10343   */\n  add\n    /* \"#utility.yul\":10317:10343   */\n  swap1\n  pop\n    /* \"#utility.yul\":10353:10424   */\n  tag_208\n    /* \"#utility.yul\":10421:10422   */\n  0x00\n    /* \"#utility.yul\":10410:10419   */\n  dup4\n    /* \"#utility.yul\":10406:10423   */\n  add\n    /* \"#utility.yul\":10397:10403   */\n  dup5\n    /* \"#utility.yul\":10353:10424   */\n  tag_81\n  jump\t// in\ntag_208:\n    /* \"#utility.yul\":10209:10431   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10437:10617   */\ntag_82:\n    /* \"#utility.yul\":10485:10562   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":10482:10483   */\n  0x00\n    /* \"#utility.yul\":10475:10563   */\n  mstore\n    /* \"#utility.yul\":10582:10586   */\n  0x11\n    /* \"#utility.yul\":10579:10580   */\n  0x04\n    /* \"#utility.yul\":10572:10587   */\n  mstore\n    /* \"#utility.yul\":10606:10610   */\n  0x24\n    /* \"#utility.yul\":10603:10604   */\n  0x00\n    /* \"#utility.yul\":10596:10611   */\n  revert\n    /* \"#utility.yul\":10623:10814   */\ntag_31:\n    /* \"#utility.yul\":10663:10666   */\n  0x00\n    /* \"#utility.yul\":10682:10702   */\n  tag_211\n    /* \"#utility.yul\":10700:10701   */\n  dup3\n    /* \"#utility.yul\":10682:10702   */\n  tag_56\n  jump\t// in\ntag_211:\n    /* \"#utility.yul\":10677:10702   */\n  swap2\n  pop\n    /* \"#utility.yul\":10716:10736   */\n  tag_212\n    /* \"#utility.yul\":10734:10735   */\n  dup4\n    /* \"#utility.yul\":10716:10736   */\n  tag_56\n  jump\t// in\ntag_212:\n    /* \"#utility.yul\":10711:10736   */\n  swap3\n  pop\n    /* \"#utility.yul\":10759:10760   */\n  dup3\n    /* \"#utility.yul\":10756:10757   */\n  dup3\n    /* \"#utility.yul\":10752:10761   */\n  add\n    /* \"#utility.yul\":10745:10761   */\n  swap1\n  pop\n    /* \"#utility.yul\":10780:10783   */\n  dup1\n    /* \"#utility.yul\":10777:10778   */\n  dup3\n    /* \"#utility.yul\":10774:10784   */\n  gt\n    /* \"#utility.yul\":10771:10807   */\n  iszero\n  tag_213\n  jumpi\n    /* \"#utility.yul\":10787:10805   */\n  tag_214\n  tag_82\n  jump\t// in\ntag_214:\n    /* \"#utility.yul\":10771:10807   */\ntag_213:\n    /* \"#utility.yul\":10623:10814   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10820:10938   */\ntag_83:\n    /* \"#utility.yul\":10907:10931   */\n  tag_216\n    /* \"#utility.yul\":10925:10930   */\n  dup2\n    /* \"#utility.yul\":10907:10931   */\n  tag_56\n  jump\t// in\ntag_216:\n    /* \"#utility.yul\":10902:10905   */\n  dup3\n    /* \"#utility.yul\":10895:10932   */\n  mstore\n    /* \"#utility.yul\":10820:10938   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10944:11386   */\ntag_35:\n    /* \"#utility.yul\":11093:11097   */\n  0x00\n    /* \"#utility.yul\":11131:11133   */\n  0x60\n    /* \"#utility.yul\":11120:11129   */\n  dup3\n    /* \"#utility.yul\":11116:11134   */\n  add\n    /* \"#utility.yul\":11108:11134   */\n  swap1\n  pop\n    /* \"#utility.yul\":11144:11215   */\n  tag_218\n    /* \"#utility.yul\":11212:11213   */\n  0x00\n    /* \"#utility.yul\":11201:11210   */\n  dup4\n    /* \"#utility.yul\":11197:11214   */\n  add\n    /* \"#utility.yul\":11188:11194   */\n  dup7\n    /* \"#utility.yul\":11144:11215   */\n  tag_81\n  jump\t// in\ntag_218:\n    /* \"#utility.yul\":11225:11297   */\n  tag_219\n    /* \"#utility.yul\":11293:11295   */\n  0x20\n    /* \"#utility.yul\":11282:11291   */\n  dup4\n    /* \"#utility.yul\":11278:11296   */\n  add\n    /* \"#utility.yul\":11269:11275   */\n  dup6\n    /* \"#utility.yul\":11225:11297   */\n  tag_83\n  jump\t// in\ntag_219:\n    /* \"#utility.yul\":11307:11379   */\n  tag_220\n    /* \"#utility.yul\":11375:11377   */\n  0x40\n    /* \"#utility.yul\":11364:11373   */\n  dup4\n    /* \"#utility.yul\":11360:11378   */\n  add\n    /* \"#utility.yul\":11351:11357   */\n  dup5\n    /* \"#utility.yul\":11307:11379   */\n  tag_83\n  jump\t// in\ntag_220:\n    /* \"#utility.yul\":10944:11386   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11392:11614   */\ntag_39:\n    /* \"#utility.yul\":11485:11489   */\n  0x00\n    /* \"#utility.yul\":11523:11525   */\n  0x20\n    /* \"#utility.yul\":11512:11521   */\n  dup3\n    /* \"#utility.yul\":11508:11526   */\n  add\n    /* \"#utility.yul\":11500:11526   */\n  swap1\n  pop\n    /* \"#utility.yul\":11536:11607   */\n  tag_222\n    /* \"#utility.yul\":11604:11605   */\n  0x00\n    /* \"#utility.yul\":11593:11602   */\n  dup4\n    /* \"#utility.yul\":11589:11606   */\n  add\n    /* \"#utility.yul\":11580:11586   */\n  dup5\n    /* \"#utility.yul\":11536:11607   */\n  tag_83\n  jump\t// in\ntag_222:\n    /* \"#utility.yul\":11392:11614   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"MockERC20.sol\":330:2210  contract MockERC20 is ERC20, Ownable {... */\ntag_21:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"MockERC20.sol\":330:2210  contract MockERC20 is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x313ce567\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x57915897\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MockERC20.sol\":1044:1144  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MockERC20.sol\":1343:1440  function mint(address to, uint256 amount) external onlyOwner {... */\n    tag_8:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n    tag_45:\n      stop\n        /* \"MockERC20.sol\":1889:1972  function burn(uint256 amount) external {... */\n    tag_9:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      stop\n        /* \"MockERC20.sol\":1598:1683  function faucet(uint256 amount) external {... */\n    tag_10:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n    tag_52:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_11:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      stop\n        /* \"MockERC20.sol\":2051:2207  function burnFrom(address account, uint256 amount) external {... */\n    tag_13:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n    tag_62:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_14:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_15:\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3422  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_16:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_17:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_79\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_18:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n    tag_81:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_23:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_85\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_87\n      swap1\n      tag_86\n      jump\t// in\n    tag_87:\n      dup1\n      iszero\n      tag_88\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_89\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_88)\n    tag_89:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_90:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_90\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_88:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3975:3979  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3991:4004  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4007:4019  _msgSender() */\n      tag_92\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4007:4017  _msgSender */\n      tag_93\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4007:4019  _msgSender() */\n      jump\t// in\n    tag_92:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3991:4019  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4029:4060  _approve(owner, spender, value) */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4038:4043  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4045:4052  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4054:4059  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4029:4037  _approve */\n      tag_95\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4029:4060  _approve(owner, spender, value) */\n      jump\t// in\n    tag_94:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4077:4081  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4070:4081  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3902:4088  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2855:2862  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2881:2893  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2874:2893  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2803:2900  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4767:4771  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4783:4798  address spender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4801:4813  _msgSender() */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4801:4811  _msgSender */\n      tag_93\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4801:4813  _msgSender() */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4783:4813  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4823:4860  _spendAllowance(from, spender, value) */\n      tag_99\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4839:4843  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4845:4852  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4854:4859  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4823:4838  _spendAllowance */\n      tag_100\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4823:4860  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4870:4896  _transfer(from, to, value) */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4880:4884  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4886:4888  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4890:4895  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4870:4879  _transfer */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4870:4896  _transfer(from, to, value) */\n      jump\t// in\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4913:4917  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4906:4917  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4680:4924  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MockERC20.sol\":1044:1144  function decimals() public view virtual override returns (uint8) {... */\n    tag_42:\n        /* \"MockERC20.sol\":1102:1107  uint8 */\n      0x00\n        /* \"MockERC20.sol\":1127:1136  _decimals */\n      0x05\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"MockERC20.sol\":1120:1136  return _decimals */\n      swap1\n      pop\n        /* \"MockERC20.sol\":1044:1144  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"MockERC20.sol\":1343:1440  function mint(address to, uint256 amount) external onlyOwner {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_105\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_106\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_105:\n        /* \"MockERC20.sol\":1415:1432  _mint(to, amount) */\n      tag_108\n        /* \"MockERC20.sol\":1421:1423  to */\n      dup3\n        /* \"MockERC20.sol\":1425:1431  amount */\n      dup3\n        /* \"MockERC20.sol\":1415:1420  _mint */\n      tag_109\n        /* \"MockERC20.sol\":1415:1432  _mint(to, amount) */\n      jump\t// in\n    tag_108:\n        /* \"MockERC20.sol\":1343:1440  function mint(address to, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"MockERC20.sol\":1889:1972  function burn(uint256 amount) external {... */\n    tag_51:\n        /* \"MockERC20.sol\":1939:1964  _burn(msg.sender, amount) */\n      tag_111\n        /* \"MockERC20.sol\":1945:1955  msg.sender */\n      caller\n        /* \"MockERC20.sol\":1957:1963  amount */\n      dup3\n        /* \"MockERC20.sol\":1939:1944  _burn */\n      tag_112\n        /* \"MockERC20.sol\":1939:1964  _burn(msg.sender, amount) */\n      jump\t// in\n    tag_111:\n        /* \"MockERC20.sol\":1889:1972  function burn(uint256 amount) external {... */\n      pop\n      jump\t// out\n        /* \"MockERC20.sol\":1598:1683  function faucet(uint256 amount) external {... */\n    tag_54:\n        /* \"MockERC20.sol\":1650:1675  _mint(msg.sender, amount) */\n      tag_114\n        /* \"MockERC20.sol\":1656:1666  msg.sender */\n      caller\n        /* \"MockERC20.sol\":1668:1674  amount */\n      dup3\n        /* \"MockERC20.sol\":1650:1655  _mint */\n      tag_109\n        /* \"MockERC20.sol\":1650:1675  _mint(msg.sender, amount) */\n      jump\t// in\n    tag_114:\n        /* \"MockERC20.sol\":1598:1683  function faucet(uint256 amount) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2998:3005  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3024:3033  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3024:3042  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3034:3041  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3024:3042  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3017:3042  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2933:3049  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_117\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_106\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_120\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_119:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"MockERC20.sol\":2051:2207  function burnFrom(address account, uint256 amount) external {... */\n    tag_64:\n        /* \"MockERC20.sol\":2122:2166  _spendAllowance(account, msg.sender, amount) */\n      tag_122\n        /* \"MockERC20.sol\":2138:2145  account */\n      dup3\n        /* \"MockERC20.sol\":2147:2157  msg.sender */\n      caller\n        /* \"MockERC20.sol\":2159:2165  amount */\n      dup4\n        /* \"MockERC20.sol\":2122:2137  _spendAllowance */\n      tag_100\n        /* \"MockERC20.sol\":2122:2166  _spendAllowance(account, msg.sender, amount) */\n      jump\t// in\n    tag_122:\n        /* \"MockERC20.sol\":2177:2199  _burn(account, amount) */\n      tag_123\n        /* \"MockERC20.sol\":2183:2190  account */\n      dup3\n        /* \"MockERC20.sol\":2192:2198  amount */\n      dup3\n        /* \"MockERC20.sol\":2177:2182  _burn */\n      tag_112\n        /* \"MockERC20.sol\":2177:2199  _burn(account, amount) */\n      jump\t// in\n    tag_123:\n        /* \"MockERC20.sol\":2051:2207  function burnFrom(address account, uint256 amount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_126\n      swap1\n      tag_86\n      jump\t// in\n    tag_126:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_127\n      swap1\n      tag_86\n      jump\t// in\n    tag_127:\n      dup1\n      iszero\n      tag_128\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_129\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_128)\n    tag_129:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_130:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_130\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_128:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3422  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3313:3317  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3329:3342  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3345:3357  _msgSender() */\n      tag_132\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3345:3355  _msgSender */\n      tag_93\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3345:3357  _msgSender() */\n      jump\t// in\n    tag_132:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3329:3357  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3367:3394  _transfer(owner, to, value) */\n      tag_133\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3377:3382  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3386  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3388:3393  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3367:3376  _transfer */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3367:3394  _transfer(owner, to, value) */\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3411:3415  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3404:3415  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3422  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3535:3542  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3572  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3579  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3573:3578  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3579  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3588  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3580:3587  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3561:3588  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3554:3588  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3595  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_136\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_106\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_136:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_138\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_138:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_140\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_120\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_140:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8630:8758  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8714:8751  _approve(owner, spender, value, true) */\n      tag_143\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8723:8728  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8730:8737  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8739:8744  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8746:8750  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8714:8722  _approve */\n      tag_144\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8714:8751  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_143:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8630:8758  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10319:10795  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10418:10442  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10445:10470  allowance(owner, spender) */\n      tag_146\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10455:10460  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10462:10469  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10445:10454  allowance */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10445:10470  allowance(owner, spender) */\n      jump\t// in\n    tag_146:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10418:10470  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10503:10520  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10484:10500  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10484:10520  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10480:10789  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_147\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10559:10564  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10540:10556  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10540:10564  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10536:10666  if (currentAllowance < value) {... */\n      iszero\n      tag_148\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10618:10625  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10627:10643  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10645:10650  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10591:10651  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_149\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10536:10666  if (currentAllowance < value) {... */\n    tag_148:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10764  _approve(owner, spender, currentAllowance - value, false) */\n      tag_151\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10716:10721  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10723:10730  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10751:10756  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10732:10748  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10732:10756  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10763  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10715  _approve */\n      tag_144\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10764  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10480:10789  if (currentAllowance < type(uint256).max) {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10408:10795  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10319:10795  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5297:5597  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_102:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5396:5397  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5380:5398  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5380:5384  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5380:5398  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5376:5462  if (from == address(0)) {... */\n      tag_153\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5448:5449  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5421:5451  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5376:5462  if (from == address(0)) {... */\n    tag_153:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5489:5490  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5475:5491  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5475:5477  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5475:5491  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5471:5557  if (to == address(0)) {... */\n      tag_155\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5543:5544  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5514:5546  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_156\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5471:5557  if (to == address(0)) {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5590  _update(from, to, value) */\n      tag_157\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5574:5578  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5580:5582  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5584:5589  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5573  _update */\n      tag_158\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5590  _update(from, to, value) */\n      jump\t// in\n    tag_157:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5297:5597  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_160\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_93\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_160:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_161\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_66\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_161:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_162\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_163\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_93\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_164\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_162:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7362:7570  function _mint(address account, uint256 value) internal {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7451:7452  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7453  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7439  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7432:7453  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7428:7519  if (account == address(0)) {... */\n      tag_166\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7506  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7476:7508  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_167\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_167:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7428:7519  if (account == address(0)) {... */\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7563  _update(address(0), account, value) */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7548:7555  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7557:7562  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  _update */\n      tag_158\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7563  _update(address(0), account, value) */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7362:7570  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7888:8094  function _burn(address account, uint256 value) internal {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7977:7978  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7958:7979  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7958:7965  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7958:7979  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7954:8043  if (account == address(0)) {... */\n      tag_170\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8029:8030  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8002:8032  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7954:8043  if (account == address(0)) {... */\n    tag_170:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8052:8087  _update(account, address(0), value) */\n      tag_172\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8060:8067  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8077:8078  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8081:8086  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8052:8059  _update */\n      tag_158\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8052:8087  _update(account, address(0), value) */\n      jump\t// in\n    tag_172:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7888:8094  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:10037  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9734:9735  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9717:9736  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9717:9722  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9717:9736  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9713:9802  if (owner == address(0)) {... */\n      tag_175\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9788:9789  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9759:9791  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9713:9802  if (owner == address(0)) {... */\n    tag_175:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9834:9835  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9815:9836  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9815:9822  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9815:9836  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9901  if (spender == address(0)) {... */\n      tag_177\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9887:9888  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9859:9890  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9901  if (spender == address(0)) {... */\n    tag_177:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9940:9945  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9921  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9928  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9922:9927  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9928  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9937  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9929:9936  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9937  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9910:9945  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9959:9968  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:10031  if (emitEvent) {... */\n      iszero\n      tag_179\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10005:10012  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9998:10003  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10014:10019  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9989:10020  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_180\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:10031  if (emitEvent) {... */\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:10037  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6017:6018  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6005  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6001:6019  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n      tag_182\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6153:6158  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6149  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6137:6158  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_183\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_183:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n      jump(tag_185)\n    tag_182:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6189:6208  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6220  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6221:6225  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6211:6226  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6189:6226  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6258:6263  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6244:6255  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6244:6263  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n      iszero\n      tag_186\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6315:6319  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6334:6339  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6290:6340  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6240:6355  if (fromBalance < value) {... */\n    tag_186:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6507:6512  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6493:6504  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6493:6512  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6484  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6485:6489  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6490  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6475:6512  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6175:6537  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5997:6537  if (from == address(0)) {... */\n    tag_185:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6565:6566  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6553  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6551:6567  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n      tag_188\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6730:6735  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6726  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6714:6735  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n      jump(tag_189)\n    tag_188:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6942:6947  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6934  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6935:6937  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6938  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6925:6947  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6547:6972  if (to == address(0)) {... */\n    tag_189:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7004  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6996:7000  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7006:7011  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:7012  Transfer(from, to, value) */\n      mload(0x40)\n      tag_190\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_190:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5912:7019  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_191:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_192:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_193:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_194:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_195:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_220\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_191\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":711:782   */\n      tag_221\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_192\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_222\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_193\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":881:910   */\n      tag_223\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_194\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_25:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_225\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_195\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_197:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_199:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_200:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_231\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_199\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_201:\n        /* \"#utility.yul\":1876:1900   */\n      tag_233\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_200\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_234\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      0x00\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_234:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_202:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_236\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_201\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_203:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_204:\n        /* \"#utility.yul\":2232:2256   */\n      tag_239\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_203\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_240\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      0x00\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_240:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_205:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_242\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_204\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_28:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      0x00\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_244\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_245\n      tag_197\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":2525:2644   */\n    tag_244:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_246\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_202\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_247\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_205\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_206:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_207:\n        /* \"#utility.yul\":3089:3110   */\n      tag_250\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_206\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_31:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_252\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_207\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_208:\n        /* \"#utility.yul\":3426:3450   */\n      tag_254\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_203\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_35:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_256\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_208\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_38:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      0x00\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_258\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_259\n      tag_197\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":3801:3920   */\n    tag_258:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_260\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_202\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_261\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_202\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_262\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_205\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4402   */\n    tag_209:\n        /* \"#utility.yul\":4351:4358   */\n      0x00\n        /* \"#utility.yul\":4391:4395   */\n      0xff\n        /* \"#utility.yul\":4384:4389   */\n      dup3\n        /* \"#utility.yul\":4380:4396   */\n      and\n        /* \"#utility.yul\":4369:4396   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4408:4520   */\n    tag_210:\n        /* \"#utility.yul\":4491:4513   */\n      tag_265\n        /* \"#utility.yul\":4507:4512   */\n      dup2\n        /* \"#utility.yul\":4491:4513   */\n      tag_209\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":4486:4489   */\n      dup3\n        /* \"#utility.yul\":4479:4514   */\n      mstore\n        /* \"#utility.yul\":4408:4520   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4526:4740   */\n    tag_44:\n        /* \"#utility.yul\":4615:4619   */\n      0x00\n        /* \"#utility.yul\":4653:4655   */\n      0x20\n        /* \"#utility.yul\":4642:4651   */\n      dup3\n        /* \"#utility.yul\":4638:4656   */\n      add\n        /* \"#utility.yul\":4630:4656   */\n      swap1\n      pop\n        /* \"#utility.yul\":4666:4733   */\n      tag_267\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4719:4728   */\n      dup4\n        /* \"#utility.yul\":4715:4732   */\n      add\n        /* \"#utility.yul\":4706:4712   */\n      dup5\n        /* \"#utility.yul\":4666:4733   */\n      tag_210\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":4526:4740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4746:5075   */\n    tag_50:\n        /* \"#utility.yul\":4805:4811   */\n      0x00\n        /* \"#utility.yul\":4854:4856   */\n      0x20\n        /* \"#utility.yul\":4842:4851   */\n      dup3\n        /* \"#utility.yul\":4833:4840   */\n      dup5\n        /* \"#utility.yul\":4829:4852   */\n      sub\n        /* \"#utility.yul\":4825:4857   */\n      slt\n        /* \"#utility.yul\":4822:4941   */\n      iszero\n      tag_269\n      jumpi\n        /* \"#utility.yul\":4860:4939   */\n      tag_270\n      tag_197\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":4822:4941   */\n    tag_269:\n        /* \"#utility.yul\":4980:4981   */\n      0x00\n        /* \"#utility.yul\":5005:5058   */\n      tag_271\n        /* \"#utility.yul\":5050:5057   */\n      dup5\n        /* \"#utility.yul\":5041:5047   */\n      dup3\n        /* \"#utility.yul\":5030:5039   */\n      dup6\n        /* \"#utility.yul\":5026:5048   */\n      add\n        /* \"#utility.yul\":5005:5058   */\n      tag_205\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":4995:5058   */\n      swap2\n      pop\n        /* \"#utility.yul\":4951:5068   */\n      pop\n        /* \"#utility.yul\":4746:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5410   */\n    tag_57:\n        /* \"#utility.yul\":5140:5146   */\n      0x00\n        /* \"#utility.yul\":5189:5191   */\n      0x20\n        /* \"#utility.yul\":5177:5186   */\n      dup3\n        /* \"#utility.yul\":5168:5175   */\n      dup5\n        /* \"#utility.yul\":5164:5187   */\n      sub\n        /* \"#utility.yul\":5160:5192   */\n      slt\n        /* \"#utility.yul\":5157:5276   */\n      iszero\n      tag_273\n      jumpi\n        /* \"#utility.yul\":5195:5274   */\n      tag_274\n      tag_197\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":5157:5276   */\n    tag_273:\n        /* \"#utility.yul\":5315:5316   */\n      0x00\n        /* \"#utility.yul\":5340:5393   */\n      tag_275\n        /* \"#utility.yul\":5385:5392   */\n      dup5\n        /* \"#utility.yul\":5376:5382   */\n      dup3\n        /* \"#utility.yul\":5365:5374   */\n      dup6\n        /* \"#utility.yul\":5361:5383   */\n      add\n        /* \"#utility.yul\":5340:5393   */\n      tag_202\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":5330:5393   */\n      swap2\n      pop\n        /* \"#utility.yul\":5286:5403   */\n      pop\n        /* \"#utility.yul\":5081:5410   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5416:5534   */\n    tag_211:\n        /* \"#utility.yul\":5503:5527   */\n      tag_277\n        /* \"#utility.yul\":5521:5526   */\n      dup2\n        /* \"#utility.yul\":5503:5527   */\n      tag_200\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":5498:5501   */\n      dup3\n        /* \"#utility.yul\":5491:5528   */\n      mstore\n        /* \"#utility.yul\":5416:5534   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5540:5762   */\n    tag_68:\n        /* \"#utility.yul\":5633:5637   */\n      0x00\n        /* \"#utility.yul\":5671:5673   */\n      0x20\n        /* \"#utility.yul\":5660:5669   */\n      dup3\n        /* \"#utility.yul\":5656:5674   */\n      add\n        /* \"#utility.yul\":5648:5674   */\n      swap1\n      pop\n        /* \"#utility.yul\":5684:5755   */\n      tag_279\n        /* \"#utility.yul\":5752:5753   */\n      0x00\n        /* \"#utility.yul\":5741:5750   */\n      dup4\n        /* \"#utility.yul\":5737:5754   */\n      add\n        /* \"#utility.yul\":5728:5734   */\n      dup5\n        /* \"#utility.yul\":5684:5755   */\n      tag_211\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":5540:5762   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5768:6242   */\n    tag_78:\n        /* \"#utility.yul\":5836:5842   */\n      0x00\n        /* \"#utility.yul\":5844:5850   */\n      0x00\n        /* \"#utility.yul\":5893:5895   */\n      0x40\n        /* \"#utility.yul\":5881:5890   */\n      dup4\n        /* \"#utility.yul\":5872:5879   */\n      dup6\n        /* \"#utility.yul\":5868:5891   */\n      sub\n        /* \"#utility.yul\":5864:5896   */\n      slt\n        /* \"#utility.yul\":5861:5980   */\n      iszero\n      tag_281\n      jumpi\n        /* \"#utility.yul\":5899:5978   */\n      tag_282\n      tag_197\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":5861:5980   */\n    tag_281:\n        /* \"#utility.yul\":6019:6020   */\n      0x00\n        /* \"#utility.yul\":6044:6097   */\n      tag_283\n        /* \"#utility.yul\":6089:6096   */\n      dup6\n        /* \"#utility.yul\":6080:6086   */\n      dup3\n        /* \"#utility.yul\":6069:6078   */\n      dup7\n        /* \"#utility.yul\":6065:6087   */\n      add\n        /* \"#utility.yul\":6044:6097   */\n      tag_202\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":6034:6097   */\n      swap3\n      pop\n        /* \"#utility.yul\":5990:6107   */\n      pop\n        /* \"#utility.yul\":6146:6148   */\n      0x20\n        /* \"#utility.yul\":6172:6225   */\n      tag_284\n        /* \"#utility.yul\":6217:6224   */\n      dup6\n        /* \"#utility.yul\":6208:6214   */\n      dup3\n        /* \"#utility.yul\":6197:6206   */\n      dup7\n        /* \"#utility.yul\":6193:6215   */\n      add\n        /* \"#utility.yul\":6172:6225   */\n      tag_202\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":6162:6225   */\n      swap2\n      pop\n        /* \"#utility.yul\":6117:6235   */\n      pop\n        /* \"#utility.yul\":5768:6242   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6248:6428   */\n    tag_212:\n        /* \"#utility.yul\":6296:6373   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6293:6294   */\n      0x00\n        /* \"#utility.yul\":6286:6374   */\n      mstore\n        /* \"#utility.yul\":6393:6397   */\n      0x22\n        /* \"#utility.yul\":6390:6391   */\n      0x04\n        /* \"#utility.yul\":6383:6398   */\n      mstore\n        /* \"#utility.yul\":6417:6421   */\n      0x24\n        /* \"#utility.yul\":6414:6415   */\n      0x00\n        /* \"#utility.yul\":6407:6422   */\n      revert\n        /* \"#utility.yul\":6434:6754   */\n    tag_86:\n        /* \"#utility.yul\":6478:6484   */\n      0x00\n        /* \"#utility.yul\":6515:6516   */\n      0x02\n        /* \"#utility.yul\":6509:6513   */\n      dup3\n        /* \"#utility.yul\":6505:6517   */\n      div\n        /* \"#utility.yul\":6495:6517   */\n      swap1\n      pop\n        /* \"#utility.yul\":6562:6563   */\n      0x01\n        /* \"#utility.yul\":6556:6560   */\n      dup3\n        /* \"#utility.yul\":6552:6564   */\n      and\n        /* \"#utility.yul\":6583:6601   */\n      dup1\n        /* \"#utility.yul\":6573:6654   */\n      tag_287\n      jumpi\n        /* \"#utility.yul\":6639:6643   */\n      0x7f\n        /* \"#utility.yul\":6631:6637   */\n      dup3\n        /* \"#utility.yul\":6627:6644   */\n      and\n        /* \"#utility.yul\":6617:6644   */\n      swap2\n      pop\n        /* \"#utility.yul\":6573:6654   */\n    tag_287:\n        /* \"#utility.yul\":6701:6703   */\n      0x20\n        /* \"#utility.yul\":6693:6699   */\n      dup3\n        /* \"#utility.yul\":6690:6704   */\n      lt\n        /* \"#utility.yul\":6670:6688   */\n      dup2\n        /* \"#utility.yul\":6667:6705   */\n      sub\n        /* \"#utility.yul\":6664:6748   */\n      tag_288\n      jumpi\n        /* \"#utility.yul\":6720:6738   */\n      tag_289\n      tag_212\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":6664:6748   */\n    tag_288:\n        /* \"#utility.yul\":6485:6754   */\n      pop\n        /* \"#utility.yul\":6434:6754   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6760:7202   */\n    tag_150:\n        /* \"#utility.yul\":6909:6913   */\n      0x00\n        /* \"#utility.yul\":6947:6949   */\n      0x60\n        /* \"#utility.yul\":6936:6945   */\n      dup3\n        /* \"#utility.yul\":6932:6950   */\n      add\n        /* \"#utility.yul\":6924:6950   */\n      swap1\n      pop\n        /* \"#utility.yul\":6960:7031   */\n      tag_291\n        /* \"#utility.yul\":7028:7029   */\n      0x00\n        /* \"#utility.yul\":7017:7026   */\n      dup4\n        /* \"#utility.yul\":7013:7030   */\n      add\n        /* \"#utility.yul\":7004:7010   */\n      dup7\n        /* \"#utility.yul\":6960:7031   */\n      tag_211\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":7041:7113   */\n      tag_292\n        /* \"#utility.yul\":7109:7111   */\n      0x20\n        /* \"#utility.yul\":7098:7107   */\n      dup4\n        /* \"#utility.yul\":7094:7112   */\n      add\n        /* \"#utility.yul\":7085:7091   */\n      dup6\n        /* \"#utility.yul\":7041:7113   */\n      tag_208\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":7123:7195   */\n      tag_293\n        /* \"#utility.yul\":7191:7193   */\n      0x40\n        /* \"#utility.yul\":7180:7189   */\n      dup4\n        /* \"#utility.yul\":7176:7194   */\n      add\n        /* \"#utility.yul\":7167:7173   */\n      dup5\n        /* \"#utility.yul\":7123:7195   */\n      tag_208\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":6760:7202   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7208:7388   */\n    tag_213:\n        /* \"#utility.yul\":7256:7333   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7253:7254   */\n      0x00\n        /* \"#utility.yul\":7246:7334   */\n      mstore\n        /* \"#utility.yul\":7353:7357   */\n      0x11\n        /* \"#utility.yul\":7350:7351   */\n      0x04\n        /* \"#utility.yul\":7343:7358   */\n      mstore\n        /* \"#utility.yul\":7377:7381   */\n      0x24\n        /* \"#utility.yul\":7374:7375   */\n      0x00\n        /* \"#utility.yul\":7367:7382   */\n      revert\n        /* \"#utility.yul\":7394:7585   */\n    tag_184:\n        /* \"#utility.yul\":7434:7437   */\n      0x00\n        /* \"#utility.yul\":7453:7473   */\n      tag_296\n        /* \"#utility.yul\":7471:7472   */\n      dup3\n        /* \"#utility.yul\":7453:7473   */\n      tag_203\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":7448:7473   */\n      swap2\n      pop\n        /* \"#utility.yul\":7487:7507   */\n      tag_297\n        /* \"#utility.yul\":7505:7506   */\n      dup4\n        /* \"#utility.yul\":7487:7507   */\n      tag_203\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":7482:7507   */\n      swap3\n      pop\n        /* \"#utility.yul\":7530:7531   */\n      dup3\n        /* \"#utility.yul\":7527:7528   */\n      dup3\n        /* \"#utility.yul\":7523:7532   */\n      add\n        /* \"#utility.yul\":7516:7532   */\n      swap1\n      pop\n        /* \"#utility.yul\":7551:7554   */\n      dup1\n        /* \"#utility.yul\":7548:7549   */\n      dup3\n        /* \"#utility.yul\":7545:7555   */\n      gt\n        /* \"#utility.yul\":7542:7578   */\n      iszero\n      tag_298\n      jumpi\n        /* \"#utility.yul\":7558:7576   */\n      tag_299\n      tag_213\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":7542:7578   */\n    tag_298:\n        /* \"#utility.yul\":7394:7585   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220729026d98839c94c18fa2c409e1bacef092d0f27030799d8bc7d61be047cc4dd64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_978": {
									"entryPoint": null,
									"id": 978,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 471,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 276,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 604,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1364,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1649,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1429,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1559,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8_fromMemory": {
									"entryPoint": 1508,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8t_uint256t_address_fromMemory": {
									"entryPoint": 1669,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2570,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2706,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2585,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2721,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2774,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1276,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1141,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 1302,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1947,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1844,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2655,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2226,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1610,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1579,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1528,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 1474,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2082,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2363,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1350,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1965,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1899,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2336,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1227,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 2073,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2308,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2610,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1854,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1182,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2115,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1158,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1162,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1154,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1150,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1166,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1980,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2296,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2168,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1992,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2124,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1627,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1537,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 1486,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2161,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11617:7",
										"nodeType": "YulBlock",
										"src": "0:11617:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "423:28:7",
													"nodeType": "YulBlock",
													"src": "423:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:7",
																		"nodeType": "YulLiteral",
																		"src": "440:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:7",
																		"nodeType": "YulLiteral",
																		"src": "443:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:7"
																},
																"nativeSrc": "433:12:7",
																"nodeType": "YulFunctionCall",
																"src": "433:12:7"
															},
															"nativeSrc": "433:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:7"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:7"
											},
											{
												"body": {
													"nativeSrc": "546:28:7",
													"nodeType": "YulBlock",
													"src": "546:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:7",
																		"nodeType": "YulLiteral",
																		"src": "563:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:7",
																		"nodeType": "YulLiteral",
																		"src": "566:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:7"
																},
																"nativeSrc": "556:12:7",
																"nodeType": "YulFunctionCall",
																"src": "556:12:7"
															},
															"nativeSrc": "556:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:7"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:7"
											},
											{
												"body": {
													"nativeSrc": "628:54:7",
													"nodeType": "YulBlock",
													"src": "628:54:7",
													"statements": [
														{
															"nativeSrc": "638:38:7",
															"nodeType": "YulAssignment",
															"src": "638:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:7",
																				"nodeType": "YulLiteral",
																				"src": "663:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:7"
																		},
																		"nativeSrc": "652:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:7",
																				"nodeType": "YulLiteral",
																				"src": "672:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:7"
																		},
																		"nativeSrc": "668:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:7"
																},
																"nativeSrc": "648:28:7",
																"nodeType": "YulFunctionCall",
																"src": "648:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:7",
														"nodeType": "YulTypedName",
														"src": "611:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:7",
														"nodeType": "YulTypedName",
														"src": "621:6:7",
														"type": ""
													}
												],
												"src": "580:102:7"
											},
											{
												"body": {
													"nativeSrc": "716:152:7",
													"nodeType": "YulBlock",
													"src": "716:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:7",
																		"nodeType": "YulLiteral",
																		"src": "733:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:7",
																		"nodeType": "YulLiteral",
																		"src": "736:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:7"
																},
																"nativeSrc": "726:88:7",
																"nodeType": "YulFunctionCall",
																"src": "726:88:7"
															},
															"nativeSrc": "726:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:7",
																		"nodeType": "YulLiteral",
																		"src": "830:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:7",
																		"nodeType": "YulLiteral",
																		"src": "833:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:7"
																},
																"nativeSrc": "823:15:7",
																"nodeType": "YulFunctionCall",
																"src": "823:15:7"
															},
															"nativeSrc": "823:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:7",
																		"nodeType": "YulLiteral",
																		"src": "854:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:7",
																		"nodeType": "YulLiteral",
																		"src": "857:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:7"
																},
																"nativeSrc": "847:15:7",
																"nodeType": "YulFunctionCall",
																"src": "847:15:7"
															},
															"nativeSrc": "847:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:7"
											},
											{
												"body": {
													"nativeSrc": "917:238:7",
													"nodeType": "YulBlock",
													"src": "917:238:7",
													"statements": [
														{
															"nativeSrc": "927:58:7",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:7"
																		},
																		"nativeSrc": "957:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:7"
																},
																"nativeSrc": "945:40:7",
																"nodeType": "YulFunctionCall",
																"src": "945:40:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:7",
																	"nodeType": "YulTypedName",
																	"src": "931:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:7",
																"nodeType": "YulBlock",
																"src": "1096:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:7"
																			},
																			"nativeSrc": "1098:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:7"
																		},
																		"nativeSrc": "1098:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:7",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:7"
																		},
																		"nativeSrc": "1036:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:7"
																		},
																		"nativeSrc": "1072:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:7"
																},
																"nativeSrc": "1033:62:7",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:7"
															},
															"nativeSrc": "1030:88:7",
															"nodeType": "YulIf",
															"src": "1030:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:7"
																},
																"nativeSrc": "1127:22:7",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:7"
															},
															"nativeSrc": "1127:22:7",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:7"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:7",
														"nodeType": "YulTypedName",
														"src": "903:6:7",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:7",
														"nodeType": "YulTypedName",
														"src": "911:4:7",
														"type": ""
													}
												],
												"src": "874:281:7"
											},
											{
												"body": {
													"nativeSrc": "1202:88:7",
													"nodeType": "YulBlock",
													"src": "1202:88:7",
													"statements": [
														{
															"nativeSrc": "1212:30:7",
															"nodeType": "YulAssignment",
															"src": "1212:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:7"
																},
																"nativeSrc": "1222:20:7",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:7"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:7"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:7",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:7"
																},
																"nativeSrc": "1251:33:7",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:7"
															},
															"nativeSrc": "1251:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:7"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:7",
														"nodeType": "YulTypedName",
														"src": "1186:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:7",
														"nodeType": "YulTypedName",
														"src": "1195:6:7",
														"type": ""
													}
												],
												"src": "1161:129:7"
											},
											{
												"body": {
													"nativeSrc": "1363:241:7",
													"nodeType": "YulBlock",
													"src": "1363:241:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:7",
																"nodeType": "YulBlock",
																"src": "1468:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:7"
																			},
																			"nativeSrc": "1470:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:7"
																		},
																		"nativeSrc": "1470:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:7",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:7"
																},
																"nativeSrc": "1437:30:7",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:7"
															},
															"nativeSrc": "1434:56:7",
															"nodeType": "YulIf",
															"src": "1434:56:7"
														},
														{
															"nativeSrc": "1500:37:7",
															"nodeType": "YulAssignment",
															"src": "1500:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:7"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:7",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:7"
																},
																"nativeSrc": "1508:29:7",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:7"
																}
															]
														},
														{
															"nativeSrc": "1574:23:7",
															"nodeType": "YulAssignment",
															"src": "1574:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:7"
																},
																"nativeSrc": "1582:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:7"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:7",
														"nodeType": "YulTypedName",
														"src": "1347:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:7",
														"nodeType": "YulTypedName",
														"src": "1358:4:7",
														"type": ""
													}
												],
												"src": "1296:308:7"
											},
											{
												"body": {
													"nativeSrc": "1672:77:7",
													"nodeType": "YulBlock",
													"src": "1672:77:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1689:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1689:3:7"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1694:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1694:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1699:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1699:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1683:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1683:5:7"
																},
																"nativeSrc": "1683:23:7",
																"nodeType": "YulFunctionCall",
																"src": "1683:23:7"
															},
															"nativeSrc": "1683:23:7",
															"nodeType": "YulExpressionStatement",
															"src": "1683:23:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1726:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "1726:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1731:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1731:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1722:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1722:3:7"
																		},
																		"nativeSrc": "1722:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1722:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1740:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1740:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1715:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1715:6:7"
																},
																"nativeSrc": "1715:27:7",
																"nodeType": "YulFunctionCall",
																"src": "1715:27:7"
															},
															"nativeSrc": "1715:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "1715:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:7",
														"nodeType": "YulTypedName",
														"src": "1654:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:7",
														"nodeType": "YulTypedName",
														"src": "1659:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:7",
														"nodeType": "YulTypedName",
														"src": "1664:6:7",
														"type": ""
													}
												],
												"src": "1610:139:7"
											},
											{
												"body": {
													"nativeSrc": "1850:339:7",
													"nodeType": "YulBlock",
													"src": "1850:339:7",
													"statements": [
														{
															"nativeSrc": "1860:75:7",
															"nodeType": "YulAssignment",
															"src": "1860:75:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1927:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1927:6:7"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1885:41:7",
																			"nodeType": "YulIdentifier",
																			"src": "1885:41:7"
																		},
																		"nativeSrc": "1885:49:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1885:49:7"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1869:15:7",
																	"nodeType": "YulIdentifier",
																	"src": "1869:15:7"
																},
																"nativeSrc": "1869:66:7",
																"nodeType": "YulFunctionCall",
																"src": "1869:66:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1860:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1860:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1951:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1951:5:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1958:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1958:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1944:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1944:6:7"
																},
																"nativeSrc": "1944:21:7",
																"nodeType": "YulFunctionCall",
																"src": "1944:21:7"
															},
															"nativeSrc": "1944:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "1944:21:7"
														},
														{
															"nativeSrc": "1974:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1974:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1989:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1989:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1996:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1996:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1985:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1985:3:7"
																},
																"nativeSrc": "1985:16:7",
																"nodeType": "YulFunctionCall",
																"src": "1985:16:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "1978:3:7",
																	"nodeType": "YulTypedName",
																	"src": "1978:3:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2039:83:7",
																"nodeType": "YulBlock",
																"src": "2039:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2041:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2041:77:7"
																			},
																			"nativeSrc": "2041:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2041:79:7"
																		},
																		"nativeSrc": "2041:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2041:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2020:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2020:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2025:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2025:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2016:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2016:3:7"
																		},
																		"nativeSrc": "2016:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2016:16:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2034:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2034:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2013:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2013:2:7"
																},
																"nativeSrc": "2013:25:7",
																"nodeType": "YulFunctionCall",
																"src": "2013:25:7"
															},
															"nativeSrc": "2010:112:7",
															"nodeType": "YulIf",
															"src": "2010:112:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2166:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:7"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2171:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2171:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2176:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2176:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2131:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "2131:34:7"
																},
																"nativeSrc": "2131:52:7",
																"nodeType": "YulFunctionCall",
																"src": "2131:52:7"
															},
															"nativeSrc": "2131:52:7",
															"nodeType": "YulExpressionStatement",
															"src": "2131:52:7"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1755:434:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1823:3:7",
														"nodeType": "YulTypedName",
														"src": "1823:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1828:6:7",
														"nodeType": "YulTypedName",
														"src": "1828:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1836:3:7",
														"nodeType": "YulTypedName",
														"src": "1836:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1844:5:7",
														"nodeType": "YulTypedName",
														"src": "1844:5:7",
														"type": ""
													}
												],
												"src": "1755:434:7"
											},
											{
												"body": {
													"nativeSrc": "2282:282:7",
													"nodeType": "YulBlock",
													"src": "2282:282:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2331:83:7",
																"nodeType": "YulBlock",
																"src": "2331:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2333:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2333:77:7"
																			},
																			"nativeSrc": "2333:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2333:79:7"
																		},
																		"nativeSrc": "2333:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2333:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2310:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2310:6:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2318:4:7",
																						"nodeType": "YulLiteral",
																						"src": "2318:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2306:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2306:3:7"
																				},
																				"nativeSrc": "2306:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2306:17:7"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2325:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2325:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2302:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2302:3:7"
																		},
																		"nativeSrc": "2302:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2302:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2295:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2295:6:7"
																},
																"nativeSrc": "2295:35:7",
																"nodeType": "YulFunctionCall",
																"src": "2295:35:7"
															},
															"nativeSrc": "2292:122:7",
															"nodeType": "YulIf",
															"src": "2292:122:7"
														},
														{
															"nativeSrc": "2423:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2423:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2443:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2443:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2437:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2437:5:7"
																},
																"nativeSrc": "2437:13:7",
																"nodeType": "YulFunctionCall",
																"src": "2437:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2427:6:7",
																	"nodeType": "YulTypedName",
																	"src": "2427:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2459:99:7",
															"nodeType": "YulAssignment",
															"src": "2459:99:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2531:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2539:4:7",
																				"nodeType": "YulLiteral",
																				"src": "2539:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2527:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2527:3:7"
																		},
																		"nativeSrc": "2527:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2527:17:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2546:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2546:6:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2554:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2554:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2468:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "2468:58:7"
																},
																"nativeSrc": "2468:90:7",
																"nodeType": "YulFunctionCall",
																"src": "2468:90:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2459:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2459:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2209:355:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2260:6:7",
														"nodeType": "YulTypedName",
														"src": "2260:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2268:3:7",
														"nodeType": "YulTypedName",
														"src": "2268:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2276:5:7",
														"nodeType": "YulTypedName",
														"src": "2276:5:7",
														"type": ""
													}
												],
												"src": "2209:355:7"
											},
											{
												"body": {
													"nativeSrc": "2613:43:7",
													"nodeType": "YulBlock",
													"src": "2613:43:7",
													"statements": [
														{
															"nativeSrc": "2623:27:7",
															"nodeType": "YulAssignment",
															"src": "2623:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2638:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2638:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2645:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2645:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2634:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2634:3:7"
																},
																"nativeSrc": "2634:16:7",
																"nodeType": "YulFunctionCall",
																"src": "2634:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2623:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2623:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "2570:86:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2595:5:7",
														"nodeType": "YulTypedName",
														"src": "2595:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2605:7:7",
														"nodeType": "YulTypedName",
														"src": "2605:7:7",
														"type": ""
													}
												],
												"src": "2570:86:7"
											},
											{
												"body": {
													"nativeSrc": "2703:77:7",
													"nodeType": "YulBlock",
													"src": "2703:77:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2758:16:7",
																"nodeType": "YulBlock",
																"src": "2758:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2767:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2767:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2770:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2770:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2760:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2760:6:7"
																			},
																			"nativeSrc": "2760:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2760:12:7"
																		},
																		"nativeSrc": "2760:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2760:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2726:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2726:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2749:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2749:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nativeSrc": "2733:15:7",
																					"nodeType": "YulIdentifier",
																					"src": "2733:15:7"
																				},
																				"nativeSrc": "2733:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2733:22:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2723:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2723:2:7"
																		},
																		"nativeSrc": "2723:33:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2723:33:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2716:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2716:6:7"
																},
																"nativeSrc": "2716:41:7",
																"nodeType": "YulFunctionCall",
																"src": "2716:41:7"
															},
															"nativeSrc": "2713:61:7",
															"nodeType": "YulIf",
															"src": "2713:61:7"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nativeSrc": "2662:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2696:5:7",
														"nodeType": "YulTypedName",
														"src": "2696:5:7",
														"type": ""
													}
												],
												"src": "2662:118:7"
											},
											{
												"body": {
													"nativeSrc": "2847:78:7",
													"nodeType": "YulBlock",
													"src": "2847:78:7",
													"statements": [
														{
															"nativeSrc": "2857:22:7",
															"nodeType": "YulAssignment",
															"src": "2857:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2872:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2872:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2866:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2866:5:7"
																},
																"nativeSrc": "2866:13:7",
																"nodeType": "YulFunctionCall",
																"src": "2866:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2857:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2857:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2913:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2913:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nativeSrc": "2888:24:7",
																	"nodeType": "YulIdentifier",
																	"src": "2888:24:7"
																},
																"nativeSrc": "2888:31:7",
																"nodeType": "YulFunctionCall",
																"src": "2888:31:7"
															},
															"nativeSrc": "2888:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "2888:31:7"
														}
													]
												},
												"name": "abi_decode_t_uint8_fromMemory",
												"nativeSrc": "2786:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2825:6:7",
														"nodeType": "YulTypedName",
														"src": "2825:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2833:3:7",
														"nodeType": "YulTypedName",
														"src": "2833:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2841:5:7",
														"nodeType": "YulTypedName",
														"src": "2841:5:7",
														"type": ""
													}
												],
												"src": "2786:139:7"
											},
											{
												"body": {
													"nativeSrc": "2976:32:7",
													"nodeType": "YulBlock",
													"src": "2976:32:7",
													"statements": [
														{
															"nativeSrc": "2986:16:7",
															"nodeType": "YulAssignment",
															"src": "2986:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "2997:5:7",
																"nodeType": "YulIdentifier",
																"src": "2997:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2986:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2986:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2931:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2958:5:7",
														"nodeType": "YulTypedName",
														"src": "2958:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2968:7:7",
														"nodeType": "YulTypedName",
														"src": "2968:7:7",
														"type": ""
													}
												],
												"src": "2931:77:7"
											},
											{
												"body": {
													"nativeSrc": "3057:79:7",
													"nodeType": "YulBlock",
													"src": "3057:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3114:16:7",
																"nodeType": "YulBlock",
																"src": "3114:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3123:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3123:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3126:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3126:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3116:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3116:6:7"
																			},
																			"nativeSrc": "3116:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3116:12:7"
																		},
																		"nativeSrc": "3116:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3116:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3080:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3080:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3105:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "3105:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3087:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "3087:17:7"
																				},
																				"nativeSrc": "3087:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3087:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3077:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "3077:2:7"
																		},
																		"nativeSrc": "3077:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3077:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3070:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3070:6:7"
																},
																"nativeSrc": "3070:43:7",
																"nodeType": "YulFunctionCall",
																"src": "3070:43:7"
															},
															"nativeSrc": "3067:63:7",
															"nodeType": "YulIf",
															"src": "3067:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3014:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3050:5:7",
														"nodeType": "YulTypedName",
														"src": "3050:5:7",
														"type": ""
													}
												],
												"src": "3014:122:7"
											},
											{
												"body": {
													"nativeSrc": "3205:80:7",
													"nodeType": "YulBlock",
													"src": "3205:80:7",
													"statements": [
														{
															"nativeSrc": "3215:22:7",
															"nodeType": "YulAssignment",
															"src": "3215:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3230:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3230:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3224:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3224:5:7"
																},
																"nativeSrc": "3224:13:7",
																"nodeType": "YulFunctionCall",
																"src": "3224:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3215:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3215:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3273:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3273:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3246:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "3246:26:7"
																},
																"nativeSrc": "3246:33:7",
																"nodeType": "YulFunctionCall",
																"src": "3246:33:7"
															},
															"nativeSrc": "3246:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "3246:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "3142:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3183:6:7",
														"nodeType": "YulTypedName",
														"src": "3183:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3191:3:7",
														"nodeType": "YulTypedName",
														"src": "3191:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3199:5:7",
														"nodeType": "YulTypedName",
														"src": "3199:5:7",
														"type": ""
													}
												],
												"src": "3142:143:7"
											},
											{
												"body": {
													"nativeSrc": "3336:81:7",
													"nodeType": "YulBlock",
													"src": "3336:81:7",
													"statements": [
														{
															"nativeSrc": "3346:65:7",
															"nodeType": "YulAssignment",
															"src": "3346:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3361:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3361:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3368:42:7",
																		"nodeType": "YulLiteral",
																		"src": "3368:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3357:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3357:3:7"
																},
																"nativeSrc": "3357:54:7",
																"nodeType": "YulFunctionCall",
																"src": "3357:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3346:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "3346:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3291:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3318:5:7",
														"nodeType": "YulTypedName",
														"src": "3318:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3328:7:7",
														"nodeType": "YulTypedName",
														"src": "3328:7:7",
														"type": ""
													}
												],
												"src": "3291:126:7"
											},
											{
												"body": {
													"nativeSrc": "3468:51:7",
													"nodeType": "YulBlock",
													"src": "3468:51:7",
													"statements": [
														{
															"nativeSrc": "3478:35:7",
															"nodeType": "YulAssignment",
															"src": "3478:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3507:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3507:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3489:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "3489:17:7"
																},
																"nativeSrc": "3489:24:7",
																"nodeType": "YulFunctionCall",
																"src": "3489:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3478:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "3478:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3423:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3450:5:7",
														"nodeType": "YulTypedName",
														"src": "3450:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3460:7:7",
														"nodeType": "YulTypedName",
														"src": "3460:7:7",
														"type": ""
													}
												],
												"src": "3423:96:7"
											},
											{
												"body": {
													"nativeSrc": "3568:79:7",
													"nodeType": "YulBlock",
													"src": "3568:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3625:16:7",
																"nodeType": "YulBlock",
																"src": "3625:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3634:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3634:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3637:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3637:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3627:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3627:6:7"
																			},
																			"nativeSrc": "3627:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3627:12:7"
																		},
																		"nativeSrc": "3627:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3627:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3591:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3591:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3616:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "3616:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3598:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "3598:17:7"
																				},
																				"nativeSrc": "3598:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3598:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3588:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "3588:2:7"
																		},
																		"nativeSrc": "3588:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3588:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3581:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3581:6:7"
																},
																"nativeSrc": "3581:43:7",
																"nodeType": "YulFunctionCall",
																"src": "3581:43:7"
															},
															"nativeSrc": "3578:63:7",
															"nodeType": "YulIf",
															"src": "3578:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "3525:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3561:5:7",
														"nodeType": "YulTypedName",
														"src": "3561:5:7",
														"type": ""
													}
												],
												"src": "3525:122:7"
											},
											{
												"body": {
													"nativeSrc": "3716:80:7",
													"nodeType": "YulBlock",
													"src": "3716:80:7",
													"statements": [
														{
															"nativeSrc": "3726:22:7",
															"nodeType": "YulAssignment",
															"src": "3726:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3741:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3741:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3735:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3735:5:7"
																},
																"nativeSrc": "3735:13:7",
																"nodeType": "YulFunctionCall",
																"src": "3735:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3726:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3726:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3784:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3784:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3757:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "3757:26:7"
																},
																"nativeSrc": "3757:33:7",
																"nodeType": "YulFunctionCall",
																"src": "3757:33:7"
															},
															"nativeSrc": "3757:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "3757:33:7"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "3653:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3694:6:7",
														"nodeType": "YulTypedName",
														"src": "3694:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3702:3:7",
														"nodeType": "YulTypedName",
														"src": "3702:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3710:5:7",
														"nodeType": "YulTypedName",
														"src": "3710:5:7",
														"type": ""
													}
												],
												"src": "3653:143:7"
											},
											{
												"body": {
													"nativeSrc": "3965:1156:7",
													"nodeType": "YulBlock",
													"src": "3965:1156:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4012:83:7",
																"nodeType": "YulBlock",
																"src": "4012:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4014:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "4014:77:7"
																			},
																			"nativeSrc": "4014:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4014:79:7"
																		},
																		"nativeSrc": "4014:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4014:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3986:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3986:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3995:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3995:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3982:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3982:3:7"
																		},
																		"nativeSrc": "3982:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3982:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4007:3:7",
																		"nodeType": "YulLiteral",
																		"src": "4007:3:7",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3978:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3978:3:7"
																},
																"nativeSrc": "3978:33:7",
																"nodeType": "YulFunctionCall",
																"src": "3978:33:7"
															},
															"nativeSrc": "3975:120:7",
															"nodeType": "YulIf",
															"src": "3975:120:7"
														},
														{
															"nativeSrc": "4105:291:7",
															"nodeType": "YulBlock",
															"src": "4105:291:7",
															"statements": [
																{
																	"nativeSrc": "4120:38:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4120:38:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4144:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4144:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4155:1:7",
																						"nodeType": "YulLiteral",
																						"src": "4155:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4140:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4140:3:7"
																				},
																				"nativeSrc": "4140:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4140:17:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4134:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "4134:5:7"
																		},
																		"nativeSrc": "4134:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4134:24:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4124:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4124:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "4205:83:7",
																		"nodeType": "YulBlock",
																		"src": "4205:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "4207:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "4207:77:7"
																					},
																					"nativeSrc": "4207:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4207:79:7"
																				},
																				"nativeSrc": "4207:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "4207:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4177:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4177:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4185:18:7",
																				"nodeType": "YulLiteral",
																				"src": "4185:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4174:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "4174:2:7"
																		},
																		"nativeSrc": "4174:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4174:30:7"
																	},
																	"nativeSrc": "4171:117:7",
																	"nodeType": "YulIf",
																	"src": "4171:117:7"
																},
																{
																	"nativeSrc": "4302:84:7",
																	"nodeType": "YulAssignment",
																	"src": "4302:84:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4358:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4358:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4369:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4369:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4354:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4354:3:7"
																				},
																				"nativeSrc": "4354:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4354:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4378:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4378:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "4312:41:7",
																			"nodeType": "YulIdentifier",
																			"src": "4312:41:7"
																		},
																		"nativeSrc": "4312:74:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4312:74:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4302:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4302:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4406:292:7",
															"nodeType": "YulBlock",
															"src": "4406:292:7",
															"statements": [
																{
																	"nativeSrc": "4421:39:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4421:39:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4445:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4445:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4456:2:7",
																						"nodeType": "YulLiteral",
																						"src": "4456:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4441:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4441:3:7"
																				},
																				"nativeSrc": "4441:18:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4441:18:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4435:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "4435:5:7"
																		},
																		"nativeSrc": "4435:25:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4435:25:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4425:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4425:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "4507:83:7",
																		"nodeType": "YulBlock",
																		"src": "4507:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "4509:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "4509:77:7"
																					},
																					"nativeSrc": "4509:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4509:79:7"
																				},
																				"nativeSrc": "4509:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "4509:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4479:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4479:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4487:18:7",
																				"nodeType": "YulLiteral",
																				"src": "4487:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4476:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "4476:2:7"
																		},
																		"nativeSrc": "4476:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4476:30:7"
																	},
																	"nativeSrc": "4473:117:7",
																	"nodeType": "YulIf",
																	"src": "4473:117:7"
																},
																{
																	"nativeSrc": "4604:84:7",
																	"nodeType": "YulAssignment",
																	"src": "4604:84:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4660:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4660:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4671:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4671:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4656:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4656:3:7"
																				},
																				"nativeSrc": "4656:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4656:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4680:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4680:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "4614:41:7",
																			"nodeType": "YulIdentifier",
																			"src": "4614:41:7"
																		},
																		"nativeSrc": "4614:74:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4614:74:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4604:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4604:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4708:127:7",
															"nodeType": "YulBlock",
															"src": "4708:127:7",
															"statements": [
																{
																	"nativeSrc": "4723:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4723:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4737:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4737:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4727:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4727:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4753:72:7",
																	"nodeType": "YulAssignment",
																	"src": "4753:72:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4797:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4797:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4808:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4808:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4793:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4793:3:7"
																				},
																				"nativeSrc": "4793:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4793:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4817:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4817:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8_fromMemory",
																			"nativeSrc": "4763:29:7",
																			"nodeType": "YulIdentifier",
																			"src": "4763:29:7"
																		},
																		"nativeSrc": "4763:62:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4763:62:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4753:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4753:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4845:129:7",
															"nodeType": "YulBlock",
															"src": "4845:129:7",
															"statements": [
																{
																	"nativeSrc": "4860:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4860:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4874:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4874:2:7",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4864:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4864:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4890:74:7",
																	"nodeType": "YulAssignment",
																	"src": "4890:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4936:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4936:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4947:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4947:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4932:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4932:3:7"
																				},
																				"nativeSrc": "4932:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4932:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4956:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4956:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "4900:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "4900:31:7"
																		},
																		"nativeSrc": "4900:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4900:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "4890:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4890:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4984:130:7",
															"nodeType": "YulBlock",
															"src": "4984:130:7",
															"statements": [
																{
																	"nativeSrc": "4999:17:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4999:17:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5013:3:7",
																		"nodeType": "YulLiteral",
																		"src": "5013:3:7",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5003:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5003:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5030:74:7",
																	"nodeType": "YulAssignment",
																	"src": "5030:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5076:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5076:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5087:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5087:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5072:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5072:3:7"
																				},
																				"nativeSrc": "5072:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5072:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5096:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5096:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "5040:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "5040:31:7"
																		},
																		"nativeSrc": "5040:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5040:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "5030:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5030:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8t_uint256t_address_fromMemory",
												"nativeSrc": "3802:1319:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3903:9:7",
														"nodeType": "YulTypedName",
														"src": "3903:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3914:7:7",
														"nodeType": "YulTypedName",
														"src": "3914:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3926:6:7",
														"nodeType": "YulTypedName",
														"src": "3926:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3934:6:7",
														"nodeType": "YulTypedName",
														"src": "3934:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3942:6:7",
														"nodeType": "YulTypedName",
														"src": "3942:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3950:6:7",
														"nodeType": "YulTypedName",
														"src": "3950:6:7",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "3958:6:7",
														"nodeType": "YulTypedName",
														"src": "3958:6:7",
														"type": ""
													}
												],
												"src": "3802:1319:7"
											},
											{
												"body": {
													"nativeSrc": "5186:40:7",
													"nodeType": "YulBlock",
													"src": "5186:40:7",
													"statements": [
														{
															"nativeSrc": "5197:22:7",
															"nodeType": "YulAssignment",
															"src": "5197:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5213:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5213:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5207:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "5207:5:7"
																},
																"nativeSrc": "5207:12:7",
																"nodeType": "YulFunctionCall",
																"src": "5207:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5197:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5197:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "5127:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5169:5:7",
														"nodeType": "YulTypedName",
														"src": "5169:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5179:6:7",
														"nodeType": "YulTypedName",
														"src": "5179:6:7",
														"type": ""
													}
												],
												"src": "5127:99:7"
											},
											{
												"body": {
													"nativeSrc": "5260:152:7",
													"nodeType": "YulBlock",
													"src": "5260:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5277:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5277:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5280:77:7",
																		"nodeType": "YulLiteral",
																		"src": "5280:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5270:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5270:6:7"
																},
																"nativeSrc": "5270:88:7",
																"nodeType": "YulFunctionCall",
																"src": "5270:88:7"
															},
															"nativeSrc": "5270:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "5270:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5374:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5374:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5377:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5377:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5367:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5367:6:7"
																},
																"nativeSrc": "5367:15:7",
																"nodeType": "YulFunctionCall",
																"src": "5367:15:7"
															},
															"nativeSrc": "5367:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "5367:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5398:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5398:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5401:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5401:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5391:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5391:6:7"
																},
																"nativeSrc": "5391:15:7",
																"nodeType": "YulFunctionCall",
																"src": "5391:15:7"
															},
															"nativeSrc": "5391:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "5391:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "5232:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "5232:180:7"
											},
											{
												"body": {
													"nativeSrc": "5469:269:7",
													"nodeType": "YulBlock",
													"src": "5469:269:7",
													"statements": [
														{
															"nativeSrc": "5479:22:7",
															"nodeType": "YulAssignment",
															"src": "5479:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5493:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5493:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5499:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5499:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5489:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5489:3:7"
																},
																"nativeSrc": "5489:12:7",
																"nodeType": "YulFunctionCall",
																"src": "5489:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5479:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5479:6:7"
																}
															]
														},
														{
															"nativeSrc": "5510:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5510:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5540:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5540:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5546:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5546:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5536:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5536:3:7"
																},
																"nativeSrc": "5536:12:7",
																"nodeType": "YulFunctionCall",
																"src": "5536:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "5514:18:7",
																	"nodeType": "YulTypedName",
																	"src": "5514:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5587:51:7",
																"nodeType": "YulBlock",
																"src": "5587:51:7",
																"statements": [
																	{
																		"nativeSrc": "5601:27:7",
																		"nodeType": "YulAssignment",
																		"src": "5601:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "5615:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "5615:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5623:4:7",
																					"nodeType": "YulLiteral",
																					"src": "5623:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "5611:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "5611:3:7"
																			},
																			"nativeSrc": "5611:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5611:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "5601:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5601:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5567:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "5567:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5560:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5560:6:7"
																},
																"nativeSrc": "5560:26:7",
																"nodeType": "YulFunctionCall",
																"src": "5560:26:7"
															},
															"nativeSrc": "5557:81:7",
															"nodeType": "YulIf",
															"src": "5557:81:7"
														},
														{
															"body": {
																"nativeSrc": "5690:42:7",
																"nodeType": "YulBlock",
																"src": "5690:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "5704:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "5704:16:7"
																			},
																			"nativeSrc": "5704:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5704:18:7"
																		},
																		"nativeSrc": "5704:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5704:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5654:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "5654:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5677:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5677:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5685:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5685:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5674:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "5674:2:7"
																		},
																		"nativeSrc": "5674:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5674:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "5651:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5651:2:7"
																},
																"nativeSrc": "5651:38:7",
																"nodeType": "YulFunctionCall",
																"src": "5651:38:7"
															},
															"nativeSrc": "5648:84:7",
															"nodeType": "YulIf",
															"src": "5648:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "5418:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5453:4:7",
														"nodeType": "YulTypedName",
														"src": "5453:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5462:6:7",
														"nodeType": "YulTypedName",
														"src": "5462:6:7",
														"type": ""
													}
												],
												"src": "5418:320:7"
											},
											{
												"body": {
													"nativeSrc": "5798:87:7",
													"nodeType": "YulBlock",
													"src": "5798:87:7",
													"statements": [
														{
															"nativeSrc": "5808:11:7",
															"nodeType": "YulAssignment",
															"src": "5808:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "5816:3:7",
																"nodeType": "YulIdentifier",
																"src": "5816:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5808:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5808:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5836:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5836:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "5839:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5839:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5829:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5829:6:7"
																},
																"nativeSrc": "5829:14:7",
																"nodeType": "YulFunctionCall",
																"src": "5829:14:7"
															},
															"nativeSrc": "5829:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "5829:14:7"
														},
														{
															"nativeSrc": "5852:26:7",
															"nodeType": "YulAssignment",
															"src": "5852:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5870:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5870:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5873:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5873:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "5860:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "5860:9:7"
																},
																"nativeSrc": "5860:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5860:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5852:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5852:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "5744:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "5785:3:7",
														"nodeType": "YulTypedName",
														"src": "5785:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "5793:4:7",
														"nodeType": "YulTypedName",
														"src": "5793:4:7",
														"type": ""
													}
												],
												"src": "5744:141:7"
											},
											{
												"body": {
													"nativeSrc": "5935:49:7",
													"nodeType": "YulBlock",
													"src": "5935:49:7",
													"statements": [
														{
															"nativeSrc": "5945:33:7",
															"nodeType": "YulAssignment",
															"src": "5945:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5963:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5963:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5970:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5970:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5959:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5959:3:7"
																		},
																		"nativeSrc": "5959:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5959:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5975:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5975:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5955:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5955:3:7"
																},
																"nativeSrc": "5955:23:7",
																"nodeType": "YulFunctionCall",
																"src": "5955:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5945:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5945:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "5891:93:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5918:5:7",
														"nodeType": "YulTypedName",
														"src": "5918:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5928:6:7",
														"nodeType": "YulTypedName",
														"src": "5928:6:7",
														"type": ""
													}
												],
												"src": "5891:93:7"
											},
											{
												"body": {
													"nativeSrc": "6043:54:7",
													"nodeType": "YulBlock",
													"src": "6043:54:7",
													"statements": [
														{
															"nativeSrc": "6053:37:7",
															"nodeType": "YulAssignment",
															"src": "6053:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "6078:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6078:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "6084:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6084:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "6074:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6074:3:7"
																},
																"nativeSrc": "6074:16:7",
																"nodeType": "YulFunctionCall",
																"src": "6074:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "6053:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "6053:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "5990:107:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "6018:4:7",
														"nodeType": "YulTypedName",
														"src": "6018:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "6024:5:7",
														"nodeType": "YulTypedName",
														"src": "6024:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "6034:8:7",
														"nodeType": "YulTypedName",
														"src": "6034:8:7",
														"type": ""
													}
												],
												"src": "5990:107:7"
											},
											{
												"body": {
													"nativeSrc": "6179:317:7",
													"nodeType": "YulBlock",
													"src": "6179:317:7",
													"statements": [
														{
															"nativeSrc": "6189:35:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6189:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "6210:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "6210:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6222:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6222:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "6206:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6206:3:7"
																},
																"nativeSrc": "6206:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6206:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "6193:9:7",
																	"nodeType": "YulTypedName",
																	"src": "6193:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6233:109:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6233:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "6264:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6264:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6275:66:7",
																		"nodeType": "YulLiteral",
																		"src": "6275:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "6245:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "6245:18:7"
																},
																"nativeSrc": "6245:97:7",
																"nodeType": "YulFunctionCall",
																"src": "6245:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "6237:4:7",
																	"nodeType": "YulTypedName",
																	"src": "6237:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6351:51:7",
															"nodeType": "YulAssignment",
															"src": "6351:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "6382:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6382:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "6393:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "6393:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "6363:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "6363:18:7"
																},
																"nativeSrc": "6363:39:7",
																"nodeType": "YulFunctionCall",
																"src": "6363:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "6351:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "6351:8:7"
																}
															]
														},
														{
															"nativeSrc": "6411:30:7",
															"nodeType": "YulAssignment",
															"src": "6411:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6424:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6424:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "6435:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "6435:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "6431:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6431:3:7"
																		},
																		"nativeSrc": "6431:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6431:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6420:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6420:3:7"
																},
																"nativeSrc": "6420:21:7",
																"nodeType": "YulFunctionCall",
																"src": "6420:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6411:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "6411:5:7"
																}
															]
														},
														{
															"nativeSrc": "6450:40:7",
															"nodeType": "YulAssignment",
															"src": "6450:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6463:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6463:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "6474:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "6474:8:7"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "6484:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "6484:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6470:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6470:3:7"
																		},
																		"nativeSrc": "6470:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6470:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6460:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6460:2:7"
																},
																"nativeSrc": "6460:30:7",
																"nodeType": "YulFunctionCall",
																"src": "6460:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "6450:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6450:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "6103:393:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6140:5:7",
														"nodeType": "YulTypedName",
														"src": "6140:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "6147:10:7",
														"nodeType": "YulTypedName",
														"src": "6147:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "6159:8:7",
														"nodeType": "YulTypedName",
														"src": "6159:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "6172:6:7",
														"nodeType": "YulTypedName",
														"src": "6172:6:7",
														"type": ""
													}
												],
												"src": "6103:393:7"
											},
											{
												"body": {
													"nativeSrc": "6534:28:7",
													"nodeType": "YulBlock",
													"src": "6534:28:7",
													"statements": [
														{
															"nativeSrc": "6544:12:7",
															"nodeType": "YulAssignment",
															"src": "6544:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "6551:5:7",
																"nodeType": "YulIdentifier",
																"src": "6551:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6544:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6544:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "6502:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6520:5:7",
														"nodeType": "YulTypedName",
														"src": "6520:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6530:3:7",
														"nodeType": "YulTypedName",
														"src": "6530:3:7",
														"type": ""
													}
												],
												"src": "6502:60:7"
											},
											{
												"body": {
													"nativeSrc": "6628:82:7",
													"nodeType": "YulBlock",
													"src": "6628:82:7",
													"statements": [
														{
															"nativeSrc": "6638:66:7",
															"nodeType": "YulAssignment",
															"src": "6638:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6696:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "6696:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "6678:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "6678:17:7"
																				},
																				"nativeSrc": "6678:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6678:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "6669:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "6669:8:7"
																		},
																		"nativeSrc": "6669:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6669:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6651:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "6651:17:7"
																},
																"nativeSrc": "6651:53:7",
																"nodeType": "YulFunctionCall",
																"src": "6651:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6638:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "6638:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "6568:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6608:5:7",
														"nodeType": "YulTypedName",
														"src": "6608:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6618:9:7",
														"nodeType": "YulTypedName",
														"src": "6618:9:7",
														"type": ""
													}
												],
												"src": "6568:142:7"
											},
											{
												"body": {
													"nativeSrc": "6763:28:7",
													"nodeType": "YulBlock",
													"src": "6763:28:7",
													"statements": [
														{
															"nativeSrc": "6773:12:7",
															"nodeType": "YulAssignment",
															"src": "6773:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "6780:5:7",
																"nodeType": "YulIdentifier",
																"src": "6780:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6773:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6773:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "6716:75:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6749:5:7",
														"nodeType": "YulTypedName",
														"src": "6749:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6759:3:7",
														"nodeType": "YulTypedName",
														"src": "6759:3:7",
														"type": ""
													}
												],
												"src": "6716:75:7"
											},
											{
												"body": {
													"nativeSrc": "6873:193:7",
													"nodeType": "YulBlock",
													"src": "6873:193:7",
													"statements": [
														{
															"nativeSrc": "6883:63:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6883:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "6938:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "6938:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "6907:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "6907:30:7"
																},
																"nativeSrc": "6907:39:7",
																"nodeType": "YulFunctionCall",
																"src": "6907:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "6887:16:7",
																	"nodeType": "YulTypedName",
																	"src": "6887:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6962:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6962:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "7002:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "7002:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "6996:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "6996:5:7"
																				},
																				"nativeSrc": "6996:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6996:11:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "7009:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7009:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "7041:16:7",
																						"nodeType": "YulIdentifier",
																						"src": "7041:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "7017:23:7",
																					"nodeType": "YulIdentifier",
																					"src": "7017:23:7"
																				},
																				"nativeSrc": "7017:41:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7017:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "6968:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "6968:27:7"
																		},
																		"nativeSrc": "6968:91:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6968:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "6955:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6955:6:7"
																},
																"nativeSrc": "6955:105:7",
																"nodeType": "YulFunctionCall",
																"src": "6955:105:7"
															},
															"nativeSrc": "6955:105:7",
															"nodeType": "YulExpressionStatement",
															"src": "6955:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "6797:269:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6850:4:7",
														"nodeType": "YulTypedName",
														"src": "6850:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6856:6:7",
														"nodeType": "YulTypedName",
														"src": "6856:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "6864:7:7",
														"nodeType": "YulTypedName",
														"src": "6864:7:7",
														"type": ""
													}
												],
												"src": "6797:269:7"
											},
											{
												"body": {
													"nativeSrc": "7121:24:7",
													"nodeType": "YulBlock",
													"src": "7121:24:7",
													"statements": [
														{
															"nativeSrc": "7131:8:7",
															"nodeType": "YulAssignment",
															"src": "7131:8:7",
															"value": {
																"kind": "number",
																"nativeSrc": "7138:1:7",
																"nodeType": "YulLiteral",
																"src": "7138:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "7131:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7131:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "7072:73:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "7117:3:7",
														"nodeType": "YulTypedName",
														"src": "7117:3:7",
														"type": ""
													}
												],
												"src": "7072:73:7"
											},
											{
												"body": {
													"nativeSrc": "7204:136:7",
													"nodeType": "YulBlock",
													"src": "7204:136:7",
													"statements": [
														{
															"nativeSrc": "7214:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7214:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "7228:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "7228:30:7"
																},
																"nativeSrc": "7228:32:7",
																"nodeType": "YulFunctionCall",
																"src": "7228:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "7218:6:7",
																	"nodeType": "YulTypedName",
																	"src": "7218:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "7313:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7313:4:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "7319:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7319:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "7327:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7327:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "7269:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7269:43:7"
																},
																"nativeSrc": "7269:65:7",
																"nodeType": "YulFunctionCall",
																"src": "7269:65:7"
															},
															"nativeSrc": "7269:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "7269:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "7151:189:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7190:4:7",
														"nodeType": "YulTypedName",
														"src": "7190:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "7196:6:7",
														"nodeType": "YulTypedName",
														"src": "7196:6:7",
														"type": ""
													}
												],
												"src": "7151:189:7"
											},
											{
												"body": {
													"nativeSrc": "7396:136:7",
													"nodeType": "YulBlock",
													"src": "7396:136:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7463:63:7",
																"nodeType": "YulBlock",
																"src": "7463:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "7507:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "7507:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7514:1:7",
																					"nodeType": "YulLiteral",
																					"src": "7514:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "7477:29:7",
																				"nodeType": "YulIdentifier",
																				"src": "7477:29:7"
																			},
																			"nativeSrc": "7477:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7477:39:7"
																		},
																		"nativeSrc": "7477:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7477:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "7416:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7416:5:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7423:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7423:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "7413:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7413:2:7"
																},
																"nativeSrc": "7413:14:7",
																"nodeType": "YulFunctionCall",
																"src": "7413:14:7"
															},
															"nativeSrc": "7406:120:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7428:26:7",
																"nodeType": "YulBlock",
																"src": "7428:26:7",
																"statements": [
																	{
																		"nativeSrc": "7430:22:7",
																		"nodeType": "YulAssignment",
																		"src": "7430:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "7443:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "7443:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7450:1:7",
																					"nodeType": "YulLiteral",
																					"src": "7450:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7439:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "7439:3:7"
																			},
																			"nativeSrc": "7439:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7439:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "7430:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "7430:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "7410:2:7",
																"nodeType": "YulBlock",
																"src": "7410:2:7",
																"statements": []
															},
															"src": "7406:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "7346:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "7384:5:7",
														"nodeType": "YulTypedName",
														"src": "7384:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7391:3:7",
														"nodeType": "YulTypedName",
														"src": "7391:3:7",
														"type": ""
													}
												],
												"src": "7346:186:7"
											},
											{
												"body": {
													"nativeSrc": "7617:464:7",
													"nodeType": "YulBlock",
													"src": "7617:464:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7643:431:7",
																"nodeType": "YulBlock",
																"src": "7643:431:7",
																"statements": [
																	{
																		"nativeSrc": "7657:54:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7657:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "7705:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "7705:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "7673:31:7",
																				"nodeType": "YulIdentifier",
																				"src": "7673:31:7"
																			},
																			"nativeSrc": "7673:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7673:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "7661:8:7",
																				"nodeType": "YulTypedName",
																				"src": "7661:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "7724:63:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7724:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "7747:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "7747:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "7775:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "7775:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "7757:17:7",
																						"nodeType": "YulIdentifier",
																						"src": "7757:17:7"
																					},
																					"nativeSrc": "7757:29:7",
																					"nodeType": "YulFunctionCall",
																					"src": "7757:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7743:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "7743:3:7"
																			},
																			"nativeSrc": "7743:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7743:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "7728:11:7",
																				"nodeType": "YulTypedName",
																				"src": "7728:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "7944:27:7",
																			"nodeType": "YulBlock",
																			"src": "7944:27:7",
																			"statements": [
																				{
																					"nativeSrc": "7946:23:7",
																					"nodeType": "YulAssignment",
																					"src": "7946:23:7",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "7961:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "7961:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "7946:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "7946:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "7928:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "7928:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7940:2:7",
																					"nodeType": "YulLiteral",
																					"src": "7940:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "7925:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "7925:2:7"
																			},
																			"nativeSrc": "7925:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7925:18:7"
																		},
																		"nativeSrc": "7922:49:7",
																		"nodeType": "YulIf",
																		"src": "7922:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "8013:11:7",
																					"nodeType": "YulIdentifier",
																					"src": "8013:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "8030:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "8030:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "8058:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "8058:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "8040:17:7",
																								"nodeType": "YulIdentifier",
																								"src": "8040:17:7"
																							},
																							"nativeSrc": "8040:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "8040:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "8026:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "8026:3:7"
																					},
																					"nativeSrc": "8026:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8026:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "7984:28:7",
																				"nodeType": "YulIdentifier",
																				"src": "7984:28:7"
																			},
																			"nativeSrc": "7984:80:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7984:80:7"
																		},
																		"nativeSrc": "7984:80:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7984:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "7634:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7634:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7639:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7639:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7631:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7631:2:7"
																},
																"nativeSrc": "7631:11:7",
																"nodeType": "YulFunctionCall",
																"src": "7631:11:7"
															},
															"nativeSrc": "7628:446:7",
															"nodeType": "YulIf",
															"src": "7628:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "7538:543:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "7593:5:7",
														"nodeType": "YulTypedName",
														"src": "7593:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7600:3:7",
														"nodeType": "YulTypedName",
														"src": "7600:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "7605:10:7",
														"nodeType": "YulTypedName",
														"src": "7605:10:7",
														"type": ""
													}
												],
												"src": "7538:543:7"
											},
											{
												"body": {
													"nativeSrc": "8150:54:7",
													"nodeType": "YulBlock",
													"src": "8150:54:7",
													"statements": [
														{
															"nativeSrc": "8160:37:7",
															"nodeType": "YulAssignment",
															"src": "8160:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "8185:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8185:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "8191:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "8191:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "8181:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8181:3:7"
																},
																"nativeSrc": "8181:16:7",
																"nodeType": "YulFunctionCall",
																"src": "8181:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "8160:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "8160:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "8087:117:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "8125:4:7",
														"nodeType": "YulTypedName",
														"src": "8125:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "8131:5:7",
														"nodeType": "YulTypedName",
														"src": "8131:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "8141:8:7",
														"nodeType": "YulTypedName",
														"src": "8141:8:7",
														"type": ""
													}
												],
												"src": "8087:117:7"
											},
											{
												"body": {
													"nativeSrc": "8261:118:7",
													"nodeType": "YulBlock",
													"src": "8261:118:7",
													"statements": [
														{
															"nativeSrc": "8271:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8271:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "8320:1:7",
																						"nodeType": "YulLiteral",
																						"src": "8320:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "8323:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "8323:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "8316:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8316:3:7"
																				},
																				"nativeSrc": "8316:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8316:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "8335:1:7",
																						"nodeType": "YulLiteral",
																						"src": "8335:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "8331:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8331:3:7"
																				},
																				"nativeSrc": "8331:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8331:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "8287:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "8287:28:7"
																		},
																		"nativeSrc": "8287:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8287:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "8283:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8283:3:7"
																},
																"nativeSrc": "8283:56:7",
																"nodeType": "YulFunctionCall",
																"src": "8283:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "8275:4:7",
																	"nodeType": "YulTypedName",
																	"src": "8275:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8348:25:7",
															"nodeType": "YulAssignment",
															"src": "8348:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8362:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8362:4:7"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "8368:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8368:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8358:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8358:3:7"
																},
																"nativeSrc": "8358:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8358:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "8348:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8348:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "8210:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8238:4:7",
														"nodeType": "YulTypedName",
														"src": "8238:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "8244:5:7",
														"nodeType": "YulTypedName",
														"src": "8244:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "8254:6:7",
														"nodeType": "YulTypedName",
														"src": "8254:6:7",
														"type": ""
													}
												],
												"src": "8210:169:7"
											},
											{
												"body": {
													"nativeSrc": "8465:214:7",
													"nodeType": "YulBlock",
													"src": "8465:214:7",
													"statements": [
														{
															"nativeSrc": "8598:37:7",
															"nodeType": "YulAssignment",
															"src": "8598:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8625:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8625:4:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "8631:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8631:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "8606:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "8606:18:7"
																},
																"nativeSrc": "8606:29:7",
																"nodeType": "YulFunctionCall",
																"src": "8606:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "8598:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8598:4:7"
																}
															]
														},
														{
															"nativeSrc": "8644:29:7",
															"nodeType": "YulAssignment",
															"src": "8644:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8655:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8655:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8665:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8665:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "8668:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "8668:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "8661:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8661:3:7"
																		},
																		"nativeSrc": "8661:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8661:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8652:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8652:2:7"
																},
																"nativeSrc": "8652:21:7",
																"nodeType": "YulFunctionCall",
																"src": "8652:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "8644:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8644:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "8384:295:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8446:4:7",
														"nodeType": "YulTypedName",
														"src": "8446:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "8452:3:7",
														"nodeType": "YulTypedName",
														"src": "8452:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "8460:4:7",
														"nodeType": "YulTypedName",
														"src": "8460:4:7",
														"type": ""
													}
												],
												"src": "8384:295:7"
											},
											{
												"body": {
													"nativeSrc": "8776:1303:7",
													"nodeType": "YulBlock",
													"src": "8776:1303:7",
													"statements": [
														{
															"nativeSrc": "8787:51:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8787:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8834:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8834:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "8801:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "8801:32:7"
																},
																"nativeSrc": "8801:37:7",
																"nodeType": "YulFunctionCall",
																"src": "8801:37:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "8791:6:7",
																	"nodeType": "YulTypedName",
																	"src": "8791:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8923:22:7",
																"nodeType": "YulBlock",
																"src": "8923:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8925:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "8925:16:7"
																			},
																			"nativeSrc": "8925:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8925:18:7"
																		},
																		"nativeSrc": "8925:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8925:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8895:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8895:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8903:18:7",
																		"nodeType": "YulLiteral",
																		"src": "8903:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8892:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8892:2:7"
																},
																"nativeSrc": "8892:30:7",
																"nodeType": "YulFunctionCall",
																"src": "8892:30:7"
															},
															"nativeSrc": "8889:56:7",
															"nodeType": "YulIf",
															"src": "8889:56:7"
														},
														{
															"nativeSrc": "8955:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8955:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "9001:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "9001:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "8995:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "8995:5:7"
																		},
																		"nativeSrc": "8995:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8995:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "8969:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "8969:25:7"
																},
																"nativeSrc": "8969:38:7",
																"nodeType": "YulFunctionCall",
																"src": "8969:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "8959:6:7",
																	"nodeType": "YulTypedName",
																	"src": "8959:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "9100:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "9100:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "9106:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9106:6:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "9114:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9114:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "9054:45:7",
																	"nodeType": "YulIdentifier",
																	"src": "9054:45:7"
																},
																"nativeSrc": "9054:67:7",
																"nodeType": "YulFunctionCall",
																"src": "9054:67:7"
															},
															"nativeSrc": "9054:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "9054:67:7"
														},
														{
															"nativeSrc": "9131:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "9131:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "9148:1:7",
																"nodeType": "YulLiteral",
																"src": "9148:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "9135:9:7",
																	"nodeType": "YulTypedName",
																	"src": "9135:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9159:17:7",
															"nodeType": "YulAssignment",
															"src": "9159:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "9172:4:7",
																"nodeType": "YulLiteral",
																"src": "9172:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "9159:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "9159:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "9223:611:7",
																		"nodeType": "YulBlock",
																		"src": "9223:611:7",
																		"statements": [
																			{
																				"nativeSrc": "9237:37:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9237:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "9256:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "9256:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "9268:4:7",
																									"nodeType": "YulLiteral",
																									"src": "9268:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "9264:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "9264:3:7"
																							},
																							"nativeSrc": "9264:9:7",
																							"nodeType": "YulFunctionCall",
																							"src": "9264:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "9252:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "9252:3:7"
																					},
																					"nativeSrc": "9252:22:7",
																					"nodeType": "YulFunctionCall",
																					"src": "9252:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "9241:7:7",
																						"nodeType": "YulTypedName",
																						"src": "9241:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "9288:51:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9288:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9334:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "9334:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "9302:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "9302:31:7"
																					},
																					"nativeSrc": "9302:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "9302:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "9292:6:7",
																						"nodeType": "YulTypedName",
																						"src": "9292:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "9352:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9352:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9361:1:7",
																					"nodeType": "YulLiteral",
																					"src": "9361:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "9356:1:7",
																						"nodeType": "YulTypedName",
																						"src": "9356:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9420:163:7",
																					"nodeType": "YulBlock",
																					"src": "9420:163:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9445:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "9445:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "9463:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "9463:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "9468:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "9468:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "9459:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "9459:3:7"
																												},
																												"nativeSrc": "9459:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "9459:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "9453:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "9453:5:7"
																										},
																										"nativeSrc": "9453:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "9453:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "9438:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "9438:6:7"
																								},
																								"nativeSrc": "9438:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "9438:42:7"
																							},
																							"nativeSrc": "9438:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "9438:42:7"
																						},
																						{
																							"nativeSrc": "9497:24:7",
																							"nodeType": "YulAssignment",
																							"src": "9497:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9511:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "9511:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9519:1:7",
																										"nodeType": "YulLiteral",
																										"src": "9519:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9507:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "9507:3:7"
																								},
																								"nativeSrc": "9507:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "9507:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "9497:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "9497:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "9538:31:7",
																							"nodeType": "YulAssignment",
																							"src": "9538:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "9555:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "9555:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9566:2:7",
																										"nodeType": "YulLiteral",
																										"src": "9566:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9551:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "9551:3:7"
																								},
																								"nativeSrc": "9551:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "9551:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "9538:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "9538:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "9386:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "9386:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "9389:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "9389:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "9383:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "9383:2:7"
																					},
																					"nativeSrc": "9383:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "9383:14:7"
																				},
																				"nativeSrc": "9375:208:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "9398:21:7",
																					"nodeType": "YulBlock",
																					"src": "9398:21:7",
																					"statements": [
																						{
																							"nativeSrc": "9400:17:7",
																							"nodeType": "YulAssignment",
																							"src": "9400:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "9409:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "9409:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9412:4:7",
																										"nodeType": "YulLiteral",
																										"src": "9412:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9405:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "9405:3:7"
																								},
																								"nativeSrc": "9405:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "9405:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "9400:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "9400:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "9379:3:7",
																					"nodeType": "YulBlock",
																					"src": "9379:3:7",
																					"statements": []
																				},
																				"src": "9375:208:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "9619:156:7",
																					"nodeType": "YulBlock",
																					"src": "9619:156:7",
																					"statements": [
																						{
																							"nativeSrc": "9637:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "9637:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9664:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "9664:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9669:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "9669:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9660:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "9660:3:7"
																										},
																										"nativeSrc": "9660:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "9660:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9654:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "9654:5:7"
																								},
																								"nativeSrc": "9654:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "9654:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "9641:9:7",
																									"nodeType": "YulTypedName",
																									"src": "9641:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9704:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "9704:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "9731:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "9731:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "9746:6:7",
																														"nodeType": "YulIdentifier",
																														"src": "9746:6:7"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "9754:4:7",
																														"nodeType": "YulLiteral",
																														"src": "9754:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "9742:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "9742:3:7"
																												},
																												"nativeSrc": "9742:17:7",
																												"nodeType": "YulFunctionCall",
																												"src": "9742:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "9712:18:7",
																											"nodeType": "YulIdentifier",
																											"src": "9712:18:7"
																										},
																										"nativeSrc": "9712:48:7",
																										"nodeType": "YulFunctionCall",
																										"src": "9712:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "9697:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "9697:6:7"
																								},
																								"nativeSrc": "9697:64:7",
																								"nodeType": "YulFunctionCall",
																								"src": "9697:64:7"
																							},
																							"nativeSrc": "9697:64:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "9697:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "9602:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "9602:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "9611:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "9611:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "9599:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "9599:2:7"
																					},
																					"nativeSrc": "9599:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "9599:19:7"
																				},
																				"nativeSrc": "9596:179:7",
																				"nodeType": "YulIf",
																				"src": "9596:179:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9795:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "9795:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "9809:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "9809:6:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "9817:1:7",
																											"nodeType": "YulLiteral",
																											"src": "9817:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "9805:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "9805:3:7"
																									},
																									"nativeSrc": "9805:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "9805:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "9821:1:7",
																									"nodeType": "YulLiteral",
																									"src": "9821:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "9801:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "9801:3:7"
																							},
																							"nativeSrc": "9801:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "9801:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9788:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "9788:6:7"
																					},
																					"nativeSrc": "9788:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "9788:36:7"
																				},
																				"nativeSrc": "9788:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "9788:36:7"
																			}
																		]
																	},
																	"nativeSrc": "9216:618:7",
																	"nodeType": "YulCase",
																	"src": "9216:618:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9221:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9221:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "9851:222:7",
																		"nodeType": "YulBlock",
																		"src": "9851:222:7",
																		"statements": [
																			{
																				"nativeSrc": "9865:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9865:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9878:1:7",
																					"nodeType": "YulLiteral",
																					"src": "9878:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "9869:5:7",
																						"nodeType": "YulTypedName",
																						"src": "9869:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9902:67:7",
																					"nodeType": "YulBlock",
																					"src": "9902:67:7",
																					"statements": [
																						{
																							"nativeSrc": "9920:35:7",
																							"nodeType": "YulAssignment",
																							"src": "9920:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9939:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "9939:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9944:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "9944:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9935:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "9935:3:7"
																										},
																										"nativeSrc": "9935:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "9935:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9929:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "9929:5:7"
																								},
																								"nativeSrc": "9929:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "9929:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "9920:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "9920:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "9895:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "9895:6:7"
																				},
																				"nativeSrc": "9892:77:7",
																				"nodeType": "YulIf",
																				"src": "9892:77:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9989:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "9989:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "10048:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "10048:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "10055:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "10055:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "9995:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "9995:52:7"
																							},
																							"nativeSrc": "9995:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "9995:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9982:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "9982:6:7"
																					},
																					"nativeSrc": "9982:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "9982:81:7"
																				},
																				"nativeSrc": "9982:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "9982:81:7"
																			}
																		]
																	},
																	"nativeSrc": "9843:230:7",
																	"nodeType": "YulCase",
																	"src": "9843:230:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "9196:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9196:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9204:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9204:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9193:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "9193:2:7"
																},
																"nativeSrc": "9193:14:7",
																"nodeType": "YulFunctionCall",
																"src": "9193:14:7"
															},
															"nativeSrc": "9186:887:7",
															"nodeType": "YulSwitch",
															"src": "9186:887:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "8684:1395:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "8765:4:7",
														"nodeType": "YulTypedName",
														"src": "8765:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "8771:3:7",
														"nodeType": "YulTypedName",
														"src": "8771:3:7",
														"type": ""
													}
												],
												"src": "8684:1395:7"
											},
											{
												"body": {
													"nativeSrc": "10150:53:7",
													"nodeType": "YulBlock",
													"src": "10150:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10167:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10167:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10190:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "10190:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "10172:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "10172:17:7"
																		},
																		"nativeSrc": "10172:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10172:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10160:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10160:6:7"
																},
																"nativeSrc": "10160:37:7",
																"nodeType": "YulFunctionCall",
																"src": "10160:37:7"
															},
															"nativeSrc": "10160:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "10160:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "10085:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10138:5:7",
														"nodeType": "YulTypedName",
														"src": "10138:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10145:3:7",
														"nodeType": "YulTypedName",
														"src": "10145:3:7",
														"type": ""
													}
												],
												"src": "10085:118:7"
											},
											{
												"body": {
													"nativeSrc": "10307:124:7",
													"nodeType": "YulBlock",
													"src": "10307:124:7",
													"statements": [
														{
															"nativeSrc": "10317:26:7",
															"nodeType": "YulAssignment",
															"src": "10317:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10329:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10329:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10340:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10340:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10325:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10325:3:7"
																},
																"nativeSrc": "10325:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10325:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10317:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10317:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10397:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10397:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10410:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10410:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10421:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10421:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10406:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10406:3:7"
																		},
																		"nativeSrc": "10406:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10406:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10353:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10353:43:7"
																},
																"nativeSrc": "10353:71:7",
																"nodeType": "YulFunctionCall",
																"src": "10353:71:7"
															},
															"nativeSrc": "10353:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "10353:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "10209:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10279:9:7",
														"nodeType": "YulTypedName",
														"src": "10279:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10291:6:7",
														"nodeType": "YulTypedName",
														"src": "10291:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10302:4:7",
														"nodeType": "YulTypedName",
														"src": "10302:4:7",
														"type": ""
													}
												],
												"src": "10209:222:7"
											},
											{
												"body": {
													"nativeSrc": "10465:152:7",
													"nodeType": "YulBlock",
													"src": "10465:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10482:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10482:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10485:77:7",
																		"nodeType": "YulLiteral",
																		"src": "10485:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10475:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10475:6:7"
																},
																"nativeSrc": "10475:88:7",
																"nodeType": "YulFunctionCall",
																"src": "10475:88:7"
															},
															"nativeSrc": "10475:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "10475:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10579:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10579:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10582:4:7",
																		"nodeType": "YulLiteral",
																		"src": "10582:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10572:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10572:6:7"
																},
																"nativeSrc": "10572:15:7",
																"nodeType": "YulFunctionCall",
																"src": "10572:15:7"
															},
															"nativeSrc": "10572:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "10572:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10603:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10603:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10606:4:7",
																		"nodeType": "YulLiteral",
																		"src": "10606:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10596:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10596:6:7"
																},
																"nativeSrc": "10596:15:7",
																"nodeType": "YulFunctionCall",
																"src": "10596:15:7"
															},
															"nativeSrc": "10596:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "10596:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "10437:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "10437:180:7"
											},
											{
												"body": {
													"nativeSrc": "10667:147:7",
													"nodeType": "YulBlock",
													"src": "10667:147:7",
													"statements": [
														{
															"nativeSrc": "10677:25:7",
															"nodeType": "YulAssignment",
															"src": "10677:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10700:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10700:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10682:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "10682:17:7"
																},
																"nativeSrc": "10682:20:7",
																"nodeType": "YulFunctionCall",
																"src": "10682:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10677:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "10677:1:7"
																}
															]
														},
														{
															"nativeSrc": "10711:25:7",
															"nodeType": "YulAssignment",
															"src": "10711:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10734:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10734:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10716:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "10716:17:7"
																},
																"nativeSrc": "10716:20:7",
																"nodeType": "YulFunctionCall",
																"src": "10716:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10711:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "10711:1:7"
																}
															]
														},
														{
															"nativeSrc": "10745:16:7",
															"nodeType": "YulAssignment",
															"src": "10745:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10756:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10756:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10759:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10759:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10752:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10752:3:7"
																},
																"nativeSrc": "10752:9:7",
																"nodeType": "YulFunctionCall",
																"src": "10752:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10745:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10745:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10785:22:7",
																"nodeType": "YulBlock",
																"src": "10785:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10787:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "10787:16:7"
																			},
																			"nativeSrc": "10787:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "10787:18:7"
																		},
																		"nativeSrc": "10787:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "10787:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10777:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10777:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10780:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10780:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10774:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "10774:2:7"
																},
																"nativeSrc": "10774:10:7",
																"nodeType": "YulFunctionCall",
																"src": "10774:10:7"
															},
															"nativeSrc": "10771:36:7",
															"nodeType": "YulIf",
															"src": "10771:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "10623:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10654:1:7",
														"nodeType": "YulTypedName",
														"src": "10654:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10657:1:7",
														"nodeType": "YulTypedName",
														"src": "10657:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "10663:3:7",
														"nodeType": "YulTypedName",
														"src": "10663:3:7",
														"type": ""
													}
												],
												"src": "10623:191:7"
											},
											{
												"body": {
													"nativeSrc": "10885:53:7",
													"nodeType": "YulBlock",
													"src": "10885:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10902:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10902:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10925:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "10925:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "10907:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "10907:17:7"
																		},
																		"nativeSrc": "10907:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10907:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10895:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10895:6:7"
																},
																"nativeSrc": "10895:37:7",
																"nodeType": "YulFunctionCall",
																"src": "10895:37:7"
															},
															"nativeSrc": "10895:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "10895:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "10820:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10873:5:7",
														"nodeType": "YulTypedName",
														"src": "10873:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10880:3:7",
														"nodeType": "YulTypedName",
														"src": "10880:3:7",
														"type": ""
													}
												],
												"src": "10820:118:7"
											},
											{
												"body": {
													"nativeSrc": "11098:288:7",
													"nodeType": "YulBlock",
													"src": "11098:288:7",
													"statements": [
														{
															"nativeSrc": "11108:26:7",
															"nodeType": "YulAssignment",
															"src": "11108:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11120:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11120:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11131:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11131:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11116:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11116:3:7"
																},
																"nativeSrc": "11116:18:7",
																"nodeType": "YulFunctionCall",
																"src": "11116:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11108:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11108:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11188:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11188:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11201:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11201:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11212:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11212:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11197:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11197:3:7"
																		},
																		"nativeSrc": "11197:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11197:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11144:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "11144:43:7"
																},
																"nativeSrc": "11144:71:7",
																"nodeType": "YulFunctionCall",
																"src": "11144:71:7"
															},
															"nativeSrc": "11144:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "11144:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11269:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11269:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11282:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11282:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11293:2:7",
																				"nodeType": "YulLiteral",
																				"src": "11293:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11278:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11278:3:7"
																		},
																		"nativeSrc": "11278:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11278:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11225:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "11225:43:7"
																},
																"nativeSrc": "11225:72:7",
																"nodeType": "YulFunctionCall",
																"src": "11225:72:7"
															},
															"nativeSrc": "11225:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "11225:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11351:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11351:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11364:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11364:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11375:2:7",
																				"nodeType": "YulLiteral",
																				"src": "11375:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11360:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11360:3:7"
																		},
																		"nativeSrc": "11360:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11360:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11307:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "11307:43:7"
																},
																"nativeSrc": "11307:72:7",
																"nodeType": "YulFunctionCall",
																"src": "11307:72:7"
															},
															"nativeSrc": "11307:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "11307:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10944:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11054:9:7",
														"nodeType": "YulTypedName",
														"src": "11054:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11066:6:7",
														"nodeType": "YulTypedName",
														"src": "11066:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11074:6:7",
														"nodeType": "YulTypedName",
														"src": "11074:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11082:6:7",
														"nodeType": "YulTypedName",
														"src": "11082:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11093:4:7",
														"nodeType": "YulTypedName",
														"src": "11093:4:7",
														"type": ""
													}
												],
												"src": "10944:442:7"
											},
											{
												"body": {
													"nativeSrc": "11490:124:7",
													"nodeType": "YulBlock",
													"src": "11490:124:7",
													"statements": [
														{
															"nativeSrc": "11500:26:7",
															"nodeType": "YulAssignment",
															"src": "11500:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11512:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11512:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11523:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11523:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11508:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11508:3:7"
																},
																"nativeSrc": "11508:18:7",
																"nodeType": "YulFunctionCall",
																"src": "11508:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11500:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11500:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11580:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11580:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11593:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11593:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11604:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11604:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11589:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11589:3:7"
																		},
																		"nativeSrc": "11589:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11589:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11536:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "11536:43:7"
																},
																"nativeSrc": "11536:71:7",
																"nodeType": "YulFunctionCall",
																"src": "11536:71:7"
															},
															"nativeSrc": "11536:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "11536:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "11392:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11462:9:7",
														"nodeType": "YulTypedName",
														"src": "11462:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11474:6:7",
														"nodeType": "YulTypedName",
														"src": "11474:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11485:4:7",
														"nodeType": "YulTypedName",
														"src": "11485:4:7",
														"type": ""
													}
												],
												"src": "11392:222:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8t_uint256t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50604051611d88380380611d8883398181016040528101906100319190610685565b8085858160039081610043919061093b565b508060049081610053919061093b565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100c6575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100bd9190610a19565b60405180910390fd5b6100d58161011460201b60201c565b5082600560146101000a81548160ff021916908360ff1602179055505f82111561010a5761010981836101d760201b60201c565b5b5050505050610aef565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610247575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161023e9190610a19565b60405180910390fd5b6102585f838361025c60201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036102ac578060025f8282546102a09190610a5f565b9250508190555061037a565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610335578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161032c93929190610aa1565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036103c1578060025f828254039250508190555061040b565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516104689190610ad6565b60405180910390a3505050565b5f604051905090565b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6104d48261048e565b810181811067ffffffffffffffff821117156104f3576104f261049e565b5b80604052505050565b5f610505610475565b905061051182826104cb565b919050565b5f67ffffffffffffffff8211156105305761052f61049e565b5b6105398261048e565b9050602081019050919050565b8281835e5f83830152505050565b5f61056661056184610516565b6104fc565b9050828152602081018484840111156105825761058161048a565b5b61058d848285610546565b509392505050565b5f82601f8301126105a9576105a8610486565b5b81516105b9848260208601610554565b91505092915050565b5f60ff82169050919050565b6105d7816105c2565b81146105e1575f5ffd5b50565b5f815190506105f2816105ce565b92915050565b5f819050919050565b61060a816105f8565b8114610614575f5ffd5b50565b5f8151905061062581610601565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6106548261062b565b9050919050565b6106648161064a565b811461066e575f5ffd5b50565b5f8151905061067f8161065b565b92915050565b5f5f5f5f5f60a0868803121561069e5761069d61047e565b5b5f86015167ffffffffffffffff8111156106bb576106ba610482565b5b6106c788828901610595565b955050602086015167ffffffffffffffff8111156106e8576106e7610482565b5b6106f488828901610595565b9450506040610705888289016105e4565b935050606061071688828901610617565b925050608061072788828901610671565b9150509295509295909350565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061078257607f821691505b6020821081036107955761079461073e565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026107f77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826107bc565b61080186836107bc565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61083c610837610832846105f8565b610819565b6105f8565b9050919050565b5f819050919050565b61085583610822565b61086961086182610843565b8484546107c8565b825550505050565b5f5f905090565b610880610871565b61088b81848461084c565b505050565b5b818110156108ae576108a35f82610878565b600181019050610891565b5050565b601f8211156108f3576108c48161079b565b6108cd846107ad565b810160208510156108dc578190505b6108f06108e8856107ad565b830182610890565b50505b505050565b5f82821c905092915050565b5f6109135f19846008026108f8565b1980831691505092915050565b5f61092b8383610904565b9150826002028217905092915050565b61094482610734565b67ffffffffffffffff81111561095d5761095c61049e565b5b610967825461076b565b6109728282856108b2565b5f60209050601f8311600181146109a3575f8415610991578287015190505b61099b8582610920565b865550610a02565b601f1984166109b18661079b565b5f5b828110156109d8578489015182556001820191506020850194506020810190506109b3565b868310156109f557848901516109f1601f891682610904565b8355505b6001600288020188555050505b505050505050565b610a138161064a565b82525050565b5f602082019050610a2c5f830184610a0a565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610a69826105f8565b9150610a74836105f8565b9250828201905080821115610a8c57610a8b610a32565b5b92915050565b610a9b816105f8565b82525050565b5f606082019050610ab45f830186610a0a565b610ac16020830185610a92565b610ace6040830184610a92565b949350505050565b5f602082019050610ae95f830184610a92565b92915050565b61128c80610afc5f395ff3fe608060405234801561000f575f5ffd5b50600436106100fe575f3560e01c806370a082311161009557806395d89b411161006457806395d89b4114610284578063a9059cbb146102a2578063dd62ed3e146102d2578063f2fde38b14610302576100fe565b806370a0823114610210578063715018a61461024057806379cc67901461024a5780638da5cb5b14610266576100fe565b8063313ce567116100d1578063313ce5671461019e57806340c10f19146101bc57806342966c68146101d857806357915897146101f4576100fe565b806306fdde0314610102578063095ea7b31461012057806318160ddd1461015057806323b872dd1461016e575b5f5ffd5b61010a61031e565b6040516101179190610eda565b60405180910390f35b61013a60048036038101906101359190610f8b565b6103ae565b6040516101479190610fe3565b60405180910390f35b6101586103d0565b604051610165919061100b565b60405180910390f35b61018860048036038101906101839190611024565b6103d9565b6040516101959190610fe3565b60405180910390f35b6101a6610407565b6040516101b3919061108f565b60405180910390f35b6101d660048036038101906101d19190610f8b565b61041d565b005b6101f260048036038101906101ed91906110a8565b610433565b005b61020e600480360381019061020991906110a8565b610440565b005b61022a600480360381019061022591906110d3565b61044d565b604051610237919061100b565b60405180910390f35b610248610492565b005b610264600480360381019061025f9190610f8b565b6104a5565b005b61026e6104be565b60405161027b919061110d565b60405180910390f35b61028c6104e6565b6040516102999190610eda565b60405180910390f35b6102bc60048036038101906102b79190610f8b565b610576565b6040516102c99190610fe3565b60405180910390f35b6102ec60048036038101906102e79190611126565b610598565b6040516102f9919061100b565b60405180910390f35b61031c600480360381019061031791906110d3565b61061a565b005b60606003805461032d90611191565b80601f016020809104026020016040519081016040528092919081815260200182805461035990611191565b80156103a45780601f1061037b576101008083540402835291602001916103a4565b820191905f5260205f20905b81548152906001019060200180831161038757829003601f168201915b5050505050905090565b5f5f6103b861069e565b90506103c58185856106a5565b600191505092915050565b5f600254905090565b5f5f6103e361069e565b90506103f08582856106b7565b6103fb85858561074a565b60019150509392505050565b5f600560149054906101000a900460ff16905090565b61042561083a565b61042f82826108c1565b5050565b61043d3382610940565b50565b61044a33826108c1565b50565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61049a61083a565b6104a35f6109bf565b565b6104b08233836106b7565b6104ba8282610940565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546104f590611191565b80601f016020809104026020016040519081016040528092919081815260200182805461052190611191565b801561056c5780601f106105435761010080835404028352916020019161056c565b820191905f5260205f20905b81548152906001019060200180831161054f57829003601f168201915b5050505050905090565b5f5f61058061069e565b905061058d81858561074a565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b61062261083a565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610692575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610689919061110d565b60405180910390fd5b61069b816109bf565b50565b5f33905090565b6106b28383836001610a82565b505050565b5f6106c28484610598565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156107445781811015610735578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161072c939291906111c1565b60405180910390fd5b61074384848484035f610a82565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107ba575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016107b1919061110d565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361082a575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610821919061110d565b60405180910390fd5b610835838383610c51565b505050565b61084261069e565b73ffffffffffffffffffffffffffffffffffffffff166108606104be565b73ffffffffffffffffffffffffffffffffffffffff16146108bf5761088361069e565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016108b6919061110d565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610931575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610928919061110d565b60405180910390fd5b61093c5f8383610c51565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109b0575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016109a7919061110d565b60405180910390fd5b6109bb825f83610c51565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610af2575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610ae9919061110d565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b62575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610b59919061110d565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610c4b578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610c42919061100b565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ca1578060025f828254610c959190611223565b92505081905550610d6f565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610d2a578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610d21939291906111c1565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610db6578060025f8282540392505081905550610e00565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610e5d919061100b565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610eac82610e6a565b610eb68185610e74565b9350610ec6818560208601610e84565b610ecf81610e92565b840191505092915050565b5f6020820190508181035f830152610ef28184610ea2565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610f2782610efe565b9050919050565b610f3781610f1d565b8114610f41575f5ffd5b50565b5f81359050610f5281610f2e565b92915050565b5f819050919050565b610f6a81610f58565b8114610f74575f5ffd5b50565b5f81359050610f8581610f61565b92915050565b5f5f60408385031215610fa157610fa0610efa565b5b5f610fae85828601610f44565b9250506020610fbf85828601610f77565b9150509250929050565b5f8115159050919050565b610fdd81610fc9565b82525050565b5f602082019050610ff65f830184610fd4565b92915050565b61100581610f58565b82525050565b5f60208201905061101e5f830184610ffc565b92915050565b5f5f5f6060848603121561103b5761103a610efa565b5b5f61104886828701610f44565b935050602061105986828701610f44565b925050604061106a86828701610f77565b9150509250925092565b5f60ff82169050919050565b61108981611074565b82525050565b5f6020820190506110a25f830184611080565b92915050565b5f602082840312156110bd576110bc610efa565b5b5f6110ca84828501610f77565b91505092915050565b5f602082840312156110e8576110e7610efa565b5b5f6110f584828501610f44565b91505092915050565b61110781610f1d565b82525050565b5f6020820190506111205f8301846110fe565b92915050565b5f5f6040838503121561113c5761113b610efa565b5b5f61114985828601610f44565b925050602061115a85828601610f44565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806111a857607f821691505b6020821081036111bb576111ba611164565b5b50919050565b5f6060820190506111d45f8301866110fe565b6111e16020830185610ffc565b6111ee6040830184610ffc565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61122d82610f58565b915061123883610f58565b92508282019050808211156112505761124f6111f6565b5b9291505056fea2646970667358221220729026d98839c94c18fa2c409e1bacef092d0f27030799d8bc7d61be047cc4dd64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1D88 CODESIZE SUB DUP1 PUSH2 0x1D88 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x685 JUMP JUMPDEST DUP1 DUP6 DUP6 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x43 SWAP2 SWAP1 PUSH2 0x93B JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x53 SWAP2 SWAP1 PUSH2 0x93B JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD SWAP2 SWAP1 PUSH2 0xA19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD5 DUP2 PUSH2 0x114 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP3 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH0 DUP3 GT ISZERO PUSH2 0x10A JUMPI PUSH2 0x109 DUP2 DUP4 PUSH2 0x1D7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST POP POP POP POP POP PUSH2 0xAEF JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x247 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23E SWAP2 SWAP1 PUSH2 0xA19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x258 PUSH0 DUP4 DUP4 PUSH2 0x25C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2AC JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2A0 SWAP2 SWAP1 PUSH2 0xA5F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x37A JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x335 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x32C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xAA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3C1 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x40B JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x468 SWAP2 SWAP1 PUSH2 0xAD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x4D4 DUP3 PUSH2 0x48E JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x4F3 JUMPI PUSH2 0x4F2 PUSH2 0x49E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x505 PUSH2 0x475 JUMP JUMPDEST SWAP1 POP PUSH2 0x511 DUP3 DUP3 PUSH2 0x4CB JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x530 JUMPI PUSH2 0x52F PUSH2 0x49E JUMP JUMPDEST JUMPDEST PUSH2 0x539 DUP3 PUSH2 0x48E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x566 PUSH2 0x561 DUP5 PUSH2 0x516 JUMP JUMPDEST PUSH2 0x4FC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x582 JUMPI PUSH2 0x581 PUSH2 0x48A JUMP JUMPDEST JUMPDEST PUSH2 0x58D DUP5 DUP3 DUP6 PUSH2 0x546 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x5A9 JUMPI PUSH2 0x5A8 PUSH2 0x486 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x5B9 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x554 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5D7 DUP2 PUSH2 0x5C2 JUMP JUMPDEST DUP2 EQ PUSH2 0x5E1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x5F2 DUP2 PUSH2 0x5CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x60A DUP2 PUSH2 0x5F8 JUMP JUMPDEST DUP2 EQ PUSH2 0x614 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x625 DUP2 PUSH2 0x601 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x654 DUP3 PUSH2 0x62B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x664 DUP2 PUSH2 0x64A JUMP JUMPDEST DUP2 EQ PUSH2 0x66E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x67F DUP2 PUSH2 0x65B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x69E JUMPI PUSH2 0x69D PUSH2 0x47E JUMP JUMPDEST JUMPDEST PUSH0 DUP7 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6BB JUMPI PUSH2 0x6BA PUSH2 0x482 JUMP JUMPDEST JUMPDEST PUSH2 0x6C7 DUP9 DUP3 DUP10 ADD PUSH2 0x595 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6E8 JUMPI PUSH2 0x6E7 PUSH2 0x482 JUMP JUMPDEST JUMPDEST PUSH2 0x6F4 DUP9 DUP3 DUP10 ADD PUSH2 0x595 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x705 DUP9 DUP3 DUP10 ADD PUSH2 0x5E4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x716 DUP9 DUP3 DUP10 ADD PUSH2 0x617 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x727 DUP9 DUP3 DUP10 ADD PUSH2 0x671 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x782 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x795 JUMPI PUSH2 0x794 PUSH2 0x73E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x7F7 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x7BC JUMP JUMPDEST PUSH2 0x801 DUP7 DUP4 PUSH2 0x7BC JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x83C PUSH2 0x837 PUSH2 0x832 DUP5 PUSH2 0x5F8 JUMP JUMPDEST PUSH2 0x819 JUMP JUMPDEST PUSH2 0x5F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x855 DUP4 PUSH2 0x822 JUMP JUMPDEST PUSH2 0x869 PUSH2 0x861 DUP3 PUSH2 0x843 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x7C8 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x880 PUSH2 0x871 JUMP JUMPDEST PUSH2 0x88B DUP2 DUP5 DUP5 PUSH2 0x84C JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8AE JUMPI PUSH2 0x8A3 PUSH0 DUP3 PUSH2 0x878 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x891 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x8F3 JUMPI PUSH2 0x8C4 DUP2 PUSH2 0x79B JUMP JUMPDEST PUSH2 0x8CD DUP5 PUSH2 0x7AD JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x8DC JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x8F0 PUSH2 0x8E8 DUP6 PUSH2 0x7AD JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x890 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x913 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x8F8 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x92B DUP4 DUP4 PUSH2 0x904 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x944 DUP3 PUSH2 0x734 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x95D JUMPI PUSH2 0x95C PUSH2 0x49E JUMP JUMPDEST JUMPDEST PUSH2 0x967 DUP3 SLOAD PUSH2 0x76B JUMP JUMPDEST PUSH2 0x972 DUP3 DUP3 DUP6 PUSH2 0x8B2 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x9A3 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x991 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x99B DUP6 DUP3 PUSH2 0x920 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xA02 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x9B1 DUP7 PUSH2 0x79B JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x9D8 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x9B3 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x9F5 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x9F1 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x904 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xA13 DUP2 PUSH2 0x64A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA2C PUSH0 DUP4 ADD DUP5 PUSH2 0xA0A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xA69 DUP3 PUSH2 0x5F8 JUMP JUMPDEST SWAP2 POP PUSH2 0xA74 DUP4 PUSH2 0x5F8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xA8C JUMPI PUSH2 0xA8B PUSH2 0xA32 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA9B DUP2 PUSH2 0x5F8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xAB4 PUSH0 DUP4 ADD DUP7 PUSH2 0xA0A JUMP JUMPDEST PUSH2 0xAC1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xA92 JUMP JUMPDEST PUSH2 0xACE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xA92 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAE9 PUSH0 DUP4 ADD DUP5 PUSH2 0xA92 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x128C DUP1 PUSH2 0xAFC PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x302 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x266 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x57915897 EQ PUSH2 0x1F4 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x10A PUSH2 0x31E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0xEDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x135 SWAP2 SWAP1 PUSH2 0xF8B JUMP JUMPDEST PUSH2 0x3AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x147 SWAP2 SWAP1 PUSH2 0xFE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x158 PUSH2 0x3D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x165 SWAP2 SWAP1 PUSH2 0x100B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x1024 JUMP JUMPDEST PUSH2 0x3D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0xFE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A6 PUSH2 0x407 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0x108F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0xF8B JUMP JUMPDEST PUSH2 0x41D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0x10A8 JUMP JUMPDEST PUSH2 0x433 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x10A8 JUMP JUMPDEST PUSH2 0x440 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x225 SWAP2 SWAP1 PUSH2 0x10D3 JUMP JUMPDEST PUSH2 0x44D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x100B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x248 PUSH2 0x492 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x264 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25F SWAP2 SWAP1 PUSH2 0xF8B JUMP JUMPDEST PUSH2 0x4A5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26E PUSH2 0x4BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27B SWAP2 SWAP1 PUSH2 0x110D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28C PUSH2 0x4E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x299 SWAP2 SWAP1 PUSH2 0xEDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0xF8B JUMP JUMPDEST PUSH2 0x576 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0xFE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E7 SWAP2 SWAP1 PUSH2 0x1126 JUMP JUMPDEST PUSH2 0x598 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x100B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x10D3 JUMP JUMPDEST PUSH2 0x61A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x32D SWAP1 PUSH2 0x1191 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x359 SWAP1 PUSH2 0x1191 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3A4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x37B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3A4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x387 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x3B8 PUSH2 0x69E JUMP JUMPDEST SWAP1 POP PUSH2 0x3C5 DUP2 DUP6 DUP6 PUSH2 0x6A5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x3E3 PUSH2 0x69E JUMP JUMPDEST SWAP1 POP PUSH2 0x3F0 DUP6 DUP3 DUP6 PUSH2 0x6B7 JUMP JUMPDEST PUSH2 0x3FB DUP6 DUP6 DUP6 PUSH2 0x74A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x425 PUSH2 0x83A JUMP JUMPDEST PUSH2 0x42F DUP3 DUP3 PUSH2 0x8C1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x43D CALLER DUP3 PUSH2 0x940 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x44A CALLER DUP3 PUSH2 0x8C1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x49A PUSH2 0x83A JUMP JUMPDEST PUSH2 0x4A3 PUSH0 PUSH2 0x9BF JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x4B0 DUP3 CALLER DUP4 PUSH2 0x6B7 JUMP JUMPDEST PUSH2 0x4BA DUP3 DUP3 PUSH2 0x940 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x4F5 SWAP1 PUSH2 0x1191 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x521 SWAP1 PUSH2 0x1191 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x56C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x543 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x56C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x54F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x580 PUSH2 0x69E JUMP JUMPDEST SWAP1 POP PUSH2 0x58D DUP2 DUP6 DUP6 PUSH2 0x74A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x622 PUSH2 0x83A JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x692 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x689 SWAP2 SWAP1 PUSH2 0x110D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x69B DUP2 PUSH2 0x9BF JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6B2 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xA82 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6C2 DUP5 DUP5 PUSH2 0x598 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x744 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x735 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x743 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xA82 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7BA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B1 SWAP2 SWAP1 PUSH2 0x110D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x82A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x821 SWAP2 SWAP1 PUSH2 0x110D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x835 DUP4 DUP4 DUP4 PUSH2 0xC51 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x842 PUSH2 0x69E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x860 PUSH2 0x4BE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8BF JUMPI PUSH2 0x883 PUSH2 0x69E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B6 SWAP2 SWAP1 PUSH2 0x110D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x931 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x928 SWAP2 SWAP1 PUSH2 0x110D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x93C PUSH0 DUP4 DUP4 PUSH2 0xC51 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9B0 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A7 SWAP2 SWAP1 PUSH2 0x110D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9BB DUP3 PUSH0 DUP4 PUSH2 0xC51 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAF2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE9 SWAP2 SWAP1 PUSH2 0x110D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB62 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB59 SWAP2 SWAP1 PUSH2 0x110D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xC4B JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xC42 SWAP2 SWAP1 PUSH2 0x100B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCA1 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC95 SWAP2 SWAP1 PUSH2 0x1223 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xD6F JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xD2A JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD21 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDB6 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xE00 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xE5D SWAP2 SWAP1 PUSH2 0x100B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xEAC DUP3 PUSH2 0xE6A JUMP JUMPDEST PUSH2 0xEB6 DUP2 DUP6 PUSH2 0xE74 JUMP JUMPDEST SWAP4 POP PUSH2 0xEC6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xE84 JUMP JUMPDEST PUSH2 0xECF DUP2 PUSH2 0xE92 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEF2 DUP2 DUP5 PUSH2 0xEA2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF27 DUP3 PUSH2 0xEFE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF37 DUP2 PUSH2 0xF1D JUMP JUMPDEST DUP2 EQ PUSH2 0xF41 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF52 DUP2 PUSH2 0xF2E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF6A DUP2 PUSH2 0xF58 JUMP JUMPDEST DUP2 EQ PUSH2 0xF74 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF85 DUP2 PUSH2 0xF61 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFA1 JUMPI PUSH2 0xFA0 PUSH2 0xEFA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFAE DUP6 DUP3 DUP7 ADD PUSH2 0xF44 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xFBF DUP6 DUP3 DUP7 ADD PUSH2 0xF77 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFDD DUP2 PUSH2 0xFC9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFF6 PUSH0 DUP4 ADD DUP5 PUSH2 0xFD4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1005 DUP2 PUSH2 0xF58 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x101E PUSH0 DUP4 ADD DUP5 PUSH2 0xFFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x103B JUMPI PUSH2 0x103A PUSH2 0xEFA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1048 DUP7 DUP3 DUP8 ADD PUSH2 0xF44 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1059 DUP7 DUP3 DUP8 ADD PUSH2 0xF44 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x106A DUP7 DUP3 DUP8 ADD PUSH2 0xF77 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1089 DUP2 PUSH2 0x1074 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10A2 PUSH0 DUP4 ADD DUP5 PUSH2 0x1080 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10BD JUMPI PUSH2 0x10BC PUSH2 0xEFA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10CA DUP5 DUP3 DUP6 ADD PUSH2 0xF77 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10E8 JUMPI PUSH2 0x10E7 PUSH2 0xEFA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10F5 DUP5 DUP3 DUP6 ADD PUSH2 0xF44 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1107 DUP2 PUSH2 0xF1D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1120 PUSH0 DUP4 ADD DUP5 PUSH2 0x10FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x113C JUMPI PUSH2 0x113B PUSH2 0xEFA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1149 DUP6 DUP3 DUP7 ADD PUSH2 0xF44 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x115A DUP6 DUP3 DUP7 ADD PUSH2 0xF44 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x11A8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x11BB JUMPI PUSH2 0x11BA PUSH2 0x1164 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x11D4 PUSH0 DUP4 ADD DUP7 PUSH2 0x10FE JUMP JUMPDEST PUSH2 0x11E1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xFFC JUMP JUMPDEST PUSH2 0x11EE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xFFC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x122D DUP3 PUSH2 0xF58 JUMP JUMPDEST SWAP2 POP PUSH2 0x1238 DUP4 PUSH2 0xF58 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1250 JUMPI PUSH2 0x124F PUSH2 0x11F6 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0x9026D98839C94C18FA2C409E1BACEF092D0F27 SUB SMOD SWAP10 0xD8 0xBC PUSH30 0x61BE047CC4DD64736F6C634300081E003300000000000000000000000000 ",
							"sourceMap": "330:1880:6:-:0;;;546:344;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;742:12;720:4;726:6;1656:5:2;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;779:9:6::2;767;;:21;;;;;;;;;;;;;;;;;;819:1;803:13;:17;799:84;;;837:34;843:12;857:13;837:5;;;:34;;:::i;:::-;799:84;546:344:::0;;;;;330:1880;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7362:208:2:-;7451:1;7432:21;;:7;:21;;;7428:91;;7505:1;7476:32;;;;;;;;;;;:::i;:::-;;;;;;;;7428:91;7528:35;7544:1;7548:7;7557:5;7528:7;;;:35;;:::i;:::-;7362:208;;:::o;5912:1107::-;6017:1;6001:18;;:4;:18;;;5997:540;;6153:5;6137:12;;:21;;;;;;;:::i;:::-;;;;;;;;5997:540;;;6189:19;6211:9;:15;6221:4;6211:15;;;;;;;;;;;;;;;;6189:37;;6258:5;6244:11;:19;6240:115;;;6315:4;6321:11;6334:5;6290:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6240:115;6507:5;6493:11;:19;6475:9;:15;6485:4;6475:15;;;;;;;;;;;;;;;:37;;;;6175:362;5997:540;6565:1;6551:16;;:2;:16;;;6547:425;;6730:5;6714:12;;:21;;;;;;;;;;;6547:425;;;6942:5;6925:9;:13;6935:2;6925:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6547:425;7002:2;6987:25;;6996:4;6987:25;;;7006:5;6987:25;;;;;;:::i;:::-;;;;;;;;5912:1107;;;:::o;7:75:7:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:139::-;1699:6;1694:3;1689;1683:23;1740:1;1731:6;1726:3;1722:16;1715:27;1610:139;;;:::o;1755:434::-;1844:5;1869:66;1885:49;1927:6;1885:49;:::i;:::-;1869:66;:::i;:::-;1860:75;;1958:6;1951:5;1944:21;1996:4;1989:5;1985:16;2034:3;2025:6;2020:3;2016:16;2013:25;2010:112;;;2041:79;;:::i;:::-;2010:112;2131:52;2176:6;2171:3;2166;2131:52;:::i;:::-;1850:339;1755:434;;;;;:::o;2209:355::-;2276:5;2325:3;2318:4;2310:6;2306:17;2302:27;2292:122;;2333:79;;:::i;:::-;2292:122;2443:6;2437:13;2468:90;2554:3;2546:6;2539:4;2531:6;2527:17;2468:90;:::i;:::-;2459:99;;2282:282;2209:355;;;;:::o;2570:86::-;2605:7;2645:4;2638:5;2634:16;2623:27;;2570:86;;;:::o;2662:118::-;2733:22;2749:5;2733:22;:::i;:::-;2726:5;2723:33;2713:61;;2770:1;2767;2760:12;2713:61;2662:118;:::o;2786:139::-;2841:5;2872:6;2866:13;2857:22;;2888:31;2913:5;2888:31;:::i;:::-;2786:139;;;;:::o;2931:77::-;2968:7;2997:5;2986:16;;2931:77;;;:::o;3014:122::-;3087:24;3105:5;3087:24;:::i;:::-;3080:5;3077:35;3067:63;;3126:1;3123;3116:12;3067:63;3014:122;:::o;3142:143::-;3199:5;3230:6;3224:13;3215:22;;3246:33;3273:5;3246:33;:::i;:::-;3142:143;;;;:::o;3291:126::-;3328:7;3368:42;3361:5;3357:54;3346:65;;3291:126;;;:::o;3423:96::-;3460:7;3489:24;3507:5;3489:24;:::i;:::-;3478:35;;3423:96;;;:::o;3525:122::-;3598:24;3616:5;3598:24;:::i;:::-;3591:5;3588:35;3578:63;;3637:1;3634;3627:12;3578:63;3525:122;:::o;3653:143::-;3710:5;3741:6;3735:13;3726:22;;3757:33;3784:5;3757:33;:::i;:::-;3653:143;;;;:::o;3802:1319::-;3926:6;3934;3942;3950;3958;4007:3;3995:9;3986:7;3982:23;3978:33;3975:120;;;4014:79;;:::i;:::-;3975:120;4155:1;4144:9;4140:17;4134:24;4185:18;4177:6;4174:30;4171:117;;;4207:79;;:::i;:::-;4171:117;4312:74;4378:7;4369:6;4358:9;4354:22;4312:74;:::i;:::-;4302:84;;4105:291;4456:2;4445:9;4441:18;4435:25;4487:18;4479:6;4476:30;4473:117;;;4509:79;;:::i;:::-;4473:117;4614:74;4680:7;4671:6;4660:9;4656:22;4614:74;:::i;:::-;4604:84;;4406:292;4737:2;4763:62;4817:7;4808:6;4797:9;4793:22;4763:62;:::i;:::-;4753:72;;4708:127;4874:2;4900:64;4956:7;4947:6;4936:9;4932:22;4900:64;:::i;:::-;4890:74;;4845:129;5013:3;5040:64;5096:7;5087:6;5076:9;5072:22;5040:64;:::i;:::-;5030:74;;4984:130;3802:1319;;;;;;;;:::o;5127:99::-;5179:6;5213:5;5207:12;5197:22;;5127:99;;;:::o;5232:180::-;5280:77;5277:1;5270:88;5377:4;5374:1;5367:15;5401:4;5398:1;5391:15;5418:320;5462:6;5499:1;5493:4;5489:12;5479:22;;5546:1;5540:4;5536:12;5567:18;5557:81;;5623:4;5615:6;5611:17;5601:27;;5557:81;5685:2;5677:6;5674:14;5654:18;5651:38;5648:84;;5704:18;;:::i;:::-;5648:84;5469:269;5418:320;;;:::o;5744:141::-;5793:4;5816:3;5808:11;;5839:3;5836:1;5829:14;5873:4;5870:1;5860:18;5852:26;;5744:141;;;:::o;5891:93::-;5928:6;5975:2;5970;5963:5;5959:14;5955:23;5945:33;;5891:93;;;:::o;5990:107::-;6034:8;6084:5;6078:4;6074:16;6053:37;;5990:107;;;;:::o;6103:393::-;6172:6;6222:1;6210:10;6206:18;6245:97;6275:66;6264:9;6245:97;:::i;:::-;6363:39;6393:8;6382:9;6363:39;:::i;:::-;6351:51;;6435:4;6431:9;6424:5;6420:21;6411:30;;6484:4;6474:8;6470:19;6463:5;6460:30;6450:40;;6179:317;;6103:393;;;;;:::o;6502:60::-;6530:3;6551:5;6544:12;;6502:60;;;:::o;6568:142::-;6618:9;6651:53;6669:34;6678:24;6696:5;6678:24;:::i;:::-;6669:34;:::i;:::-;6651:53;:::i;:::-;6638:66;;6568:142;;;:::o;6716:75::-;6759:3;6780:5;6773:12;;6716:75;;;:::o;6797:269::-;6907:39;6938:7;6907:39;:::i;:::-;6968:91;7017:41;7041:16;7017:41;:::i;:::-;7009:6;7002:4;6996:11;6968:91;:::i;:::-;6962:4;6955:105;6873:193;6797:269;;;:::o;7072:73::-;7117:3;7138:1;7131:8;;7072:73;:::o;7151:189::-;7228:32;;:::i;:::-;7269:65;7327:6;7319;7313:4;7269:65;:::i;:::-;7204:136;7151:189;;:::o;7346:186::-;7406:120;7423:3;7416:5;7413:14;7406:120;;;7477:39;7514:1;7507:5;7477:39;:::i;:::-;7450:1;7443:5;7439:13;7430:22;;7406:120;;;7346:186;;:::o;7538:543::-;7639:2;7634:3;7631:11;7628:446;;;7673:38;7705:5;7673:38;:::i;:::-;7757:29;7775:10;7757:29;:::i;:::-;7747:8;7743:44;7940:2;7928:10;7925:18;7922:49;;;7961:8;7946:23;;7922:49;7984:80;8040:22;8058:3;8040:22;:::i;:::-;8030:8;8026:37;8013:11;7984:80;:::i;:::-;7643:431;;7628:446;7538:543;;;:::o;8087:117::-;8141:8;8191:5;8185:4;8181:16;8160:37;;8087:117;;;;:::o;8210:169::-;8254:6;8287:51;8335:1;8331:6;8323:5;8320:1;8316:13;8287:51;:::i;:::-;8283:56;8368:4;8362;8358:15;8348:25;;8261:118;8210:169;;;;:::o;8384:295::-;8460:4;8606:29;8631:3;8625:4;8606:29;:::i;:::-;8598:37;;8668:3;8665:1;8661:11;8655:4;8652:21;8644:29;;8384:295;;;;:::o;8684:1395::-;8801:37;8834:3;8801:37;:::i;:::-;8903:18;8895:6;8892:30;8889:56;;;8925:18;;:::i;:::-;8889:56;8969:38;9001:4;8995:11;8969:38;:::i;:::-;9054:67;9114:6;9106;9100:4;9054:67;:::i;:::-;9148:1;9172:4;9159:17;;9204:2;9196:6;9193:14;9221:1;9216:618;;;;9878:1;9895:6;9892:77;;;9944:9;9939:3;9935:19;9929:26;9920:35;;9892:77;9995:67;10055:6;10048:5;9995:67;:::i;:::-;9989:4;9982:81;9851:222;9186:887;;9216:618;9268:4;9264:9;9256:6;9252:22;9302:37;9334:4;9302:37;:::i;:::-;9361:1;9375:208;9389:7;9386:1;9383:14;9375:208;;;9468:9;9463:3;9459:19;9453:26;9445:6;9438:42;9519:1;9511:6;9507:14;9497:24;;9566:2;9555:9;9551:18;9538:31;;9412:4;9409:1;9405:12;9400:17;;9375:208;;;9611:6;9602:7;9599:19;9596:179;;;9669:9;9664:3;9660:19;9654:26;9712:48;9754:4;9746:6;9742:17;9731:9;9712:48;:::i;:::-;9704:6;9697:64;9619:156;9596:179;9821:1;9817;9809:6;9805:14;9801:22;9795:4;9788:36;9223:611;;;9186:887;;8776:1303;;;8684:1395;;:::o;10085:118::-;10172:24;10190:5;10172:24;:::i;:::-;10167:3;10160:37;10085:118;;:::o;10209:222::-;10302:4;10340:2;10329:9;10325:18;10317:26;;10353:71;10421:1;10410:9;10406:17;10397:6;10353:71;:::i;:::-;10209:222;;;;:::o;10437:180::-;10485:77;10482:1;10475:88;10582:4;10579:1;10572:15;10606:4;10603:1;10596:15;10623:191;10663:3;10682:20;10700:1;10682:20;:::i;:::-;10677:25;;10716:20;10734:1;10716:20;:::i;:::-;10711:25;;10759:1;10756;10752:9;10745:16;;10780:3;10777:1;10774:10;10771:36;;;10787:18;;:::i;:::-;10771:36;10623:191;;;;:::o;10820:118::-;10907:24;10925:5;10907:24;:::i;:::-;10902:3;10895:37;10820:118;;:::o;10944:442::-;11093:4;11131:2;11120:9;11116:18;11108:26;;11144:71;11212:1;11201:9;11197:17;11188:6;11144:71;:::i;:::-;11225:72;11293:2;11282:9;11278:18;11269:6;11225:72;:::i;:::-;11307;11375:2;11364:9;11360:18;11351:6;11307:72;:::i;:::-;10944:442;;;;;;:::o;11392:222::-;11485:4;11523:2;11512:9;11508:18;11500:26;;11536:71;11604:1;11593:9;11589:17;11580:6;11536:71;:::i;:::-;11392:222;;;;:::o;330:1880:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 1701,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 2690,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_672": {
									"entryPoint": 2368,
									"id": 672,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 2106,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 2241,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": 1694,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 1719,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 2495,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 1866,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 3153,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 1432,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 942,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": 1101,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_1050": {
									"entryPoint": 1189,
									"id": 1050,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_1029": {
									"entryPoint": 1075,
									"id": 1029,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_987": {
									"entryPoint": 1031,
									"id": 987,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@faucet_1016": {
									"entryPoint": 1088,
									"id": 1016,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@mint_1003": {
									"entryPoint": 1053,
									"id": 1003,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 798,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1214,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1170,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 1254,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": 976,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 985,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 1562,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 1398,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3908,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3959,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4307,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4390,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4132,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3979,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4264,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4350,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4052,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3746,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4092,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 4224,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4365,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4545,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4067,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3802,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4107,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 4239,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3690,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3700,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4643,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3869,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4041,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3838,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3928,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4212,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3716,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4497,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4598,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 4452,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3834,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3730,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 3886,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3937,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7588:7",
										"nodeType": "YulBlock",
										"src": "0:7588:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:7",
													"nodeType": "YulBlock",
													"src": "66:40:7",
													"statements": [
														{
															"nativeSrc": "77:22:7",
															"nodeType": "YulAssignment",
															"src": "77:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:7"
																},
																"nativeSrc": "87:12:7",
																"nodeType": "YulFunctionCall",
																"src": "87:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:7",
														"nodeType": "YulTypedName",
														"src": "49:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:7",
														"nodeType": "YulTypedName",
														"src": "59:6:7",
														"type": ""
													}
												],
												"src": "7:99:7"
											},
											{
												"body": {
													"nativeSrc": "208:73:7",
													"nodeType": "YulBlock",
													"src": "208:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:7"
																},
																"nativeSrc": "218:19:7",
																"nodeType": "YulFunctionCall",
																"src": "218:19:7"
															},
															"nativeSrc": "218:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:7"
														},
														{
															"nativeSrc": "246:29:7",
															"nodeType": "YulAssignment",
															"src": "246:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:7",
																		"nodeType": "YulLiteral",
																		"src": "270:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:7"
																},
																"nativeSrc": "261:14:7",
																"nodeType": "YulFunctionCall",
																"src": "261:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:7",
														"nodeType": "YulTypedName",
														"src": "180:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:7",
														"nodeType": "YulTypedName",
														"src": "185:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:7",
														"nodeType": "YulTypedName",
														"src": "196:11:7",
														"type": ""
													}
												],
												"src": "112:169:7"
											},
											{
												"body": {
													"nativeSrc": "349:77:7",
													"nodeType": "YulBlock",
													"src": "349:77:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:7"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:7"
																},
																"nativeSrc": "360:23:7",
																"nodeType": "YulFunctionCall",
																"src": "360:23:7"
															},
															"nativeSrc": "360:23:7",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:7"
																		},
																		"nativeSrc": "399:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:7",
																		"nodeType": "YulLiteral",
																		"src": "417:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:7"
																},
																"nativeSrc": "392:27:7",
																"nodeType": "YulFunctionCall",
																"src": "392:27:7"
															},
															"nativeSrc": "392:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:7",
														"nodeType": "YulTypedName",
														"src": "331:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:7",
														"nodeType": "YulTypedName",
														"src": "336:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:7",
														"nodeType": "YulTypedName",
														"src": "341:6:7",
														"type": ""
													}
												],
												"src": "287:139:7"
											},
											{
												"body": {
													"nativeSrc": "480:54:7",
													"nodeType": "YulBlock",
													"src": "480:54:7",
													"statements": [
														{
															"nativeSrc": "490:38:7",
															"nodeType": "YulAssignment",
															"src": "490:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:7",
																				"nodeType": "YulLiteral",
																				"src": "515:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:7"
																		},
																		"nativeSrc": "504:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:7",
																				"nodeType": "YulLiteral",
																				"src": "524:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:7"
																		},
																		"nativeSrc": "520:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:7"
																},
																"nativeSrc": "500:28:7",
																"nodeType": "YulFunctionCall",
																"src": "500:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:7",
														"nodeType": "YulTypedName",
														"src": "463:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:7",
														"nodeType": "YulTypedName",
														"src": "473:6:7",
														"type": ""
													}
												],
												"src": "432:102:7"
											},
											{
												"body": {
													"nativeSrc": "632:285:7",
													"nodeType": "YulBlock",
													"src": "632:285:7",
													"statements": [
														{
															"nativeSrc": "642:53:7",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:7"
																},
																"nativeSrc": "656:39:7",
																"nodeType": "YulFunctionCall",
																"src": "656:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:7",
																	"nodeType": "YulTypedName",
																	"src": "646:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:7",
															"nodeType": "YulAssignment",
															"src": "704:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:7"
																},
																"nativeSrc": "711:71:7",
																"nodeType": "YulFunctionCall",
																"src": "711:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:7",
																				"nodeType": "YulLiteral",
																				"src": "837:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:7"
																		},
																		"nativeSrc": "826:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:7"
																},
																"nativeSrc": "791:65:7",
																"nodeType": "YulFunctionCall",
																"src": "791:65:7"
															},
															"nativeSrc": "791:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:7"
														},
														{
															"nativeSrc": "865:46:7",
															"nodeType": "YulAssignment",
															"src": "865:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:7"
																		},
																		"nativeSrc": "881:29:7",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:7"
																},
																"nativeSrc": "872:39:7",
																"nodeType": "YulFunctionCall",
																"src": "872:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:7",
														"nodeType": "YulTypedName",
														"src": "613:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:7",
														"nodeType": "YulTypedName",
														"src": "620:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:7",
														"nodeType": "YulTypedName",
														"src": "628:3:7",
														"type": ""
													}
												],
												"src": "540:377:7"
											},
											{
												"body": {
													"nativeSrc": "1041:195:7",
													"nodeType": "YulBlock",
													"src": "1041:195:7",
													"statements": [
														{
															"nativeSrc": "1051:26:7",
															"nodeType": "YulAssignment",
															"src": "1051:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:7"
																},
																"nativeSrc": "1059:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:7"
																		},
																		"nativeSrc": "1094:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:7"
																		},
																		"nativeSrc": "1113:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:7"
																},
																"nativeSrc": "1087:47:7",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:7"
															},
															"nativeSrc": "1087:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:7"
														},
														{
															"nativeSrc": "1143:86:7",
															"nodeType": "YulAssignment",
															"src": "1143:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:7",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:7"
																},
																"nativeSrc": "1151:78:7",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:7",
														"nodeType": "YulTypedName",
														"src": "1013:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:7",
														"nodeType": "YulTypedName",
														"src": "1025:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:7",
														"nodeType": "YulTypedName",
														"src": "1036:4:7",
														"type": ""
													}
												],
												"src": "923:313:7"
											},
											{
												"body": {
													"nativeSrc": "1282:35:7",
													"nodeType": "YulBlock",
													"src": "1282:35:7",
													"statements": [
														{
															"nativeSrc": "1292:19:7",
															"nodeType": "YulAssignment",
															"src": "1292:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:7"
																},
																"nativeSrc": "1302:9:7",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:7",
														"nodeType": "YulTypedName",
														"src": "1275:6:7",
														"type": ""
													}
												],
												"src": "1242:75:7"
											},
											{
												"body": {
													"nativeSrc": "1412:28:7",
													"nodeType": "YulBlock",
													"src": "1412:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:7"
																},
																"nativeSrc": "1422:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:7"
															},
															"nativeSrc": "1422:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:7"
											},
											{
												"body": {
													"nativeSrc": "1535:28:7",
													"nodeType": "YulBlock",
													"src": "1535:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:7"
																},
																"nativeSrc": "1545:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:7"
															},
															"nativeSrc": "1545:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:7"
											},
											{
												"body": {
													"nativeSrc": "1614:81:7",
													"nodeType": "YulBlock",
													"src": "1614:81:7",
													"statements": [
														{
															"nativeSrc": "1624:65:7",
															"nodeType": "YulAssignment",
															"src": "1624:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:7",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:7"
																},
																"nativeSrc": "1635:54:7",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:7",
														"nodeType": "YulTypedName",
														"src": "1596:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:7",
														"nodeType": "YulTypedName",
														"src": "1606:7:7",
														"type": ""
													}
												],
												"src": "1569:126:7"
											},
											{
												"body": {
													"nativeSrc": "1746:51:7",
													"nodeType": "YulBlock",
													"src": "1746:51:7",
													"statements": [
														{
															"nativeSrc": "1756:35:7",
															"nodeType": "YulAssignment",
															"src": "1756:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:7"
																},
																"nativeSrc": "1767:24:7",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:7",
														"nodeType": "YulTypedName",
														"src": "1728:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:7",
														"nodeType": "YulTypedName",
														"src": "1738:7:7",
														"type": ""
													}
												],
												"src": "1701:96:7"
											},
											{
												"body": {
													"nativeSrc": "1846:79:7",
													"nodeType": "YulBlock",
													"src": "1846:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:7",
																"nodeType": "YulBlock",
																"src": "1903:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:7"
																			},
																			"nativeSrc": "1905:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:7"
																		},
																		"nativeSrc": "1905:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:7"
																				},
																				"nativeSrc": "1876:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:7"
																		},
																		"nativeSrc": "1866:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:7"
																},
																"nativeSrc": "1859:43:7",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:7"
															},
															"nativeSrc": "1856:63:7",
															"nodeType": "YulIf",
															"src": "1856:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:7",
														"nodeType": "YulTypedName",
														"src": "1839:5:7",
														"type": ""
													}
												],
												"src": "1803:122:7"
											},
											{
												"body": {
													"nativeSrc": "1983:87:7",
													"nodeType": "YulBlock",
													"src": "1983:87:7",
													"statements": [
														{
															"nativeSrc": "1993:29:7",
															"nodeType": "YulAssignment",
															"src": "1993:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:7"
																},
																"nativeSrc": "2002:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:7"
																},
																"nativeSrc": "2031:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:7"
															},
															"nativeSrc": "2031:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:7",
														"nodeType": "YulTypedName",
														"src": "1961:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:7",
														"nodeType": "YulTypedName",
														"src": "1969:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:7",
														"nodeType": "YulTypedName",
														"src": "1977:5:7",
														"type": ""
													}
												],
												"src": "1931:139:7"
											},
											{
												"body": {
													"nativeSrc": "2121:32:7",
													"nodeType": "YulBlock",
													"src": "2121:32:7",
													"statements": [
														{
															"nativeSrc": "2131:16:7",
															"nodeType": "YulAssignment",
															"src": "2131:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:7",
																"nodeType": "YulIdentifier",
																"src": "2142:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:7",
														"nodeType": "YulTypedName",
														"src": "2103:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:7",
														"nodeType": "YulTypedName",
														"src": "2113:7:7",
														"type": ""
													}
												],
												"src": "2076:77:7"
											},
											{
												"body": {
													"nativeSrc": "2202:79:7",
													"nodeType": "YulBlock",
													"src": "2202:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:7",
																"nodeType": "YulBlock",
																"src": "2259:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:7"
																			},
																			"nativeSrc": "2261:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:7"
																		},
																		"nativeSrc": "2261:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:7"
																				},
																				"nativeSrc": "2232:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:7"
																		},
																		"nativeSrc": "2222:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:7"
																},
																"nativeSrc": "2215:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:7"
															},
															"nativeSrc": "2212:63:7",
															"nodeType": "YulIf",
															"src": "2212:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:7",
														"nodeType": "YulTypedName",
														"src": "2195:5:7",
														"type": ""
													}
												],
												"src": "2159:122:7"
											},
											{
												"body": {
													"nativeSrc": "2339:87:7",
													"nodeType": "YulBlock",
													"src": "2339:87:7",
													"statements": [
														{
															"nativeSrc": "2349:29:7",
															"nodeType": "YulAssignment",
															"src": "2349:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:7"
																},
																"nativeSrc": "2358:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:7"
																},
																"nativeSrc": "2387:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:7"
															},
															"nativeSrc": "2387:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:7",
														"nodeType": "YulTypedName",
														"src": "2317:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:7",
														"nodeType": "YulTypedName",
														"src": "2325:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:7",
														"nodeType": "YulTypedName",
														"src": "2333:5:7",
														"type": ""
													}
												],
												"src": "2287:139:7"
											},
											{
												"body": {
													"nativeSrc": "2515:391:7",
													"nodeType": "YulBlock",
													"src": "2515:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:7",
																"nodeType": "YulBlock",
																"src": "2561:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:7"
																			},
																			"nativeSrc": "2563:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:7"
																		},
																		"nativeSrc": "2563:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:7"
																		},
																		"nativeSrc": "2532:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:7"
																},
																"nativeSrc": "2528:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:7"
															},
															"nativeSrc": "2525:119:7",
															"nodeType": "YulIf",
															"src": "2525:119:7"
														},
														{
															"nativeSrc": "2654:117:7",
															"nodeType": "YulBlock",
															"src": "2654:117:7",
															"statements": [
																{
																	"nativeSrc": "2669:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:7"
																				},
																				"nativeSrc": "2729:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:7"
																		},
																		"nativeSrc": "2708:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:7",
															"nodeType": "YulBlock",
															"src": "2781:118:7",
															"statements": [
																{
																	"nativeSrc": "2796:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:7"
																				},
																				"nativeSrc": "2857:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:7"
																		},
																		"nativeSrc": "2836:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:7",
														"nodeType": "YulTypedName",
														"src": "2477:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:7",
														"nodeType": "YulTypedName",
														"src": "2488:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:7",
														"nodeType": "YulTypedName",
														"src": "2500:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:7",
														"nodeType": "YulTypedName",
														"src": "2508:6:7",
														"type": ""
													}
												],
												"src": "2432:474:7"
											},
											{
												"body": {
													"nativeSrc": "2954:48:7",
													"nodeType": "YulBlock",
													"src": "2954:48:7",
													"statements": [
														{
															"nativeSrc": "2964:32:7",
															"nodeType": "YulAssignment",
															"src": "2964:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:7"
																		},
																		"nativeSrc": "2982:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:7"
																},
																"nativeSrc": "2975:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:7",
														"nodeType": "YulTypedName",
														"src": "2936:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:7",
														"nodeType": "YulTypedName",
														"src": "2946:7:7",
														"type": ""
													}
												],
												"src": "2912:90:7"
											},
											{
												"body": {
													"nativeSrc": "3067:50:7",
													"nodeType": "YulBlock",
													"src": "3067:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:7"
																		},
																		"nativeSrc": "3089:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:7"
																},
																"nativeSrc": "3077:34:7",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:7"
															},
															"nativeSrc": "3077:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:7",
														"nodeType": "YulTypedName",
														"src": "3055:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:7",
														"nodeType": "YulTypedName",
														"src": "3062:3:7",
														"type": ""
													}
												],
												"src": "3008:109:7"
											},
											{
												"body": {
													"nativeSrc": "3215:118:7",
													"nodeType": "YulBlock",
													"src": "3215:118:7",
													"statements": [
														{
															"nativeSrc": "3225:26:7",
															"nodeType": "YulAssignment",
															"src": "3225:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:7"
																},
																"nativeSrc": "3233:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:7"
																		},
																		"nativeSrc": "3308:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:7"
																},
																"nativeSrc": "3261:65:7",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:7"
															},
															"nativeSrc": "3261:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:7",
														"nodeType": "YulTypedName",
														"src": "3187:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:7",
														"nodeType": "YulTypedName",
														"src": "3199:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:7",
														"nodeType": "YulTypedName",
														"src": "3210:4:7",
														"type": ""
													}
												],
												"src": "3123:210:7"
											},
											{
												"body": {
													"nativeSrc": "3404:53:7",
													"nodeType": "YulBlock",
													"src": "3404:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:7"
																		},
																		"nativeSrc": "3426:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:7"
																},
																"nativeSrc": "3414:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:7"
															},
															"nativeSrc": "3414:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:7",
														"nodeType": "YulTypedName",
														"src": "3392:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:7",
														"nodeType": "YulTypedName",
														"src": "3399:3:7",
														"type": ""
													}
												],
												"src": "3339:118:7"
											},
											{
												"body": {
													"nativeSrc": "3561:124:7",
													"nodeType": "YulBlock",
													"src": "3561:124:7",
													"statements": [
														{
															"nativeSrc": "3571:26:7",
															"nodeType": "YulAssignment",
															"src": "3571:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:7"
																},
																"nativeSrc": "3579:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:7"
																		},
																		"nativeSrc": "3660:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:7"
																},
																"nativeSrc": "3607:71:7",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:7"
															},
															"nativeSrc": "3607:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:7",
														"nodeType": "YulTypedName",
														"src": "3533:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:7",
														"nodeType": "YulTypedName",
														"src": "3545:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:7",
														"nodeType": "YulTypedName",
														"src": "3556:4:7",
														"type": ""
													}
												],
												"src": "3463:222:7"
											},
											{
												"body": {
													"nativeSrc": "3791:519:7",
													"nodeType": "YulBlock",
													"src": "3791:519:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:7",
																"nodeType": "YulBlock",
																"src": "3837:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:7"
																			},
																			"nativeSrc": "3839:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:7"
																		},
																		"nativeSrc": "3839:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:7"
																		},
																		"nativeSrc": "3808:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:7"
																},
																"nativeSrc": "3804:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:7"
															},
															"nativeSrc": "3801:119:7",
															"nodeType": "YulIf",
															"src": "3801:119:7"
														},
														{
															"nativeSrc": "3930:117:7",
															"nodeType": "YulBlock",
															"src": "3930:117:7",
															"statements": [
																{
																	"nativeSrc": "3945:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:7"
																				},
																				"nativeSrc": "4005:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:7"
																		},
																		"nativeSrc": "3984:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:7",
															"nodeType": "YulBlock",
															"src": "4057:118:7",
															"statements": [
																{
																	"nativeSrc": "4072:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:7"
																				},
																				"nativeSrc": "4133:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:7"
																		},
																		"nativeSrc": "4112:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:7",
															"nodeType": "YulBlock",
															"src": "4185:118:7",
															"statements": [
																{
																	"nativeSrc": "4200:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:7"
																				},
																				"nativeSrc": "4261:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:7"
																		},
																		"nativeSrc": "4240:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:7",
														"nodeType": "YulTypedName",
														"src": "3745:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:7",
														"nodeType": "YulTypedName",
														"src": "3756:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:7",
														"nodeType": "YulTypedName",
														"src": "3768:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:7",
														"nodeType": "YulTypedName",
														"src": "3776:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:7",
														"nodeType": "YulTypedName",
														"src": "3784:6:7",
														"type": ""
													}
												],
												"src": "3691:619:7"
											},
											{
												"body": {
													"nativeSrc": "4359:43:7",
													"nodeType": "YulBlock",
													"src": "4359:43:7",
													"statements": [
														{
															"nativeSrc": "4369:27:7",
															"nodeType": "YulAssignment",
															"src": "4369:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4384:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4384:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4391:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4391:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4380:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4380:3:7"
																},
																"nativeSrc": "4380:16:7",
																"nodeType": "YulFunctionCall",
																"src": "4380:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4369:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "4369:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4316:86:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4341:5:7",
														"nodeType": "YulTypedName",
														"src": "4341:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4351:7:7",
														"nodeType": "YulTypedName",
														"src": "4351:7:7",
														"type": ""
													}
												],
												"src": "4316:86:7"
											},
											{
												"body": {
													"nativeSrc": "4469:51:7",
													"nodeType": "YulBlock",
													"src": "4469:51:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4486:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4486:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4507:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4507:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4491:15:7",
																			"nodeType": "YulIdentifier",
																			"src": "4491:15:7"
																		},
																		"nativeSrc": "4491:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4491:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4479:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:7"
																},
																"nativeSrc": "4479:35:7",
																"nodeType": "YulFunctionCall",
																"src": "4479:35:7"
															},
															"nativeSrc": "4479:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "4479:35:7"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4408:112:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4457:5:7",
														"nodeType": "YulTypedName",
														"src": "4457:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4464:3:7",
														"nodeType": "YulTypedName",
														"src": "4464:3:7",
														"type": ""
													}
												],
												"src": "4408:112:7"
											},
											{
												"body": {
													"nativeSrc": "4620:120:7",
													"nodeType": "YulBlock",
													"src": "4620:120:7",
													"statements": [
														{
															"nativeSrc": "4630:26:7",
															"nodeType": "YulAssignment",
															"src": "4630:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4642:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4638:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:7"
																},
																"nativeSrc": "4638:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4638:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4630:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4630:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4706:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4706:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4719:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4719:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4730:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4730:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4715:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:7"
																		},
																		"nativeSrc": "4715:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4715:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4666:39:7",
																	"nodeType": "YulIdentifier",
																	"src": "4666:39:7"
																},
																"nativeSrc": "4666:67:7",
																"nodeType": "YulFunctionCall",
																"src": "4666:67:7"
															},
															"nativeSrc": "4666:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "4666:67:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4526:214:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4592:9:7",
														"nodeType": "YulTypedName",
														"src": "4592:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4604:6:7",
														"nodeType": "YulTypedName",
														"src": "4604:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4615:4:7",
														"nodeType": "YulTypedName",
														"src": "4615:4:7",
														"type": ""
													}
												],
												"src": "4526:214:7"
											},
											{
												"body": {
													"nativeSrc": "4812:263:7",
													"nodeType": "YulBlock",
													"src": "4812:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4858:83:7",
																"nodeType": "YulBlock",
																"src": "4858:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4860:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "4860:77:7"
																			},
																			"nativeSrc": "4860:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4860:79:7"
																		},
																		"nativeSrc": "4860:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4860:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4833:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4833:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4842:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4842:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4829:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4829:3:7"
																		},
																		"nativeSrc": "4829:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4829:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4854:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4854:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4825:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4825:3:7"
																},
																"nativeSrc": "4825:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4825:32:7"
															},
															"nativeSrc": "4822:119:7",
															"nodeType": "YulIf",
															"src": "4822:119:7"
														},
														{
															"nativeSrc": "4951:117:7",
															"nodeType": "YulBlock",
															"src": "4951:117:7",
															"statements": [
																{
																	"nativeSrc": "4966:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4966:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4980:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4980:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4970:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4970:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4995:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4995:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5030:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5030:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5041:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5041:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5026:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5026:3:7"
																				},
																				"nativeSrc": "5026:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5026:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5050:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5050:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5005:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5005:20:7"
																		},
																		"nativeSrc": "5005:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4995:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4995:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "4746:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4782:9:7",
														"nodeType": "YulTypedName",
														"src": "4782:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4793:7:7",
														"nodeType": "YulTypedName",
														"src": "4793:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4805:6:7",
														"nodeType": "YulTypedName",
														"src": "4805:6:7",
														"type": ""
													}
												],
												"src": "4746:329:7"
											},
											{
												"body": {
													"nativeSrc": "5147:263:7",
													"nodeType": "YulBlock",
													"src": "5147:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5193:83:7",
																"nodeType": "YulBlock",
																"src": "5193:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5195:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5195:77:7"
																			},
																			"nativeSrc": "5195:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5195:79:7"
																		},
																		"nativeSrc": "5195:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5195:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5168:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5168:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5177:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5177:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5164:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5164:3:7"
																		},
																		"nativeSrc": "5164:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5164:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5189:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5189:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5160:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5160:3:7"
																},
																"nativeSrc": "5160:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5160:32:7"
															},
															"nativeSrc": "5157:119:7",
															"nodeType": "YulIf",
															"src": "5157:119:7"
														},
														{
															"nativeSrc": "5286:117:7",
															"nodeType": "YulBlock",
															"src": "5286:117:7",
															"statements": [
																{
																	"nativeSrc": "5301:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5301:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5315:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5315:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5305:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5305:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5330:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5330:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5365:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5365:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5376:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5376:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5361:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5361:3:7"
																				},
																				"nativeSrc": "5361:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5361:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5385:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5385:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5340:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5340:20:7"
																		},
																		"nativeSrc": "5340:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5340:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5330:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5330:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5081:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5117:9:7",
														"nodeType": "YulTypedName",
														"src": "5117:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5128:7:7",
														"nodeType": "YulTypedName",
														"src": "5128:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5140:6:7",
														"nodeType": "YulTypedName",
														"src": "5140:6:7",
														"type": ""
													}
												],
												"src": "5081:329:7"
											},
											{
												"body": {
													"nativeSrc": "5481:53:7",
													"nodeType": "YulBlock",
													"src": "5481:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5498:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5498:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5521:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5521:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5503:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "5503:17:7"
																		},
																		"nativeSrc": "5503:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5503:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5491:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5491:6:7"
																},
																"nativeSrc": "5491:37:7",
																"nodeType": "YulFunctionCall",
																"src": "5491:37:7"
															},
															"nativeSrc": "5491:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "5491:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5416:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5469:5:7",
														"nodeType": "YulTypedName",
														"src": "5469:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5476:3:7",
														"nodeType": "YulTypedName",
														"src": "5476:3:7",
														"type": ""
													}
												],
												"src": "5416:118:7"
											},
											{
												"body": {
													"nativeSrc": "5638:124:7",
													"nodeType": "YulBlock",
													"src": "5638:124:7",
													"statements": [
														{
															"nativeSrc": "5648:26:7",
															"nodeType": "YulAssignment",
															"src": "5648:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5660:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5660:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5671:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5671:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5656:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5656:3:7"
																},
																"nativeSrc": "5656:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5656:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5648:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5648:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5728:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5728:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5741:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5741:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5752:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5752:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5737:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5737:3:7"
																		},
																		"nativeSrc": "5737:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5737:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5684:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "5684:43:7"
																},
																"nativeSrc": "5684:71:7",
																"nodeType": "YulFunctionCall",
																"src": "5684:71:7"
															},
															"nativeSrc": "5684:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "5684:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5540:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5610:9:7",
														"nodeType": "YulTypedName",
														"src": "5610:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5622:6:7",
														"nodeType": "YulTypedName",
														"src": "5622:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5633:4:7",
														"nodeType": "YulTypedName",
														"src": "5633:4:7",
														"type": ""
													}
												],
												"src": "5540:222:7"
											},
											{
												"body": {
													"nativeSrc": "5851:391:7",
													"nodeType": "YulBlock",
													"src": "5851:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5897:83:7",
																"nodeType": "YulBlock",
																"src": "5897:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5899:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5899:77:7"
																			},
																			"nativeSrc": "5899:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5899:79:7"
																		},
																		"nativeSrc": "5899:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5899:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5872:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5872:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5881:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5881:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5868:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5868:3:7"
																		},
																		"nativeSrc": "5868:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5868:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5893:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5893:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5864:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5864:3:7"
																},
																"nativeSrc": "5864:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5864:32:7"
															},
															"nativeSrc": "5861:119:7",
															"nodeType": "YulIf",
															"src": "5861:119:7"
														},
														{
															"nativeSrc": "5990:117:7",
															"nodeType": "YulBlock",
															"src": "5990:117:7",
															"statements": [
																{
																	"nativeSrc": "6005:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6005:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6019:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6019:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6009:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6009:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6034:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6034:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6069:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6069:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6080:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6080:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6065:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6065:3:7"
																				},
																				"nativeSrc": "6065:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6065:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6089:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6089:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6044:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6044:20:7"
																		},
																		"nativeSrc": "6044:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6044:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6034:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6034:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6117:118:7",
															"nodeType": "YulBlock",
															"src": "6117:118:7",
															"statements": [
																{
																	"nativeSrc": "6132:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6132:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6146:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6146:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6136:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6136:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6162:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6162:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6197:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6197:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6208:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6208:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6193:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6193:3:7"
																				},
																				"nativeSrc": "6193:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6193:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6217:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6217:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6172:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6172:20:7"
																		},
																		"nativeSrc": "6172:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6172:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6162:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6162:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5768:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5813:9:7",
														"nodeType": "YulTypedName",
														"src": "5813:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5824:7:7",
														"nodeType": "YulTypedName",
														"src": "5824:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5836:6:7",
														"nodeType": "YulTypedName",
														"src": "5836:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5844:6:7",
														"nodeType": "YulTypedName",
														"src": "5844:6:7",
														"type": ""
													}
												],
												"src": "5768:474:7"
											},
											{
												"body": {
													"nativeSrc": "6276:152:7",
													"nodeType": "YulBlock",
													"src": "6276:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6293:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6293:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6296:77:7",
																		"nodeType": "YulLiteral",
																		"src": "6296:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6286:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6286:6:7"
																},
																"nativeSrc": "6286:88:7",
																"nodeType": "YulFunctionCall",
																"src": "6286:88:7"
															},
															"nativeSrc": "6286:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "6286:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6390:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6390:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6393:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6393:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6383:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6383:6:7"
																},
																"nativeSrc": "6383:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6383:15:7"
															},
															"nativeSrc": "6383:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6383:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6414:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6414:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6417:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6417:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6407:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6407:6:7"
																},
																"nativeSrc": "6407:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6407:15:7"
															},
															"nativeSrc": "6407:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6407:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "6248:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "6248:180:7"
											},
											{
												"body": {
													"nativeSrc": "6485:269:7",
													"nodeType": "YulBlock",
													"src": "6485:269:7",
													"statements": [
														{
															"nativeSrc": "6495:22:7",
															"nodeType": "YulAssignment",
															"src": "6495:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6509:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6509:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6515:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6515:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6505:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6505:3:7"
																},
																"nativeSrc": "6505:12:7",
																"nodeType": "YulFunctionCall",
																"src": "6505:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6495:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6495:6:7"
																}
															]
														},
														{
															"nativeSrc": "6526:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6526:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6556:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6556:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6562:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6562:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6552:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6552:3:7"
																},
																"nativeSrc": "6552:12:7",
																"nodeType": "YulFunctionCall",
																"src": "6552:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6530:18:7",
																	"nodeType": "YulTypedName",
																	"src": "6530:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6603:51:7",
																"nodeType": "YulBlock",
																"src": "6603:51:7",
																"statements": [
																	{
																		"nativeSrc": "6617:27:7",
																		"nodeType": "YulAssignment",
																		"src": "6617:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6631:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "6631:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6639:4:7",
																					"nodeType": "YulLiteral",
																					"src": "6639:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6627:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6627:3:7"
																			},
																			"nativeSrc": "6627:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6627:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6617:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6617:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6583:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "6583:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6576:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6576:6:7"
																},
																"nativeSrc": "6576:26:7",
																"nodeType": "YulFunctionCall",
																"src": "6576:26:7"
															},
															"nativeSrc": "6573:81:7",
															"nodeType": "YulIf",
															"src": "6573:81:7"
														},
														{
															"body": {
																"nativeSrc": "6706:42:7",
																"nodeType": "YulBlock",
																"src": "6706:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6720:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "6720:16:7"
																			},
																			"nativeSrc": "6720:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6720:18:7"
																		},
																		"nativeSrc": "6720:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6720:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6670:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "6670:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6693:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6693:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6701:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6701:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6690:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "6690:2:7"
																		},
																		"nativeSrc": "6690:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6690:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6667:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6667:2:7"
																},
																"nativeSrc": "6667:38:7",
																"nodeType": "YulFunctionCall",
																"src": "6667:38:7"
															},
															"nativeSrc": "6664:84:7",
															"nodeType": "YulIf",
															"src": "6664:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6434:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6469:4:7",
														"nodeType": "YulTypedName",
														"src": "6469:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6478:6:7",
														"nodeType": "YulTypedName",
														"src": "6478:6:7",
														"type": ""
													}
												],
												"src": "6434:320:7"
											},
											{
												"body": {
													"nativeSrc": "6914:288:7",
													"nodeType": "YulBlock",
													"src": "6914:288:7",
													"statements": [
														{
															"nativeSrc": "6924:26:7",
															"nodeType": "YulAssignment",
															"src": "6924:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6936:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6936:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6947:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6947:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6932:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6932:3:7"
																},
																"nativeSrc": "6932:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6932:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6924:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6924:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7004:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7004:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7017:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7017:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7028:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7028:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7013:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7013:3:7"
																		},
																		"nativeSrc": "7013:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7013:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6960:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6960:43:7"
																},
																"nativeSrc": "6960:71:7",
																"nodeType": "YulFunctionCall",
																"src": "6960:71:7"
															},
															"nativeSrc": "6960:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "6960:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7085:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7085:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7098:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7098:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7109:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7109:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7094:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7094:3:7"
																		},
																		"nativeSrc": "7094:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7094:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7041:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7041:43:7"
																},
																"nativeSrc": "7041:72:7",
																"nodeType": "YulFunctionCall",
																"src": "7041:72:7"
															},
															"nativeSrc": "7041:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "7041:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7167:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7167:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7180:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7180:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7191:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7191:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7176:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7176:3:7"
																		},
																		"nativeSrc": "7176:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7176:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7123:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7123:43:7"
																},
																"nativeSrc": "7123:72:7",
																"nodeType": "YulFunctionCall",
																"src": "7123:72:7"
															},
															"nativeSrc": "7123:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "7123:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6760:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6870:9:7",
														"nodeType": "YulTypedName",
														"src": "6870:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6882:6:7",
														"nodeType": "YulTypedName",
														"src": "6882:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6890:6:7",
														"nodeType": "YulTypedName",
														"src": "6890:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6898:6:7",
														"nodeType": "YulTypedName",
														"src": "6898:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6909:4:7",
														"nodeType": "YulTypedName",
														"src": "6909:4:7",
														"type": ""
													}
												],
												"src": "6760:442:7"
											},
											{
												"body": {
													"nativeSrc": "7236:152:7",
													"nodeType": "YulBlock",
													"src": "7236:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7253:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7253:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7256:77:7",
																		"nodeType": "YulLiteral",
																		"src": "7256:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7246:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7246:6:7"
																},
																"nativeSrc": "7246:88:7",
																"nodeType": "YulFunctionCall",
																"src": "7246:88:7"
															},
															"nativeSrc": "7246:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "7246:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7350:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7350:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7353:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7353:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7343:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7343:6:7"
																},
																"nativeSrc": "7343:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7343:15:7"
															},
															"nativeSrc": "7343:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7343:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7374:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7374:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7377:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7377:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7367:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7367:6:7"
																},
																"nativeSrc": "7367:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7367:15:7"
															},
															"nativeSrc": "7367:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7367:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7208:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "7208:180:7"
											},
											{
												"body": {
													"nativeSrc": "7438:147:7",
													"nodeType": "YulBlock",
													"src": "7438:147:7",
													"statements": [
														{
															"nativeSrc": "7448:25:7",
															"nodeType": "YulAssignment",
															"src": "7448:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7471:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7471:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7453:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "7453:17:7"
																},
																"nativeSrc": "7453:20:7",
																"nodeType": "YulFunctionCall",
																"src": "7453:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7448:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "7448:1:7"
																}
															]
														},
														{
															"nativeSrc": "7482:25:7",
															"nodeType": "YulAssignment",
															"src": "7482:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7505:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7505:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7487:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "7487:17:7"
																},
																"nativeSrc": "7487:20:7",
																"nodeType": "YulFunctionCall",
																"src": "7487:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7482:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "7482:1:7"
																}
															]
														},
														{
															"nativeSrc": "7516:16:7",
															"nodeType": "YulAssignment",
															"src": "7516:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7527:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7527:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7530:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7530:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7523:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7523:3:7"
																},
																"nativeSrc": "7523:9:7",
																"nodeType": "YulFunctionCall",
																"src": "7523:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7516:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7516:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7556:22:7",
																"nodeType": "YulBlock",
																"src": "7556:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7558:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "7558:16:7"
																			},
																			"nativeSrc": "7558:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7558:18:7"
																		},
																		"nativeSrc": "7558:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7558:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7548:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7548:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7551:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7551:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7545:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7545:2:7"
																},
																"nativeSrc": "7545:10:7",
																"nodeType": "YulFunctionCall",
																"src": "7545:10:7"
															},
															"nativeSrc": "7542:36:7",
															"nodeType": "YulIf",
															"src": "7542:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7394:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7425:1:7",
														"nodeType": "YulTypedName",
														"src": "7425:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7428:1:7",
														"nodeType": "YulTypedName",
														"src": "7428:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7434:3:7",
														"nodeType": "YulTypedName",
														"src": "7434:3:7",
														"type": ""
													}
												],
												"src": "7394:191:7"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x302 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x266 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x57915897 EQ PUSH2 0x1F4 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x10A PUSH2 0x31E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0xEDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x135 SWAP2 SWAP1 PUSH2 0xF8B JUMP JUMPDEST PUSH2 0x3AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x147 SWAP2 SWAP1 PUSH2 0xFE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x158 PUSH2 0x3D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x165 SWAP2 SWAP1 PUSH2 0x100B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x1024 JUMP JUMPDEST PUSH2 0x3D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0xFE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A6 PUSH2 0x407 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0x108F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0xF8B JUMP JUMPDEST PUSH2 0x41D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0x10A8 JUMP JUMPDEST PUSH2 0x433 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x10A8 JUMP JUMPDEST PUSH2 0x440 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x225 SWAP2 SWAP1 PUSH2 0x10D3 JUMP JUMPDEST PUSH2 0x44D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x100B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x248 PUSH2 0x492 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x264 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25F SWAP2 SWAP1 PUSH2 0xF8B JUMP JUMPDEST PUSH2 0x4A5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26E PUSH2 0x4BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27B SWAP2 SWAP1 PUSH2 0x110D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28C PUSH2 0x4E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x299 SWAP2 SWAP1 PUSH2 0xEDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0xF8B JUMP JUMPDEST PUSH2 0x576 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0xFE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E7 SWAP2 SWAP1 PUSH2 0x1126 JUMP JUMPDEST PUSH2 0x598 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x100B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x10D3 JUMP JUMPDEST PUSH2 0x61A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x32D SWAP1 PUSH2 0x1191 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x359 SWAP1 PUSH2 0x1191 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3A4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x37B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3A4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x387 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x3B8 PUSH2 0x69E JUMP JUMPDEST SWAP1 POP PUSH2 0x3C5 DUP2 DUP6 DUP6 PUSH2 0x6A5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x3E3 PUSH2 0x69E JUMP JUMPDEST SWAP1 POP PUSH2 0x3F0 DUP6 DUP3 DUP6 PUSH2 0x6B7 JUMP JUMPDEST PUSH2 0x3FB DUP6 DUP6 DUP6 PUSH2 0x74A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x425 PUSH2 0x83A JUMP JUMPDEST PUSH2 0x42F DUP3 DUP3 PUSH2 0x8C1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x43D CALLER DUP3 PUSH2 0x940 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x44A CALLER DUP3 PUSH2 0x8C1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x49A PUSH2 0x83A JUMP JUMPDEST PUSH2 0x4A3 PUSH0 PUSH2 0x9BF JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x4B0 DUP3 CALLER DUP4 PUSH2 0x6B7 JUMP JUMPDEST PUSH2 0x4BA DUP3 DUP3 PUSH2 0x940 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x4F5 SWAP1 PUSH2 0x1191 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x521 SWAP1 PUSH2 0x1191 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x56C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x543 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x56C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x54F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x580 PUSH2 0x69E JUMP JUMPDEST SWAP1 POP PUSH2 0x58D DUP2 DUP6 DUP6 PUSH2 0x74A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x622 PUSH2 0x83A JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x692 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x689 SWAP2 SWAP1 PUSH2 0x110D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x69B DUP2 PUSH2 0x9BF JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6B2 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xA82 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6C2 DUP5 DUP5 PUSH2 0x598 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x744 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x735 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x743 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xA82 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7BA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B1 SWAP2 SWAP1 PUSH2 0x110D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x82A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x821 SWAP2 SWAP1 PUSH2 0x110D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x835 DUP4 DUP4 DUP4 PUSH2 0xC51 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x842 PUSH2 0x69E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x860 PUSH2 0x4BE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8BF JUMPI PUSH2 0x883 PUSH2 0x69E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B6 SWAP2 SWAP1 PUSH2 0x110D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x931 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x928 SWAP2 SWAP1 PUSH2 0x110D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x93C PUSH0 DUP4 DUP4 PUSH2 0xC51 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9B0 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A7 SWAP2 SWAP1 PUSH2 0x110D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9BB DUP3 PUSH0 DUP4 PUSH2 0xC51 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAF2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE9 SWAP2 SWAP1 PUSH2 0x110D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB62 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB59 SWAP2 SWAP1 PUSH2 0x110D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xC4B JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xC42 SWAP2 SWAP1 PUSH2 0x100B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCA1 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC95 SWAP2 SWAP1 PUSH2 0x1223 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xD6F JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xD2A JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD21 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDB6 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xE00 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xE5D SWAP2 SWAP1 PUSH2 0x100B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xEAC DUP3 PUSH2 0xE6A JUMP JUMPDEST PUSH2 0xEB6 DUP2 DUP6 PUSH2 0xE74 JUMP JUMPDEST SWAP4 POP PUSH2 0xEC6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xE84 JUMP JUMPDEST PUSH2 0xECF DUP2 PUSH2 0xE92 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEF2 DUP2 DUP5 PUSH2 0xEA2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF27 DUP3 PUSH2 0xEFE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF37 DUP2 PUSH2 0xF1D JUMP JUMPDEST DUP2 EQ PUSH2 0xF41 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF52 DUP2 PUSH2 0xF2E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF6A DUP2 PUSH2 0xF58 JUMP JUMPDEST DUP2 EQ PUSH2 0xF74 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF85 DUP2 PUSH2 0xF61 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFA1 JUMPI PUSH2 0xFA0 PUSH2 0xEFA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFAE DUP6 DUP3 DUP7 ADD PUSH2 0xF44 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xFBF DUP6 DUP3 DUP7 ADD PUSH2 0xF77 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFDD DUP2 PUSH2 0xFC9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFF6 PUSH0 DUP4 ADD DUP5 PUSH2 0xFD4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1005 DUP2 PUSH2 0xF58 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x101E PUSH0 DUP4 ADD DUP5 PUSH2 0xFFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x103B JUMPI PUSH2 0x103A PUSH2 0xEFA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1048 DUP7 DUP3 DUP8 ADD PUSH2 0xF44 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1059 DUP7 DUP3 DUP8 ADD PUSH2 0xF44 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x106A DUP7 DUP3 DUP8 ADD PUSH2 0xF77 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1089 DUP2 PUSH2 0x1074 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10A2 PUSH0 DUP4 ADD DUP5 PUSH2 0x1080 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10BD JUMPI PUSH2 0x10BC PUSH2 0xEFA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10CA DUP5 DUP3 DUP6 ADD PUSH2 0xF77 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10E8 JUMPI PUSH2 0x10E7 PUSH2 0xEFA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10F5 DUP5 DUP3 DUP6 ADD PUSH2 0xF44 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1107 DUP2 PUSH2 0xF1D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1120 PUSH0 DUP4 ADD DUP5 PUSH2 0x10FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x113C JUMPI PUSH2 0x113B PUSH2 0xEFA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1149 DUP6 DUP3 DUP7 ADD PUSH2 0xF44 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x115A DUP6 DUP3 DUP7 ADD PUSH2 0xF44 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x11A8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x11BB JUMPI PUSH2 0x11BA PUSH2 0x1164 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x11D4 PUSH0 DUP4 ADD DUP7 PUSH2 0x10FE JUMP JUMPDEST PUSH2 0x11E1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xFFC JUMP JUMPDEST PUSH2 0x11EE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xFFC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x122D DUP3 PUSH2 0xF58 JUMP JUMPDEST SWAP2 POP PUSH2 0x1238 DUP4 PUSH2 0xF58 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1250 JUMPI PUSH2 0x124F PUSH2 0x11F6 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0x9026D98839C94C18FA2C409E1BACEF092D0F27 SUB SMOD SWAP10 0xD8 0xBC PUSH30 0x61BE047CC4DD64736F6C634300081E003300000000000000000000000000 ",
							"sourceMap": "330:1880:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3902:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2803:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4680:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1044:100:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1343:97;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1889:83;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1598:85;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2933:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;2051:156:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3244:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3455:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1760:89:2;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3902:186::-;3975:4;3991:13;4007:12;:10;:12::i;:::-;3991:28;;4029:31;4038:5;4045:7;4054:5;4029:8;:31::i;:::-;4077:4;4070:11;;;3902:186;;;;:::o;2803:97::-;2855:7;2881:12;;2874:19;;2803:97;:::o;4680:244::-;4767:4;4783:15;4801:12;:10;:12::i;:::-;4783:30;;4823:37;4839:4;4845:7;4854:5;4823:15;:37::i;:::-;4870:26;4880:4;4886:2;4890:5;4870:9;:26::i;:::-;4913:4;4906:11;;;4680:244;;;;;:::o;1044:100:6:-;1102:5;1127:9;;;;;;;;;;;1120:16;;1044:100;:::o;1343:97::-;1531:13:0;:11;:13::i;:::-;1415:17:6::1;1421:2;1425:6;1415:5;:17::i;:::-;1343:97:::0;;:::o;1889:83::-;1939:25;1945:10;1957:6;1939:5;:25::i;:::-;1889:83;:::o;1598:85::-;1650:25;1656:10;1668:6;1650:5;:25::i;:::-;1598:85;:::o;2933:116:2:-;2998:7;3024:9;:18;3034:7;3024:18;;;;;;;;;;;;;;;;3017:25;;2933:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2051:156:6:-;2122:44;2138:7;2147:10;2159:6;2122:15;:44::i;:::-;2177:22;2183:7;2192:6;2177:5;:22::i;:::-;2051:156;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1962:93:2:-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;3244:178::-;3313:4;3329:13;3345:12;:10;:12::i;:::-;3329:28;;3367:27;3377:5;3384:2;3388:5;3367:9;:27::i;:::-;3411:4;3404:11;;;3244:178;;;;:::o;3455:140::-;3535:7;3561:11;:18;3573:5;3561:18;;;;;;;;;;;;;;;:27;3580:7;3561:27;;;;;;;;;;;;;;;;3554:34;;3455:140;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8630:128:2:-;8714:37;8723:5;8730:7;8739:5;8746:4;8714:8;:37::i;:::-;8630:128;;;:::o;10319:476::-;10418:24;10445:25;10455:5;10462:7;10445:9;:25::i;:::-;10418:52;;10503:17;10484:16;:36;10480:309;;;10559:5;10540:16;:24;10536:130;;;10618:7;10627:16;10645:5;10591:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10536:130;10707:57;10716:5;10723:7;10751:5;10732:16;:24;10758:5;10707:8;:57::i;:::-;10480:309;10408:387;10319:476;;;:::o;5297:300::-;5396:1;5380:18;;:4;:18;;;5376:86;;5448:1;5421:30;;;;;;;;;;;:::i;:::-;;;;;;;;5376:86;5489:1;5475:16;;:2;:16;;;5471:86;;5543:1;5514:32;;;;;;;;;;;:::i;:::-;;;;;;;;5471:86;5566:24;5574:4;5580:2;5584:5;5566:7;:24::i;:::-;5297:300;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;7362:208:2:-;7451:1;7432:21;;:7;:21;;;7428:91;;7505:1;7476:32;;;;;;;;;;;:::i;:::-;;;;;;;;7428:91;7528:35;7544:1;7548:7;7557:5;7528:7;:35::i;:::-;7362:208;;:::o;7888:206::-;7977:1;7958:21;;:7;:21;;;7954:89;;8029:1;8002:30;;;;;;;;;;;:::i;:::-;;;;;;;;7954:89;8052:35;8060:7;8077:1;8081:5;8052:7;:35::i;:::-;7888:206;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;9605:432:2:-;9734:1;9717:19;;:5;:19;;;9713:89;;9788:1;9759:32;;;;;;;;;;;:::i;:::-;;;;;;;;9713:89;9834:1;9815:21;;:7;:21;;;9811:90;;9887:1;9859:31;;;;;;;;;;;:::i;:::-;;;;;;;;9811:90;9940:5;9910:11;:18;9922:5;9910:18;;;;;;;;;;;;;;;:27;9929:7;9910:27;;;;;;;;;;;;;;;:35;;;;9959:9;9955:76;;;10005:7;9989:31;;9998:5;9989:31;;;10014:5;9989:31;;;;;;:::i;:::-;;;;;;;;9955:76;9605:432;;;;:::o;5912:1107::-;6017:1;6001:18;;:4;:18;;;5997:540;;6153:5;6137:12;;:21;;;;;;;:::i;:::-;;;;;;;;5997:540;;;6189:19;6211:9;:15;6221:4;6211:15;;;;;;;;;;;;;;;;6189:37;;6258:5;6244:11;:19;6240:115;;;6315:4;6321:11;6334:5;6290:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6240:115;6507:5;6493:11;:19;6475:9;:15;6485:4;6475:15;;;;;;;;;;;;;;;:37;;;;6175:362;5997:540;6565:1;6551:16;;:2;:16;;;6547:425;;6730:5;6714:12;;:21;;;;;;;;;;;6547:425;;;6942:5;6925:9;:13;6935:2;6925:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6547:425;7002:2;6987:25;;6996:4;6987:25;;;7006:5;6987:25;;;;;;:::i;:::-;;;;;;;;5912:1107;;;:::o;7:99:7:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:86::-;4351:7;4391:4;4384:5;4380:16;4369:27;;4316:86;;;:::o;4408:112::-;4491:22;4507:5;4491:22;:::i;:::-;4486:3;4479:35;4408:112;;:::o;4526:214::-;4615:4;4653:2;4642:9;4638:18;4630:26;;4666:67;4730:1;4719:9;4715:17;4706:6;4666:67;:::i;:::-;4526:214;;;;:::o;4746:329::-;4805:6;4854:2;4842:9;4833:7;4829:23;4825:32;4822:119;;;4860:79;;:::i;:::-;4822:119;4980:1;5005:53;5050:7;5041:6;5030:9;5026:22;5005:53;:::i;:::-;4995:63;;4951:117;4746:329;;;;:::o;5081:::-;5140:6;5189:2;5177:9;5168:7;5164:23;5160:32;5157:119;;;5195:79;;:::i;:::-;5157:119;5315:1;5340:53;5385:7;5376:6;5365:9;5361:22;5340:53;:::i;:::-;5330:63;;5286:117;5081:329;;;;:::o;5416:118::-;5503:24;5521:5;5503:24;:::i;:::-;5498:3;5491:37;5416:118;;:::o;5540:222::-;5633:4;5671:2;5660:9;5656:18;5648:26;;5684:71;5752:1;5741:9;5737:17;5728:6;5684:71;:::i;:::-;5540:222;;;;:::o;5768:474::-;5836:6;5844;5893:2;5881:9;5872:7;5868:23;5864:32;5861:119;;;5899:79;;:::i;:::-;5861:119;6019:1;6044:53;6089:7;6080:6;6069:9;6065:22;6044:53;:::i;:::-;6034:63;;5990:117;6146:2;6172:53;6217:7;6208:6;6197:9;6193:22;6172:53;:::i;:::-;6162:63;;6117:118;5768:474;;;;;:::o;6248:180::-;6296:77;6293:1;6286:88;6393:4;6390:1;6383:15;6417:4;6414:1;6407:15;6434:320;6478:6;6515:1;6509:4;6505:12;6495:22;;6562:1;6556:4;6552:12;6583:18;6573:81;;6639:4;6631:6;6627:17;6617:27;;6573:81;6701:2;6693:6;6690:14;6670:18;6667:38;6664:84;;6720:18;;:::i;:::-;6664:84;6485:269;6434:320;;;:::o;6760:442::-;6909:4;6947:2;6936:9;6932:18;6924:26;;6960:71;7028:1;7017:9;7013:17;7004:6;6960:71;:::i;:::-;7041:72;7109:2;7098:9;7094:18;7085:6;7041:72;:::i;:::-;7123;7191:2;7180:9;7176:18;7167:6;7123:72;:::i;:::-;6760:442;;;;;;:::o;7208:180::-;7256:77;7253:1;7246:88;7353:4;7350:1;7343:15;7377:4;7374:1;7367:15;7394:191;7434:3;7453:20;7471:1;7453:20;:::i;:::-;7448:25;;7487:20;7505:1;7487:20;:::i;:::-;7482:25;;7530:1;7527;7523:9;7516:16;;7551:3;7548:1;7545:10;7542:36;;;7558:18;;:::i;:::-;7542:36;7394:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "949600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2851",
								"burn(uint256)": "infinite",
								"burnFrom(address,uint256)": "infinite",
								"decimals()": "2547",
								"faucet(uint256)": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2604",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 330,
									"end": 2210,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 330,
									"end": 2210,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 330,
									"end": 2210,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 546,
									"end": 890,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 546,
									"end": 890,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 546,
									"end": 890,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 546,
									"end": 890,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 546,
									"end": 890,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 546,
									"end": 890,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 546,
									"end": 890,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 546,
									"end": 890,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 546,
									"end": 890,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 546,
									"end": 890,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 546,
									"end": 890,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 546,
									"end": 890,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 546,
									"end": 890,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 546,
									"end": 890,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 546,
									"end": 890,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 546,
									"end": 890,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 546,
									"end": 890,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 546,
									"end": 890,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 546,
									"end": 890,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 546,
									"end": 890,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 546,
									"end": 890,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 546,
									"end": 890,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 546,
									"end": 890,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 546,
									"end": 890,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 546,
									"end": 890,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 546,
									"end": 890,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 546,
									"end": 890,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 546,
									"end": 890,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 546,
									"end": 890,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 546,
									"end": 890,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 546,
									"end": 890,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 546,
									"end": 890,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 546,
									"end": 890,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 546,
									"end": 890,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 546,
									"end": 890,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 742,
									"end": 754,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 720,
									"end": 724,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 726,
									"end": 732,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1656,
									"end": 1661,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 779,
									"end": 788,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 767,
									"end": 776,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 767,
									"end": 776,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 767,
									"end": 788,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 767,
									"end": 788,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 767,
									"end": 788,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 767,
									"end": 788,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 767,
									"end": 788,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 767,
									"end": 788,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 767,
									"end": 788,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 767,
									"end": 788,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 767,
									"end": 788,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 767,
									"end": 788,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 767,
									"end": 788,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 767,
									"end": 788,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 767,
									"end": 788,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 767,
									"end": 788,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 767,
									"end": 788,
									"modifierDepth": 2,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 767,
									"end": 788,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 767,
									"end": 788,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 767,
									"end": 788,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 819,
									"end": 820,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 803,
									"end": 816,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 803,
									"end": 820,
									"modifierDepth": 2,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 799,
									"end": 883,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 799,
									"end": 883,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 799,
									"end": 883,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 837,
									"end": 871,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 843,
									"end": 855,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 857,
									"end": 870,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 837,
									"end": 842,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 837,
									"end": 842,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 837,
									"end": 842,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 837,
									"end": 871,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 837,
									"end": 871,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 837,
									"end": 871,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 837,
									"end": 871,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 837,
									"end": 871,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 799,
									"end": 883,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 799,
									"end": 883,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 546,
									"end": 890,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 546,
									"end": 890,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 546,
									"end": 890,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 546,
									"end": 890,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 546,
									"end": 890,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 330,
									"end": 2210,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 330,
									"end": 2210,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7362,
									"end": 7570,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7362,
									"end": 7570,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7451,
									"end": 7452,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7432,
									"end": 7439,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7432,
									"end": 7453,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7428,
									"end": 7519,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 7428,
									"end": 7519,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7505,
									"end": 7506,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH",
									"source": 2,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 7476,
									"end": 7508,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7476,
									"end": 7508,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 7428,
									"end": 7519,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 7428,
									"end": 7519,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 7544,
									"end": 7545,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7548,
									"end": 7555,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7557,
									"end": 7562,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7563,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 7528,
									"end": 7563,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7362,
									"end": 7570,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7362,
									"end": 7570,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7362,
									"end": 7570,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6017,
									"end": 6018,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6001,
									"end": 6005,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6001,
									"end": 6019,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6153,
									"end": 6158,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6149,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6137,
									"end": 6149,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 6137,
									"end": 6158,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6137,
									"end": 6158,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6189,
									"end": 6208,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6211,
									"end": 6220,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6221,
									"end": 6225,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6211,
									"end": 6226,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6189,
									"end": 6226,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6189,
									"end": 6226,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6258,
									"end": 6263,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6244,
									"end": 6255,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6244,
									"end": 6263,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6315,
									"end": 6319,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6321,
									"end": 6332,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6334,
									"end": 6339,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH",
									"source": 2,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 6290,
									"end": 6340,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "tag",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6290,
									"end": 6340,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "tag",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 6240,
									"end": 6355,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6507,
									"end": 6512,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6493,
									"end": 6504,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6493,
									"end": 6512,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6484,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6485,
									"end": 6489,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6475,
									"end": 6490,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6512,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6512,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6512,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6475,
									"end": 6512,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6175,
									"end": 6537,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 5997,
									"end": 6537,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6565,
									"end": 6566,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6551,
									"end": 6553,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6551,
									"end": 6567,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6730,
									"end": 6735,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6714,
									"end": 6726,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6714,
									"end": 6726,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6714,
									"end": 6735,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "tag",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6942,
									"end": 6947,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6934,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6935,
									"end": 6937,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6925,
									"end": 6947,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "tag",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 6547,
									"end": 6972,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7004,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6996,
									"end": 7000,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7006,
									"end": 7011,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 6987,
									"end": 7012,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "tag",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6987,
									"end": 7012,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5912,
									"end": 7019,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5912,
									"end": 7019,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "tag",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1699,
									"end": 1705,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1694,
									"end": 1697,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1689,
									"end": 1692,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1683,
									"end": 1706,
									"name": "MCOPY",
									"source": 7
								},
								{
									"begin": 1740,
									"end": 1741,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1731,
									"end": 1737,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1726,
									"end": 1729,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1722,
									"end": 1738,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1715,
									"end": 1742,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1610,
									"end": 1749,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1844,
									"end": 1849,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 1927,
									"end": 1933,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 1885,
									"end": 1934,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "tag",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 1869,
									"end": 1935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "tag",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1958,
									"end": 1964,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1944,
									"end": 1965,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1996,
									"end": 2000,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1989,
									"end": 1994,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1985,
									"end": 2001,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2034,
									"end": 2037,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2025,
									"end": 2031,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2020,
									"end": 2023,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2016,
									"end": 2032,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2013,
									"end": 2038,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 2041,
									"end": 2120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "tag",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "tag",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 2176,
									"end": 2182,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2171,
									"end": 2174,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 2131,
									"end": 2183,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "tag",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1850,
									"end": 2189,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1755,
									"end": 2189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2276,
									"end": 2281,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2325,
									"end": 2328,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2310,
									"end": 2316,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2306,
									"end": 2323,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2302,
									"end": 2329,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "112"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 2333,
									"end": 2412,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "tag",
									"source": 7,
									"value": "112"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "tag",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2443,
									"end": 2449,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2437,
									"end": 2450,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 2554,
									"end": 2557,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2546,
									"end": 2552,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2539,
									"end": 2543,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2531,
									"end": 2537,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 2468,
									"end": 2558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "tag",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2282,
									"end": 2564,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2209,
									"end": 2564,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2570,
									"end": 2656,
									"name": "tag",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 2570,
									"end": 2656,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2605,
									"end": 2612,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2645,
									"end": 2649,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 2638,
									"end": 2643,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2634,
									"end": 2650,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2623,
									"end": 2650,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2623,
									"end": 2650,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2570,
									"end": 2656,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2570,
									"end": 2656,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2570,
									"end": 2656,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2570,
									"end": 2656,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2662,
									"end": 2780,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 2662,
									"end": 2780,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2733,
									"end": 2755,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 2749,
									"end": 2754,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2733,
									"end": 2755,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 2733,
									"end": 2755,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2733,
									"end": 2755,
									"name": "tag",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 2733,
									"end": 2755,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2726,
									"end": 2731,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2723,
									"end": 2756,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 2713,
									"end": 2774,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "117"
								},
								{
									"begin": 2713,
									"end": 2774,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2770,
									"end": 2771,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2767,
									"end": 2768,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2760,
									"end": 2772,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 2713,
									"end": 2774,
									"name": "tag",
									"source": 7,
									"value": "117"
								},
								{
									"begin": 2713,
									"end": 2774,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2662,
									"end": 2780,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2662,
									"end": 2780,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2786,
									"end": 2925,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 2786,
									"end": 2925,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2841,
									"end": 2846,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2872,
									"end": 2878,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2866,
									"end": 2879,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2857,
									"end": 2879,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2857,
									"end": 2879,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2888,
									"end": 2919,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 2913,
									"end": 2918,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2888,
									"end": 2919,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 2888,
									"end": 2919,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2888,
									"end": 2919,
									"name": "tag",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 2888,
									"end": 2919,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2786,
									"end": 2925,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2786,
									"end": 2925,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2786,
									"end": 2925,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2786,
									"end": 2925,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2786,
									"end": 2925,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2931,
									"end": 3008,
									"name": "tag",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 2931,
									"end": 3008,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2968,
									"end": 2975,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2997,
									"end": 3002,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2986,
									"end": 3002,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2986,
									"end": 3002,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2931,
									"end": 3008,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2931,
									"end": 3008,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2931,
									"end": 3008,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2931,
									"end": 3008,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3014,
									"end": 3136,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 3014,
									"end": 3136,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3087,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "122"
								},
								{
									"begin": 3105,
									"end": 3110,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3087,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 3087,
									"end": 3111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3087,
									"end": 3111,
									"name": "tag",
									"source": 7,
									"value": "122"
								},
								{
									"begin": 3087,
									"end": 3111,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3080,
									"end": 3085,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3077,
									"end": 3112,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 3067,
									"end": 3130,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "123"
								},
								{
									"begin": 3067,
									"end": 3130,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3126,
									"end": 3127,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3123,
									"end": 3124,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3116,
									"end": 3128,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3067,
									"end": 3130,
									"name": "tag",
									"source": 7,
									"value": "123"
								},
								{
									"begin": 3067,
									"end": 3130,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3014,
									"end": 3136,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3014,
									"end": 3136,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3142,
									"end": 3285,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 3142,
									"end": 3285,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3199,
									"end": 3204,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3230,
									"end": 3236,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3224,
									"end": 3237,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3215,
									"end": 3237,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3215,
									"end": 3237,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3246,
									"end": 3279,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "125"
								},
								{
									"begin": 3273,
									"end": 3278,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3246,
									"end": 3279,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 3246,
									"end": 3279,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3246,
									"end": 3279,
									"name": "tag",
									"source": 7,
									"value": "125"
								},
								{
									"begin": 3246,
									"end": 3279,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3142,
									"end": 3285,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3142,
									"end": 3285,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3142,
									"end": 3285,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3142,
									"end": 3285,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3142,
									"end": 3285,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3291,
									"end": 3417,
									"name": "tag",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 3291,
									"end": 3417,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3328,
									"end": 3335,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3368,
									"end": 3410,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3361,
									"end": 3366,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3357,
									"end": 3411,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3346,
									"end": 3411,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3346,
									"end": 3411,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3291,
									"end": 3417,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3291,
									"end": 3417,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3291,
									"end": 3417,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3291,
									"end": 3417,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3423,
									"end": 3519,
									"name": "tag",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 3423,
									"end": 3519,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3460,
									"end": 3467,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3489,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 3507,
									"end": 3512,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3489,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 3489,
									"end": 3513,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3489,
									"end": 3513,
									"name": "tag",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 3489,
									"end": 3513,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3478,
									"end": 3513,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3478,
									"end": 3513,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3423,
									"end": 3519,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3423,
									"end": 3519,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3423,
									"end": 3519,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3423,
									"end": 3519,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3525,
									"end": 3647,
									"name": "tag",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 3525,
									"end": 3647,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3598,
									"end": 3622,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "130"
								},
								{
									"begin": 3616,
									"end": 3621,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3598,
									"end": 3622,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 3598,
									"end": 3622,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3598,
									"end": 3622,
									"name": "tag",
									"source": 7,
									"value": "130"
								},
								{
									"begin": 3598,
									"end": 3622,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3591,
									"end": 3596,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3588,
									"end": 3623,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 3578,
									"end": 3641,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "131"
								},
								{
									"begin": 3578,
									"end": 3641,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3637,
									"end": 3638,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3634,
									"end": 3635,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3627,
									"end": 3639,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3578,
									"end": 3641,
									"name": "tag",
									"source": 7,
									"value": "131"
								},
								{
									"begin": 3578,
									"end": 3641,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3525,
									"end": 3647,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3525,
									"end": 3647,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3653,
									"end": 3796,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 3653,
									"end": 3796,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3710,
									"end": 3715,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3741,
									"end": 3747,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3735,
									"end": 3748,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3726,
									"end": 3748,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3726,
									"end": 3748,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3757,
									"end": 3790,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 3784,
									"end": 3789,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3757,
									"end": 3790,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 3757,
									"end": 3790,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3757,
									"end": 3790,
									"name": "tag",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 3757,
									"end": 3790,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3653,
									"end": 3796,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3653,
									"end": 3796,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3653,
									"end": 3796,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3653,
									"end": 3796,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3653,
									"end": 3796,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3802,
									"end": 5121,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 3802,
									"end": 5121,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3926,
									"end": 3932,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3934,
									"end": 3940,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3942,
									"end": 3948,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3950,
									"end": 3956,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3958,
									"end": 3964,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4007,
									"end": 4010,
									"name": "PUSH",
									"source": 7,
									"value": "A0"
								},
								{
									"begin": 3995,
									"end": 4004,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3986,
									"end": 3993,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 3982,
									"end": 4005,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 3978,
									"end": 4011,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 3975,
									"end": 4095,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3975,
									"end": 4095,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 3975,
									"end": 4095,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4014,
									"end": 4093,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "136"
								},
								{
									"begin": 4014,
									"end": 4093,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 4014,
									"end": 4093,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4014,
									"end": 4093,
									"name": "tag",
									"source": 7,
									"value": "136"
								},
								{
									"begin": 4014,
									"end": 4093,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3975,
									"end": 4095,
									"name": "tag",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 3975,
									"end": 4095,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4155,
									"end": 4156,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4144,
									"end": 4153,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 4140,
									"end": 4157,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4134,
									"end": 4158,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4185,
									"end": 4203,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4177,
									"end": 4183,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4174,
									"end": 4204,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4171,
									"end": 4288,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4171,
									"end": 4288,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "137"
								},
								{
									"begin": 4171,
									"end": 4288,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4207,
									"end": 4286,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "138"
								},
								{
									"begin": 4207,
									"end": 4286,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 4207,
									"end": 4286,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4207,
									"end": 4286,
									"name": "tag",
									"source": 7,
									"value": "138"
								},
								{
									"begin": 4207,
									"end": 4286,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4171,
									"end": 4288,
									"name": "tag",
									"source": 7,
									"value": "137"
								},
								{
									"begin": 4171,
									"end": 4288,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4312,
									"end": 4386,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "139"
								},
								{
									"begin": 4378,
									"end": 4385,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 4369,
									"end": 4375,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4358,
									"end": 4367,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 4354,
									"end": 4376,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4312,
									"end": 4386,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 4312,
									"end": 4386,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4312,
									"end": 4386,
									"name": "tag",
									"source": 7,
									"value": "139"
								},
								{
									"begin": 4312,
									"end": 4386,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4302,
									"end": 4386,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 4302,
									"end": 4386,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4105,
									"end": 4396,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4456,
									"end": 4458,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4445,
									"end": 4454,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 4441,
									"end": 4459,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4435,
									"end": 4460,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4487,
									"end": 4505,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4479,
									"end": 4485,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4476,
									"end": 4506,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4473,
									"end": 4590,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4473,
									"end": 4590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "140"
								},
								{
									"begin": 4473,
									"end": 4590,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4509,
									"end": 4588,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "141"
								},
								{
									"begin": 4509,
									"end": 4588,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 4509,
									"end": 4588,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4509,
									"end": 4588,
									"name": "tag",
									"source": 7,
									"value": "141"
								},
								{
									"begin": 4509,
									"end": 4588,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4473,
									"end": 4590,
									"name": "tag",
									"source": 7,
									"value": "140"
								},
								{
									"begin": 4473,
									"end": 4590,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4614,
									"end": 4688,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 4680,
									"end": 4687,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 4671,
									"end": 4677,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4660,
									"end": 4669,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 4656,
									"end": 4678,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4614,
									"end": 4688,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 4614,
									"end": 4688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4614,
									"end": 4688,
									"name": "tag",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 4614,
									"end": 4688,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4604,
									"end": 4688,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 4604,
									"end": 4688,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4406,
									"end": 4698,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4737,
									"end": 4739,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 4763,
									"end": 4825,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "143"
								},
								{
									"begin": 4817,
									"end": 4824,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 4808,
									"end": 4814,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4797,
									"end": 4806,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 4793,
									"end": 4815,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4763,
									"end": 4825,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 4763,
									"end": 4825,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4763,
									"end": 4825,
									"name": "tag",
									"source": 7,
									"value": "143"
								},
								{
									"begin": 4763,
									"end": 4825,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4753,
									"end": 4825,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 4753,
									"end": 4825,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4708,
									"end": 4835,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4874,
									"end": 4876,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 4900,
									"end": 4964,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "144"
								},
								{
									"begin": 4956,
									"end": 4963,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 4947,
									"end": 4953,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4936,
									"end": 4945,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 4932,
									"end": 4954,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4900,
									"end": 4964,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 4900,
									"end": 4964,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4900,
									"end": 4964,
									"name": "tag",
									"source": 7,
									"value": "144"
								},
								{
									"begin": 4900,
									"end": 4964,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4890,
									"end": 4964,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4890,
									"end": 4964,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4845,
									"end": 4974,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5013,
									"end": 5016,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 5040,
									"end": 5104,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "145"
								},
								{
									"begin": 5096,
									"end": 5103,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 5087,
									"end": 5093,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5076,
									"end": 5085,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 5072,
									"end": 5094,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5040,
									"end": 5104,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 5040,
									"end": 5104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5040,
									"end": 5104,
									"name": "tag",
									"source": 7,
									"value": "145"
								},
								{
									"begin": 5040,
									"end": 5104,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5030,
									"end": 5104,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5030,
									"end": 5104,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4984,
									"end": 5114,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3802,
									"end": 5121,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3802,
									"end": 5121,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 3802,
									"end": 5121,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3802,
									"end": 5121,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3802,
									"end": 5121,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 3802,
									"end": 5121,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3802,
									"end": 5121,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 3802,
									"end": 5121,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3802,
									"end": 5121,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5127,
									"end": 5226,
									"name": "tag",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 5127,
									"end": 5226,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5179,
									"end": 5185,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5213,
									"end": 5218,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5207,
									"end": 5219,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 5197,
									"end": 5219,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5197,
									"end": 5219,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5127,
									"end": 5226,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5127,
									"end": 5226,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5127,
									"end": 5226,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5127,
									"end": 5226,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5232,
									"end": 5412,
									"name": "tag",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 5232,
									"end": 5412,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5280,
									"end": 5357,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5277,
									"end": 5278,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5270,
									"end": 5358,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5377,
									"end": 5381,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 5374,
									"end": 5375,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 5367,
									"end": 5382,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5401,
									"end": 5405,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 5398,
									"end": 5399,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5391,
									"end": 5406,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 5418,
									"end": 5738,
									"name": "tag",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 5418,
									"end": 5738,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5462,
									"end": 5468,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5499,
									"end": 5500,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 5493,
									"end": 5497,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5489,
									"end": 5501,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 5479,
									"end": 5501,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5479,
									"end": 5501,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5546,
									"end": 5547,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 5540,
									"end": 5544,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5536,
									"end": 5548,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5567,
									"end": 5585,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5557,
									"end": 5638,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 5557,
									"end": 5638,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5623,
									"end": 5627,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 5615,
									"end": 5621,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5611,
									"end": 5628,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5601,
									"end": 5628,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5601,
									"end": 5628,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5557,
									"end": 5638,
									"name": "tag",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 5557,
									"end": 5638,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5685,
									"end": 5687,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5677,
									"end": 5683,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5674,
									"end": 5688,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 5654,
									"end": 5672,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5651,
									"end": 5689,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 5648,
									"end": 5732,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "150"
								},
								{
									"begin": 5648,
									"end": 5732,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5704,
									"end": 5722,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "151"
								},
								{
									"begin": 5704,
									"end": 5722,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 5704,
									"end": 5722,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5704,
									"end": 5722,
									"name": "tag",
									"source": 7,
									"value": "151"
								},
								{
									"begin": 5704,
									"end": 5722,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5648,
									"end": 5732,
									"name": "tag",
									"source": 7,
									"value": "150"
								},
								{
									"begin": 5648,
									"end": 5732,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5469,
									"end": 5738,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5418,
									"end": 5738,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5418,
									"end": 5738,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5418,
									"end": 5738,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5418,
									"end": 5738,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5744,
									"end": 5885,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 5744,
									"end": 5885,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5793,
									"end": 5797,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5816,
									"end": 5819,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5808,
									"end": 5819,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5808,
									"end": 5819,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5839,
									"end": 5842,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5836,
									"end": 5837,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5829,
									"end": 5843,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5873,
									"end": 5877,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5870,
									"end": 5871,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5860,
									"end": 5878,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 5852,
									"end": 5878,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5852,
									"end": 5878,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5744,
									"end": 5885,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5744,
									"end": 5885,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5744,
									"end": 5885,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5744,
									"end": 5885,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5891,
									"end": 5984,
									"name": "tag",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 5891,
									"end": 5984,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5928,
									"end": 5934,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5975,
									"end": 5977,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5970,
									"end": 5972,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 5963,
									"end": 5968,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5959,
									"end": 5973,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5955,
									"end": 5978,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 5945,
									"end": 5978,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5945,
									"end": 5978,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5891,
									"end": 5984,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5891,
									"end": 5984,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5891,
									"end": 5984,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5891,
									"end": 5984,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5990,
									"end": 6097,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 5990,
									"end": 6097,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6034,
									"end": 6042,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6084,
									"end": 6089,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6078,
									"end": 6082,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6074,
									"end": 6090,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 6053,
									"end": 6090,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6053,
									"end": 6090,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5990,
									"end": 6097,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5990,
									"end": 6097,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5990,
									"end": 6097,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5990,
									"end": 6097,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5990,
									"end": 6097,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6103,
									"end": 6496,
									"name": "tag",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 6103,
									"end": 6496,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6172,
									"end": 6178,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6222,
									"end": 6223,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 6210,
									"end": 6220,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6206,
									"end": 6224,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 6245,
									"end": 6342,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "156"
								},
								{
									"begin": 6275,
									"end": 6341,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6264,
									"end": 6273,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6245,
									"end": 6342,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 6245,
									"end": 6342,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6245,
									"end": 6342,
									"name": "tag",
									"source": 7,
									"value": "156"
								},
								{
									"begin": 6245,
									"end": 6342,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6363,
									"end": 6402,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "157"
								},
								{
									"begin": 6393,
									"end": 6401,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 6382,
									"end": 6391,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6363,
									"end": 6402,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 6363,
									"end": 6402,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6363,
									"end": 6402,
									"name": "tag",
									"source": 7,
									"value": "157"
								},
								{
									"begin": 6363,
									"end": 6402,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6351,
									"end": 6402,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 6351,
									"end": 6402,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6435,
									"end": 6439,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 6431,
									"end": 6440,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 6424,
									"end": 6429,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6420,
									"end": 6441,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 6411,
									"end": 6441,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 6411,
									"end": 6441,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6484,
									"end": 6488,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 6474,
									"end": 6482,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 6470,
									"end": 6489,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 6463,
									"end": 6468,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6460,
									"end": 6490,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 6450,
									"end": 6490,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 6450,
									"end": 6490,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6179,
									"end": 6496,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6179,
									"end": 6496,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6103,
									"end": 6496,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 6103,
									"end": 6496,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 6103,
									"end": 6496,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6103,
									"end": 6496,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6103,
									"end": 6496,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6103,
									"end": 6496,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6502,
									"end": 6562,
									"name": "tag",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 6502,
									"end": 6562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6530,
									"end": 6533,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6551,
									"end": 6556,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6544,
									"end": 6556,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6544,
									"end": 6556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6502,
									"end": 6562,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6502,
									"end": 6562,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6502,
									"end": 6562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6502,
									"end": 6562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6568,
									"end": 6710,
									"name": "tag",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 6568,
									"end": 6710,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6618,
									"end": 6627,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6651,
									"end": 6704,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "160"
								},
								{
									"begin": 6669,
									"end": 6703,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "161"
								},
								{
									"begin": 6678,
									"end": 6702,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "162"
								},
								{
									"begin": 6696,
									"end": 6701,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6678,
									"end": 6702,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 6678,
									"end": 6702,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6678,
									"end": 6702,
									"name": "tag",
									"source": 7,
									"value": "162"
								},
								{
									"begin": 6678,
									"end": 6702,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6669,
									"end": 6703,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 6669,
									"end": 6703,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6669,
									"end": 6703,
									"name": "tag",
									"source": 7,
									"value": "161"
								},
								{
									"begin": 6669,
									"end": 6703,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6651,
									"end": 6704,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 6651,
									"end": 6704,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6651,
									"end": 6704,
									"name": "tag",
									"source": 7,
									"value": "160"
								},
								{
									"begin": 6651,
									"end": 6704,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6638,
									"end": 6704,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6638,
									"end": 6704,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6568,
									"end": 6710,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6568,
									"end": 6710,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6568,
									"end": 6710,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6568,
									"end": 6710,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6716,
									"end": 6791,
									"name": "tag",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 6716,
									"end": 6791,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6759,
									"end": 6762,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6780,
									"end": 6785,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6773,
									"end": 6785,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6773,
									"end": 6785,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6716,
									"end": 6791,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6716,
									"end": 6791,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6716,
									"end": 6791,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6716,
									"end": 6791,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6797,
									"end": 7066,
									"name": "tag",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 6797,
									"end": 7066,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6907,
									"end": 6946,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "165"
								},
								{
									"begin": 6938,
									"end": 6945,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6907,
									"end": 6946,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 6907,
									"end": 6946,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6907,
									"end": 6946,
									"name": "tag",
									"source": 7,
									"value": "165"
								},
								{
									"begin": 6907,
									"end": 6946,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6968,
									"end": 7059,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "166"
								},
								{
									"begin": 7017,
									"end": 7058,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "167"
								},
								{
									"begin": 7041,
									"end": 7057,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7017,
									"end": 7058,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 7017,
									"end": 7058,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7017,
									"end": 7058,
									"name": "tag",
									"source": 7,
									"value": "167"
								},
								{
									"begin": 7017,
									"end": 7058,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7009,
									"end": 7015,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7002,
									"end": 7006,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6996,
									"end": 7007,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 6968,
									"end": 7059,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 6968,
									"end": 7059,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6968,
									"end": 7059,
									"name": "tag",
									"source": 7,
									"value": "166"
								},
								{
									"begin": 6968,
									"end": 7059,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6962,
									"end": 6966,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6955,
									"end": 7060,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 6873,
									"end": 7066,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6797,
									"end": 7066,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6797,
									"end": 7066,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6797,
									"end": 7066,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6797,
									"end": 7066,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7072,
									"end": 7145,
									"name": "tag",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 7072,
									"end": 7145,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7117,
									"end": 7120,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7138,
									"end": 7139,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7131,
									"end": 7139,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7131,
									"end": 7139,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7072,
									"end": 7145,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7072,
									"end": 7145,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7151,
									"end": 7340,
									"name": "tag",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 7151,
									"end": 7340,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7228,
									"end": 7260,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "170"
								},
								{
									"begin": 7228,
									"end": 7260,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 7228,
									"end": 7260,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7228,
									"end": 7260,
									"name": "tag",
									"source": 7,
									"value": "170"
								},
								{
									"begin": 7228,
									"end": 7260,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7269,
									"end": 7334,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "171"
								},
								{
									"begin": 7327,
									"end": 7333,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7319,
									"end": 7325,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7313,
									"end": 7317,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7269,
									"end": 7334,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 7269,
									"end": 7334,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7269,
									"end": 7334,
									"name": "tag",
									"source": 7,
									"value": "171"
								},
								{
									"begin": 7269,
									"end": 7334,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7204,
									"end": 7340,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7151,
									"end": 7340,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7151,
									"end": 7340,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7151,
									"end": 7340,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7346,
									"end": 7532,
									"name": "tag",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 7346,
									"end": 7532,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7406,
									"end": 7526,
									"name": "tag",
									"source": 7,
									"value": "173"
								},
								{
									"begin": 7406,
									"end": 7526,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7423,
									"end": 7426,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7416,
									"end": 7421,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7413,
									"end": 7427,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 7406,
									"end": 7526,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7406,
									"end": 7526,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "175"
								},
								{
									"begin": 7406,
									"end": 7526,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7477,
									"end": 7516,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "176"
								},
								{
									"begin": 7514,
									"end": 7515,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7507,
									"end": 7512,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7477,
									"end": 7516,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 7477,
									"end": 7516,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7477,
									"end": 7516,
									"name": "tag",
									"source": 7,
									"value": "176"
								},
								{
									"begin": 7477,
									"end": 7516,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7450,
									"end": 7451,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 7443,
									"end": 7448,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7439,
									"end": 7452,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7430,
									"end": 7452,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7430,
									"end": 7452,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7406,
									"end": 7526,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "173"
								},
								{
									"begin": 7406,
									"end": 7526,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7406,
									"end": 7526,
									"name": "tag",
									"source": 7,
									"value": "175"
								},
								{
									"begin": 7406,
									"end": 7526,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7346,
									"end": 7532,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7346,
									"end": 7532,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7346,
									"end": 7532,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7538,
									"end": 8081,
									"name": "tag",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 7538,
									"end": 8081,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7639,
									"end": 7641,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 7634,
									"end": 7637,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7631,
									"end": 7642,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 7628,
									"end": 8074,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7628,
									"end": 8074,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "178"
								},
								{
									"begin": 7628,
									"end": 8074,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7673,
									"end": 7711,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "179"
								},
								{
									"begin": 7705,
									"end": 7710,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7673,
									"end": 7711,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 7673,
									"end": 7711,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7673,
									"end": 7711,
									"name": "tag",
									"source": 7,
									"value": "179"
								},
								{
									"begin": 7673,
									"end": 7711,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7757,
									"end": 7786,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "180"
								},
								{
									"begin": 7775,
									"end": 7785,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7757,
									"end": 7786,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 7757,
									"end": 7786,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7757,
									"end": 7786,
									"name": "tag",
									"source": 7,
									"value": "180"
								},
								{
									"begin": 7757,
									"end": 7786,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7747,
									"end": 7755,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7743,
									"end": 7787,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7940,
									"end": 7942,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 7928,
									"end": 7938,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 7925,
									"end": 7943,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 7922,
									"end": 7971,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7922,
									"end": 7971,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "181"
								},
								{
									"begin": 7922,
									"end": 7971,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7961,
									"end": 7969,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7946,
									"end": 7969,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7946,
									"end": 7969,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7922,
									"end": 7971,
									"name": "tag",
									"source": 7,
									"value": "181"
								},
								{
									"begin": 7922,
									"end": 7971,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7984,
									"end": 8064,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "182"
								},
								{
									"begin": 8040,
									"end": 8062,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "183"
								},
								{
									"begin": 8058,
									"end": 8061,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 8040,
									"end": 8062,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 8040,
									"end": 8062,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8040,
									"end": 8062,
									"name": "tag",
									"source": 7,
									"value": "183"
								},
								{
									"begin": 8040,
									"end": 8062,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8030,
									"end": 8038,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8026,
									"end": 8063,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8013,
									"end": 8024,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7984,
									"end": 8064,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 7984,
									"end": 8064,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7984,
									"end": 8064,
									"name": "tag",
									"source": 7,
									"value": "182"
								},
								{
									"begin": 7984,
									"end": 8064,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7643,
									"end": 8074,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7643,
									"end": 8074,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7628,
									"end": 8074,
									"name": "tag",
									"source": 7,
									"value": "178"
								},
								{
									"begin": 7628,
									"end": 8074,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7538,
									"end": 8081,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7538,
									"end": 8081,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7538,
									"end": 8081,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7538,
									"end": 8081,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8087,
									"end": 8204,
									"name": "tag",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 8087,
									"end": 8204,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8141,
									"end": 8149,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8191,
									"end": 8196,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8185,
									"end": 8189,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8181,
									"end": 8197,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 8160,
									"end": 8197,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8160,
									"end": 8197,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8087,
									"end": 8204,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 8087,
									"end": 8204,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8087,
									"end": 8204,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8087,
									"end": 8204,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8087,
									"end": 8204,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8210,
									"end": 8379,
									"name": "tag",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 8210,
									"end": 8379,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8254,
									"end": 8260,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8287,
									"end": 8338,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "186"
								},
								{
									"begin": 8335,
									"end": 8336,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8331,
									"end": 8337,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 8323,
									"end": 8328,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8320,
									"end": 8321,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 8316,
									"end": 8329,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 8287,
									"end": 8338,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 8287,
									"end": 8338,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8287,
									"end": 8338,
									"name": "tag",
									"source": 7,
									"value": "186"
								},
								{
									"begin": 8287,
									"end": 8338,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8283,
									"end": 8339,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 8368,
									"end": 8372,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 8362,
									"end": 8366,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8358,
									"end": 8373,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 8348,
									"end": 8373,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8348,
									"end": 8373,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8261,
									"end": 8379,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8210,
									"end": 8379,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 8210,
									"end": 8379,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8210,
									"end": 8379,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8210,
									"end": 8379,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8210,
									"end": 8379,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8384,
									"end": 8679,
									"name": "tag",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 8384,
									"end": 8679,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8460,
									"end": 8464,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8606,
									"end": 8635,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "188"
								},
								{
									"begin": 8631,
									"end": 8634,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8625,
									"end": 8629,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8606,
									"end": 8635,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 8606,
									"end": 8635,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8606,
									"end": 8635,
									"name": "tag",
									"source": 7,
									"value": "188"
								},
								{
									"begin": 8606,
									"end": 8635,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8598,
									"end": 8635,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8598,
									"end": 8635,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8668,
									"end": 8671,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8665,
									"end": 8666,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 8661,
									"end": 8672,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 8655,
									"end": 8659,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8652,
									"end": 8673,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 8644,
									"end": 8673,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8644,
									"end": 8673,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8384,
									"end": 8679,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 8384,
									"end": 8679,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8384,
									"end": 8679,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8384,
									"end": 8679,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8384,
									"end": 8679,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8684,
									"end": 10079,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 8684,
									"end": 10079,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8801,
									"end": 8838,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "190"
								},
								{
									"begin": 8834,
									"end": 8837,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8801,
									"end": 8838,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 8801,
									"end": 8838,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8801,
									"end": 8838,
									"name": "tag",
									"source": 7,
									"value": "190"
								},
								{
									"begin": 8801,
									"end": 8838,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8903,
									"end": 8921,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8895,
									"end": 8901,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8892,
									"end": 8922,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 8889,
									"end": 8945,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8889,
									"end": 8945,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "191"
								},
								{
									"begin": 8889,
									"end": 8945,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8925,
									"end": 8943,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "192"
								},
								{
									"begin": 8925,
									"end": 8943,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 8925,
									"end": 8943,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8925,
									"end": 8943,
									"name": "tag",
									"source": 7,
									"value": "192"
								},
								{
									"begin": 8925,
									"end": 8943,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8889,
									"end": 8945,
									"name": "tag",
									"source": 7,
									"value": "191"
								},
								{
									"begin": 8889,
									"end": 8945,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8969,
									"end": 9007,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "193"
								},
								{
									"begin": 9001,
									"end": 9005,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8995,
									"end": 9006,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 8969,
									"end": 9007,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 8969,
									"end": 9007,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8969,
									"end": 9007,
									"name": "tag",
									"source": 7,
									"value": "193"
								},
								{
									"begin": 8969,
									"end": 9007,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9054,
									"end": 9121,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "194"
								},
								{
									"begin": 9114,
									"end": 9120,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9106,
									"end": 9112,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9100,
									"end": 9104,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 9054,
									"end": 9121,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 9054,
									"end": 9121,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9054,
									"end": 9121,
									"name": "tag",
									"source": 7,
									"value": "194"
								},
								{
									"begin": 9054,
									"end": 9121,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9148,
									"end": 9149,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9172,
									"end": 9176,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 9159,
									"end": 9176,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9159,
									"end": 9176,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9204,
									"end": 9206,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 9196,
									"end": 9202,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9193,
									"end": 9207,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 9221,
									"end": 9222,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 9216,
									"end": 9834,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 9216,
									"end": 9834,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 9216,
									"end": 9834,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "196"
								},
								{
									"begin": 9216,
									"end": 9834,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9878,
									"end": 9879,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9895,
									"end": 9901,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9892,
									"end": 9969,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 9892,
									"end": 9969,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "197"
								},
								{
									"begin": 9892,
									"end": 9969,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9944,
									"end": 9953,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9939,
									"end": 9942,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 9935,
									"end": 9954,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9929,
									"end": 9955,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 9920,
									"end": 9955,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9920,
									"end": 9955,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9892,
									"end": 9969,
									"name": "tag",
									"source": 7,
									"value": "197"
								},
								{
									"begin": 9892,
									"end": 9969,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9995,
									"end": 10062,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "198"
								},
								{
									"begin": 10055,
									"end": 10061,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 10048,
									"end": 10053,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9995,
									"end": 10062,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 9995,
									"end": 10062,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9995,
									"end": 10062,
									"name": "tag",
									"source": 7,
									"value": "198"
								},
								{
									"begin": 9995,
									"end": 10062,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9989,
									"end": 9993,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 9982,
									"end": 10063,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 9851,
									"end": 10073,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9186,
									"end": 10073,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "195"
								},
								{
									"begin": 9186,
									"end": 10073,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9216,
									"end": 9834,
									"name": "tag",
									"source": 7,
									"value": "196"
								},
								{
									"begin": 9216,
									"end": 9834,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9268,
									"end": 9272,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 9264,
									"end": 9273,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 9256,
									"end": 9262,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9252,
									"end": 9274,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 9302,
									"end": 9339,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "199"
								},
								{
									"begin": 9334,
									"end": 9338,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 9302,
									"end": 9339,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 9302,
									"end": 9339,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9302,
									"end": 9339,
									"name": "tag",
									"source": 7,
									"value": "199"
								},
								{
									"begin": 9302,
									"end": 9339,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9361,
									"end": 9362,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9375,
									"end": 9583,
									"name": "tag",
									"source": 7,
									"value": "200"
								},
								{
									"begin": 9375,
									"end": 9583,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9389,
									"end": 9396,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9386,
									"end": 9387,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 9383,
									"end": 9397,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 9375,
									"end": 9583,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 9375,
									"end": 9583,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "202"
								},
								{
									"begin": 9375,
									"end": 9583,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9468,
									"end": 9477,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9463,
									"end": 9466,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 9459,
									"end": 9478,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9453,
									"end": 9479,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 9445,
									"end": 9451,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9438,
									"end": 9480,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 9519,
									"end": 9520,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 9511,
									"end": 9517,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9507,
									"end": 9521,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9497,
									"end": 9521,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9497,
									"end": 9521,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9566,
									"end": 9568,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 9555,
									"end": 9564,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 9551,
									"end": 9569,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9538,
									"end": 9569,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 9538,
									"end": 9569,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9412,
									"end": 9416,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 9409,
									"end": 9410,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 9405,
									"end": 9417,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9400,
									"end": 9417,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9400,
									"end": 9417,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9375,
									"end": 9583,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "200"
								},
								{
									"begin": 9375,
									"end": 9583,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9375,
									"end": 9583,
									"name": "tag",
									"source": 7,
									"value": "202"
								},
								{
									"begin": 9375,
									"end": 9583,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9611,
									"end": 9617,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 9602,
									"end": 9609,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9599,
									"end": 9618,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 9596,
									"end": 9775,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 9596,
									"end": 9775,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "203"
								},
								{
									"begin": 9596,
									"end": 9775,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9669,
									"end": 9678,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9664,
									"end": 9667,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 9660,
									"end": 9679,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9654,
									"end": 9680,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 9712,
									"end": 9760,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "204"
								},
								{
									"begin": 9754,
									"end": 9758,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 9746,
									"end": 9752,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 9742,
									"end": 9759,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 9731,
									"end": 9740,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9712,
									"end": 9760,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 9712,
									"end": 9760,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9712,
									"end": 9760,
									"name": "tag",
									"source": 7,
									"value": "204"
								},
								{
									"begin": 9712,
									"end": 9760,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9704,
									"end": 9710,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9697,
									"end": 9761,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 9619,
									"end": 9775,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9596,
									"end": 9775,
									"name": "tag",
									"source": 7,
									"value": "203"
								},
								{
									"begin": 9596,
									"end": 9775,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9821,
									"end": 9822,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 9817,
									"end": 9818,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 9809,
									"end": 9815,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 9805,
									"end": 9819,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 9801,
									"end": 9823,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9795,
									"end": 9799,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 9788,
									"end": 9824,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 9223,
									"end": 9834,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9223,
									"end": 9834,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9223,
									"end": 9834,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9186,
									"end": 10073,
									"name": "tag",
									"source": 7,
									"value": "195"
								},
								{
									"begin": 9186,
									"end": 10073,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9186,
									"end": 10073,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8776,
									"end": 10079,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8776,
									"end": 10079,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8776,
									"end": 10079,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8684,
									"end": 10079,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8684,
									"end": 10079,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8684,
									"end": 10079,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10085,
									"end": 10203,
									"name": "tag",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 10085,
									"end": 10203,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10172,
									"end": 10196,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "206"
								},
								{
									"begin": 10190,
									"end": 10195,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 10172,
									"end": 10196,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 10172,
									"end": 10196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10172,
									"end": 10196,
									"name": "tag",
									"source": 7,
									"value": "206"
								},
								{
									"begin": 10172,
									"end": 10196,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10167,
									"end": 10170,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10160,
									"end": 10197,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 10085,
									"end": 10203,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10085,
									"end": 10203,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10085,
									"end": 10203,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10209,
									"end": 10431,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 10209,
									"end": 10431,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10302,
									"end": 10306,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10340,
									"end": 10342,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 10329,
									"end": 10338,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10325,
									"end": 10343,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10317,
									"end": 10343,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10317,
									"end": 10343,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10353,
									"end": 10424,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "208"
								},
								{
									"begin": 10421,
									"end": 10422,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10410,
									"end": 10419,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10406,
									"end": 10423,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10397,
									"end": 10403,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 10353,
									"end": 10424,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 10353,
									"end": 10424,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10353,
									"end": 10424,
									"name": "tag",
									"source": 7,
									"value": "208"
								},
								{
									"begin": 10353,
									"end": 10424,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10209,
									"end": 10431,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 10209,
									"end": 10431,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 10209,
									"end": 10431,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10209,
									"end": 10431,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10209,
									"end": 10431,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10437,
									"end": 10617,
									"name": "tag",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 10437,
									"end": 10617,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10485,
									"end": 10562,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10482,
									"end": 10483,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10475,
									"end": 10563,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 10582,
									"end": 10586,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 10579,
									"end": 10580,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 10572,
									"end": 10587,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 10606,
									"end": 10610,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 10603,
									"end": 10604,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10596,
									"end": 10611,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 10623,
									"end": 10814,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 10623,
									"end": 10814,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10663,
									"end": 10666,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10682,
									"end": 10702,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "211"
								},
								{
									"begin": 10700,
									"end": 10701,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10682,
									"end": 10702,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 10682,
									"end": 10702,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10682,
									"end": 10702,
									"name": "tag",
									"source": 7,
									"value": "211"
								},
								{
									"begin": 10682,
									"end": 10702,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10677,
									"end": 10702,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 10677,
									"end": 10702,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10716,
									"end": 10736,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "212"
								},
								{
									"begin": 10734,
									"end": 10735,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10716,
									"end": 10736,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 10716,
									"end": 10736,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10716,
									"end": 10736,
									"name": "tag",
									"source": 7,
									"value": "212"
								},
								{
									"begin": 10716,
									"end": 10736,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10711,
									"end": 10736,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 10711,
									"end": 10736,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10759,
									"end": 10760,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10756,
									"end": 10757,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10752,
									"end": 10761,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10745,
									"end": 10761,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10745,
									"end": 10761,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10780,
									"end": 10783,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 10777,
									"end": 10778,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10774,
									"end": 10784,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 10771,
									"end": 10807,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 10771,
									"end": 10807,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "213"
								},
								{
									"begin": 10771,
									"end": 10807,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 10787,
									"end": 10805,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "214"
								},
								{
									"begin": 10787,
									"end": 10805,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 10787,
									"end": 10805,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10787,
									"end": 10805,
									"name": "tag",
									"source": 7,
									"value": "214"
								},
								{
									"begin": 10787,
									"end": 10805,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10771,
									"end": 10807,
									"name": "tag",
									"source": 7,
									"value": "213"
								},
								{
									"begin": 10771,
									"end": 10807,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10623,
									"end": 10814,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 10623,
									"end": 10814,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 10623,
									"end": 10814,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10623,
									"end": 10814,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10623,
									"end": 10814,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10820,
									"end": 10938,
									"name": "tag",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 10820,
									"end": 10938,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10907,
									"end": 10931,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "216"
								},
								{
									"begin": 10925,
									"end": 10930,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 10907,
									"end": 10931,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 10907,
									"end": 10931,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10907,
									"end": 10931,
									"name": "tag",
									"source": 7,
									"value": "216"
								},
								{
									"begin": 10907,
									"end": 10931,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10902,
									"end": 10905,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10895,
									"end": 10932,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 10820,
									"end": 10938,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10820,
									"end": 10938,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10820,
									"end": 10938,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10944,
									"end": 11386,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 10944,
									"end": 11386,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11093,
									"end": 11097,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 11131,
									"end": 11133,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 11120,
									"end": 11129,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11116,
									"end": 11134,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 11108,
									"end": 11134,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 11108,
									"end": 11134,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11144,
									"end": 11215,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "218"
								},
								{
									"begin": 11212,
									"end": 11213,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 11201,
									"end": 11210,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 11197,
									"end": 11214,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 11188,
									"end": 11194,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 11144,
									"end": 11215,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 11144,
									"end": 11215,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11144,
									"end": 11215,
									"name": "tag",
									"source": 7,
									"value": "218"
								},
								{
									"begin": 11144,
									"end": 11215,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11225,
									"end": 11297,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "219"
								},
								{
									"begin": 11293,
									"end": 11295,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 11282,
									"end": 11291,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 11278,
									"end": 11296,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 11269,
									"end": 11275,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 11225,
									"end": 11297,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 11225,
									"end": 11297,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11225,
									"end": 11297,
									"name": "tag",
									"source": 7,
									"value": "219"
								},
								{
									"begin": 11225,
									"end": 11297,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11307,
									"end": 11379,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "220"
								},
								{
									"begin": 11375,
									"end": 11377,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 11364,
									"end": 11373,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 11360,
									"end": 11378,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 11351,
									"end": 11357,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 11307,
									"end": 11379,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 11307,
									"end": 11379,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11307,
									"end": 11379,
									"name": "tag",
									"source": 7,
									"value": "220"
								},
								{
									"begin": 11307,
									"end": 11379,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10944,
									"end": 11386,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 10944,
									"end": 11386,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 10944,
									"end": 11386,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10944,
									"end": 11386,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10944,
									"end": 11386,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10944,
									"end": 11386,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10944,
									"end": 11386,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11392,
									"end": 11614,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 11392,
									"end": 11614,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11485,
									"end": 11489,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 11523,
									"end": 11525,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 11512,
									"end": 11521,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11508,
									"end": 11526,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 11500,
									"end": 11526,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 11500,
									"end": 11526,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11536,
									"end": 11607,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "222"
								},
								{
									"begin": 11604,
									"end": 11605,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 11593,
									"end": 11602,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 11589,
									"end": 11606,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 11580,
									"end": 11586,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 11536,
									"end": 11607,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 11536,
									"end": 11607,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11536,
									"end": 11607,
									"name": "tag",
									"source": 7,
									"value": "222"
								},
								{
									"begin": 11536,
									"end": 11607,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11392,
									"end": 11614,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 11392,
									"end": 11614,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 11392,
									"end": 11614,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11392,
									"end": 11614,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11392,
									"end": 11614,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 330,
									"end": 2210,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 330,
									"end": 2210,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 330,
									"end": 2210,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 330,
									"end": 2210,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 330,
									"end": 2210,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 330,
									"end": 2210,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 330,
									"end": 2210,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 330,
									"end": 2210,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 330,
									"end": 2210,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220729026d98839c94c18fa2c409e1bacef092d0f27030799d8bc7d61be047cc4dd64736f6c634300081e0033",
									".code": [
										{
											"begin": 330,
											"end": 2210,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "PUSH",
											"source": 6,
											"value": "79CC6790"
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "PUSH",
											"source": 6,
											"value": "40C10F19"
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "PUSH",
											"source": 6,
											"value": "42966C68"
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "PUSH",
											"source": 6,
											"value": "57915897"
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 330,
											"end": 2210,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2803,
											"end": 2900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2803,
											"end": 2900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1144,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1044,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1044,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 1044,
											"end": 1144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1144,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1044,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1144,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1044,
											"end": 1144,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1044,
											"end": 1144,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1144,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1044,
											"end": 1144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1144,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1044,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1144,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1044,
											"end": 1144,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1144,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1144,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1144,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1144,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1144,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1440,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1343,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1440,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1343,
											"end": 1440,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1343,
											"end": 1440,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1440,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1440,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1440,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1440,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1440,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1440,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1343,
											"end": 1440,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1440,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1440,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 1343,
											"end": 1440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1440,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1343,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1440,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1343,
											"end": 1440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1440,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1343,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1440,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1889,
											"end": 1972,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1889,
											"end": 1972,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1889,
											"end": 1972,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 1889,
											"end": 1972,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1889,
											"end": 1972,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1889,
											"end": 1972,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1889,
											"end": 1972,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1889,
											"end": 1972,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1889,
											"end": 1972,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1889,
											"end": 1972,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1889,
											"end": 1972,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1889,
											"end": 1972,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1889,
											"end": 1972,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1889,
											"end": 1972,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1889,
											"end": 1972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1889,
											"end": 1972,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1889,
											"end": 1972,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1889,
											"end": 1972,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 1889,
											"end": 1972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1889,
											"end": 1972,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 1889,
											"end": 1972,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1889,
											"end": 1972,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1598,
											"end": 1683,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1598,
											"end": 1683,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1598,
											"end": 1683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 1598,
											"end": 1683,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1598,
											"end": 1683,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1598,
											"end": 1683,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1598,
											"end": 1683,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1598,
											"end": 1683,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1598,
											"end": 1683,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1598,
											"end": 1683,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1598,
											"end": 1683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1598,
											"end": 1683,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1598,
											"end": 1683,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1598,
											"end": 1683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1598,
											"end": 1683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1598,
											"end": 1683,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1598,
											"end": 1683,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1598,
											"end": 1683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 1598,
											"end": 1683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1598,
											"end": 1683,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 1598,
											"end": 1683,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1598,
											"end": 1683,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2051,
											"end": 2207,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 2051,
											"end": 2207,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2051,
											"end": 2207,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 2051,
											"end": 2207,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2051,
											"end": 2207,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2051,
											"end": 2207,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2051,
											"end": 2207,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2051,
											"end": 2207,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2051,
											"end": 2207,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2051,
											"end": 2207,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2051,
											"end": 2207,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 2051,
											"end": 2207,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2051,
											"end": 2207,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2051,
											"end": 2207,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 2051,
											"end": 2207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2051,
											"end": 2207,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 2051,
											"end": 2207,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2051,
											"end": 2207,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2051,
											"end": 2207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2051,
											"end": 2207,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 2051,
											"end": 2207,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2051,
											"end": 2207,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3991,
											"end": 4004,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 4007,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 4007,
											"end": 4019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3991,
											"end": 4019,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3991,
											"end": 4019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 4038,
											"end": 4043,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4045,
											"end": 4052,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4054,
											"end": 4059,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4029,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 4029,
											"end": 4060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 4029,
											"end": 4060,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4077,
											"end": 4081,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4070,
											"end": 4081,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 4088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2855,
											"end": 2862,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2881,
											"end": 2893,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2881,
											"end": 2893,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2874,
											"end": 2893,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2874,
											"end": 2893,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2803,
											"end": 2900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4767,
											"end": 4771,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4783,
											"end": 4798,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4801,
											"end": 4813,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 4801,
											"end": 4811,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 4801,
											"end": 4813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4801,
											"end": 4813,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 4801,
											"end": 4813,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4783,
											"end": 4813,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4783,
											"end": 4813,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4823,
											"end": 4860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 4839,
											"end": 4843,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4845,
											"end": 4852,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4854,
											"end": 4859,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4823,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4823,
											"end": 4860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4823,
											"end": 4860,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 4823,
											"end": 4860,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4870,
											"end": 4896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 4880,
											"end": 4884,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4886,
											"end": 4888,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4890,
											"end": 4895,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4870,
											"end": 4879,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 4870,
											"end": 4896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4870,
											"end": 4896,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 4870,
											"end": 4896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4913,
											"end": 4917,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4906,
											"end": 4917,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4906,
											"end": 4917,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4906,
											"end": 4917,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4680,
											"end": 4924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1144,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 1044,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1107,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1127,
											"end": 1136,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1127,
											"end": 1136,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1127,
											"end": 1136,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1127,
											"end": 1136,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1127,
											"end": 1136,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1127,
											"end": 1136,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1127,
											"end": 1136,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1127,
											"end": 1136,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1127,
											"end": 1136,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1127,
											"end": 1136,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1127,
											"end": 1136,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1120,
											"end": 1136,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1120,
											"end": 1136,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1144,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1440,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1343,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1415,
											"end": 1432,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 1421,
											"end": 1423,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1425,
											"end": 1431,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1415,
											"end": 1420,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 1415,
											"end": 1432,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1415,
											"end": 1432,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 1415,
											"end": 1432,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1440,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1440,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1889,
											"end": 1972,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 1889,
											"end": 1972,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1939,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 1945,
											"end": 1955,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1963,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1939,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 1939,
											"end": 1964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1939,
											"end": 1964,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 1939,
											"end": 1964,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1889,
											"end": 1972,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1889,
											"end": 1972,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1598,
											"end": 1683,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 1598,
											"end": 1683,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1675,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 1656,
											"end": 1666,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1668,
											"end": 1674,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1655,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 1650,
											"end": 1675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1675,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 1650,
											"end": 1675,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1598,
											"end": 1683,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1598,
											"end": 1683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2998,
											"end": 3005,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3034,
											"end": 3041,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3017,
											"end": 3042,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3017,
											"end": 3042,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 3049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2051,
											"end": 2207,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2051,
											"end": 2207,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2166,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 2138,
											"end": 2145,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2147,
											"end": 2157,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2165,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2122,
											"end": 2166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2166,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 2122,
											"end": 2166,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2177,
											"end": 2199,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 2183,
											"end": 2190,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2192,
											"end": 2198,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2177,
											"end": 2182,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 2177,
											"end": 2199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2177,
											"end": 2199,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 2177,
											"end": 2199,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2051,
											"end": 2207,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2051,
											"end": 2207,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2051,
											"end": 2207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3313,
											"end": 3317,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3342,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3345,
											"end": 3357,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 3345,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3345,
											"end": 3357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3345,
											"end": 3357,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 3345,
											"end": 3357,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3329,
											"end": 3357,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3329,
											"end": 3357,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 3377,
											"end": 3382,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3384,
											"end": 3386,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3388,
											"end": 3393,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3376,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3367,
											"end": 3394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 3367,
											"end": 3394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3411,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3404,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3404,
											"end": 3415,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3404,
											"end": 3415,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3535,
											"end": 3542,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3572,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3573,
											"end": 3578,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3580,
											"end": 3587,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3588,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3554,
											"end": 3588,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3554,
											"end": 3588,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 8723,
											"end": 8728,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8730,
											"end": 8737,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8739,
											"end": 8744,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8746,
											"end": 8750,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8714,
											"end": 8722,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 8714,
											"end": 8751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 8714,
											"end": 8751,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8630,
											"end": 8758,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8630,
											"end": 8758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10418,
											"end": 10442,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10445,
											"end": 10470,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 10455,
											"end": 10460,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10462,
											"end": 10469,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10445,
											"end": 10454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 10445,
											"end": 10470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10445,
											"end": 10470,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 10445,
											"end": 10470,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10418,
											"end": 10470,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10418,
											"end": 10470,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10503,
											"end": 10520,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10484,
											"end": 10500,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10484,
											"end": 10520,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10559,
											"end": 10564,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10540,
											"end": 10556,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10540,
											"end": 10564,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10618,
											"end": 10625,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10627,
											"end": 10643,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10645,
											"end": 10650,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 10591,
											"end": 10651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10591,
											"end": 10651,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 10536,
											"end": 10666,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10764,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 10716,
											"end": 10721,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10723,
											"end": 10730,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10751,
											"end": 10756,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10732,
											"end": 10748,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10732,
											"end": 10756,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10763,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10707,
											"end": 10715,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 10707,
											"end": 10764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10764,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 10707,
											"end": 10764,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 10480,
											"end": 10789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10408,
											"end": 10795,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10319,
											"end": 10795,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10319,
											"end": 10795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5396,
											"end": 5397,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5380,
											"end": 5384,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5448,
											"end": 5449,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 5421,
											"end": 5451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5451,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 5376,
											"end": 5462,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5490,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5475,
											"end": 5477,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5543,
											"end": 5544,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 5514,
											"end": 5546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5514,
											"end": 5546,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 5471,
											"end": 5557,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5566,
											"end": 5590,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 5574,
											"end": 5578,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5580,
											"end": 5582,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5584,
											"end": 5589,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5566,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 5566,
											"end": 5590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5566,
											"end": 5590,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 5566,
											"end": 5590,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5297,
											"end": 5597,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5297,
											"end": 5597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7362,
											"end": 7570,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 7362,
											"end": 7570,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7451,
											"end": 7452,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7432,
											"end": 7439,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7432,
											"end": 7453,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7428,
											"end": 7519,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 7428,
											"end": 7519,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7505,
											"end": 7506,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 7476,
											"end": 7508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7476,
											"end": 7508,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7428,
											"end": 7519,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 7428,
											"end": 7519,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7563,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 7544,
											"end": 7545,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7548,
											"end": 7555,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7557,
											"end": 7562,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7535,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 7528,
											"end": 7563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7563,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 7528,
											"end": 7563,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7362,
											"end": 7570,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7362,
											"end": 7570,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7362,
											"end": 7570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7888,
											"end": 8094,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 7888,
											"end": 8094,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7977,
											"end": 7978,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7958,
											"end": 7979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7958,
											"end": 7979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7958,
											"end": 7965,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7958,
											"end": 7979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7958,
											"end": 7979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7958,
											"end": 7979,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7954,
											"end": 8043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 7954,
											"end": 8043,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8029,
											"end": 8030,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 8002,
											"end": 8032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8002,
											"end": 8032,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7954,
											"end": 8043,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 7954,
											"end": 8043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8052,
											"end": 8087,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 8060,
											"end": 8067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8077,
											"end": 8078,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8081,
											"end": 8086,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8052,
											"end": 8059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 8052,
											"end": 8087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8052,
											"end": 8087,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 8052,
											"end": 8087,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7888,
											"end": 8094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7888,
											"end": 8094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7888,
											"end": 8094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9734,
											"end": 9735,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9717,
											"end": 9722,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9717,
											"end": 9736,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9788,
											"end": 9789,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 9759,
											"end": 9791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9791,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 9713,
											"end": 9802,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9834,
											"end": 9835,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9815,
											"end": 9822,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9815,
											"end": 9836,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9887,
											"end": 9888,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 9859,
											"end": 9890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 9811,
											"end": 9901,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9940,
											"end": 9945,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9921,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9922,
											"end": 9927,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9929,
											"end": 9936,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9910,
											"end": 9937,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9945,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9959,
											"end": 9968,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10005,
											"end": 10012,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9998,
											"end": 10003,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10014,
											"end": 10019,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 9989,
											"end": 10020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10020,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 9955,
											"end": 10031,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 10037,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 10037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6017,
											"end": 6018,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6001,
											"end": 6005,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6153,
											"end": 6158,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6149,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6137,
											"end": 6149,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 6137,
											"end": 6158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6189,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6220,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6221,
											"end": 6225,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6211,
											"end": 6226,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6189,
											"end": 6226,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6189,
											"end": 6226,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6258,
											"end": 6263,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6244,
											"end": 6255,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6244,
											"end": 6263,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6315,
											"end": 6319,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6332,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6334,
											"end": 6339,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 6290,
											"end": 6340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6290,
											"end": 6340,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 6240,
											"end": 6355,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6507,
											"end": 6512,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6504,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6493,
											"end": 6512,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6484,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6485,
											"end": 6489,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6475,
											"end": 6490,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6175,
											"end": 6537,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 5997,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6565,
											"end": 6566,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6551,
											"end": 6553,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6730,
											"end": 6735,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6726,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6714,
											"end": 6726,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 6735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6942,
											"end": 6947,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6934,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6935,
											"end": 6937,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6938,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6925,
											"end": 6947,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 6547,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7004,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6996,
											"end": 7000,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7006,
											"end": 7011,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 6987,
											"end": 7012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7012,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5912,
											"end": 7019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5912,
											"end": 7019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 7
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4395,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4380,
											"end": 4396,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 4491,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4486,
											"end": 4489,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4479,
											"end": 4514,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4615,
											"end": 4619,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4728,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4715,
											"end": 4732,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 4666,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4805,
											"end": 4811,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4856,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 4851,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4833,
											"end": 4840,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4829,
											"end": 4852,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4825,
											"end": 4857,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 4860,
											"end": 4939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4980,
											"end": 4981,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 5050,
											"end": 5057,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5030,
											"end": 5039,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5026,
											"end": 5048,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 5005,
											"end": 5058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "tag",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4951,
											"end": 5068,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5140,
											"end": 5146,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5189,
											"end": 5191,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5177,
											"end": 5186,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5175,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5164,
											"end": 5187,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5160,
											"end": 5192,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 5195,
											"end": 5274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "tag",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5315,
											"end": 5316,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 5385,
											"end": 5392,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5376,
											"end": 5382,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5365,
											"end": 5374,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5361,
											"end": 5383,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 5340,
											"end": 5393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5286,
											"end": 5403,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 5521,
											"end": 5526,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 5503,
											"end": 5527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "tag",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5501,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5491,
											"end": 5528,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5416,
											"end": 5534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5633,
											"end": 5637,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5671,
											"end": 5673,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5669,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5656,
											"end": 5674,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5648,
											"end": 5674,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5648,
											"end": 5674,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 5752,
											"end": 5753,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5741,
											"end": 5750,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5737,
											"end": 5754,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5728,
											"end": 5734,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 5684,
											"end": 5755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 5762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5836,
											"end": 5842,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5844,
											"end": 5850,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5893,
											"end": 5895,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5881,
											"end": 5890,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 5879,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5868,
											"end": 5891,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5864,
											"end": 5896,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 5899,
											"end": 5978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "tag",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "tag",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6019,
											"end": 6020,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 6089,
											"end": 6096,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6080,
											"end": 6086,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6069,
											"end": 6078,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6065,
											"end": 6087,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 6044,
											"end": 6097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6034,
											"end": 6097,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6034,
											"end": 6097,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5990,
											"end": 6107,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6146,
											"end": 6148,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 6217,
											"end": 6224,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6208,
											"end": 6214,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6197,
											"end": 6206,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6193,
											"end": 6215,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 6172,
											"end": 6225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6162,
											"end": 6225,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6162,
											"end": 6225,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6117,
											"end": 6235,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 6242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6248,
											"end": 6428,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 6248,
											"end": 6428,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6296,
											"end": 6373,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6293,
											"end": 6294,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6286,
											"end": 6374,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6393,
											"end": 6397,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 6390,
											"end": 6391,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6383,
											"end": 6398,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6417,
											"end": 6421,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6414,
											"end": 6415,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6407,
											"end": 6422,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6478,
											"end": 6484,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6515,
											"end": 6516,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6509,
											"end": 6513,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6505,
											"end": 6517,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6495,
											"end": 6517,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6495,
											"end": 6517,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6562,
											"end": 6563,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6556,
											"end": 6560,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6552,
											"end": 6564,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6583,
											"end": 6601,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6639,
											"end": 6643,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 6631,
											"end": 6637,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6627,
											"end": 6644,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6617,
											"end": 6644,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6617,
											"end": 6644,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6701,
											"end": 6703,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6693,
											"end": 6699,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6690,
											"end": 6704,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6670,
											"end": 6688,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6667,
											"end": 6705,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 6720,
											"end": 6738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6485,
											"end": 6754,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6434,
											"end": 6754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6760,
											"end": 7202,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 6760,
											"end": 7202,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6909,
											"end": 6913,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6947,
											"end": 6949,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6936,
											"end": 6945,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6932,
											"end": 6950,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6924,
											"end": 6950,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6924,
											"end": 6950,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6960,
											"end": 7031,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 7028,
											"end": 7029,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7017,
											"end": 7026,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7013,
											"end": 7030,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7004,
											"end": 7010,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6960,
											"end": 7031,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 6960,
											"end": 7031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6960,
											"end": 7031,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 6960,
											"end": 7031,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7041,
											"end": 7113,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 7109,
											"end": 7111,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7098,
											"end": 7107,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7094,
											"end": 7112,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7085,
											"end": 7091,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7041,
											"end": 7113,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 7041,
											"end": 7113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7041,
											"end": 7113,
											"name": "tag",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 7041,
											"end": 7113,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7123,
											"end": 7195,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 7191,
											"end": 7193,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7180,
											"end": 7189,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7176,
											"end": 7194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7167,
											"end": 7173,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7123,
											"end": 7195,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 7123,
											"end": 7195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7123,
											"end": 7195,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 7123,
											"end": 7195,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6760,
											"end": 7202,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 6760,
											"end": 7202,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6760,
											"end": 7202,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6760,
											"end": 7202,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6760,
											"end": 7202,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6760,
											"end": 7202,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6760,
											"end": 7202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7208,
											"end": 7388,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 7208,
											"end": 7388,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7256,
											"end": 7333,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7253,
											"end": 7254,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7246,
											"end": 7334,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7353,
											"end": 7357,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 7350,
											"end": 7351,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7343,
											"end": 7358,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7377,
											"end": 7381,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7374,
											"end": 7375,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7367,
											"end": 7382,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7394,
											"end": 7585,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 7394,
											"end": 7585,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7434,
											"end": 7437,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 7471,
											"end": 7472,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 7453,
											"end": 7473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "tag",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7448,
											"end": 7473,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7448,
											"end": 7473,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7487,
											"end": 7507,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 7505,
											"end": 7506,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7487,
											"end": 7507,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 7487,
											"end": 7507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7487,
											"end": 7507,
											"name": "tag",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 7487,
											"end": 7507,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7482,
											"end": 7507,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7482,
											"end": 7507,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7530,
											"end": 7531,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7527,
											"end": 7528,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7523,
											"end": 7532,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7516,
											"end": 7532,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7516,
											"end": 7532,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7551,
											"end": 7554,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7548,
											"end": 7549,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7545,
											"end": 7555,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7558,
											"end": 7576,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 7558,
											"end": 7576,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 7558,
											"end": 7576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7558,
											"end": 7576,
											"name": "tag",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 7558,
											"end": 7576,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "tag",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7394,
											"end": 7585,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7394,
											"end": 7585,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7394,
											"end": 7585,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7394,
											"end": 7585,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7394,
											"end": 7585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"MockERC20.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"faucet(uint256)": "57915897",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"faucet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"faucet(uint256)\":{\"details\":\"Use only in local/test deployments \\u2014 remove for production\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(uint256)\":{\"notice\":\"Burn tokens from caller\\u2019s balance\"},\"burnFrom(address,uint256)\":{\"notice\":\"Burn tokens from another account (requires allowance)\"},\"faucet(uint256)\":{\"notice\":\"Public faucet for testing (anyone can mint to themselves)\"},\"mint(address,uint256)\":{\"notice\":\"Mint new tokens (owner only)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MockERC20.sol\":\"MockERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"MockERC20.sol\":{\"keccak256\":\"0x1989bda94854f49b9f94c2088219d296878bd74d27f6c107f4860ab0d38bd200\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8951beb190ac166d039efdb2d9d588a2fe4bcdf30cef6e26e7b59bf2a9160f1\",\"dweb:/ipfs/QmZFX5vAcYT8h8BB3ZoZRHJAfDxruG2YhXazSL9jnF5LRB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "MockERC20.sol:MockERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "MockERC20.sol:MockERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "MockERC20.sol:MockERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "MockERC20.sol:MockERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "MockERC20.sol:MockERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "MockERC20.sol:MockERC20",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 943,
								"contract": "MockERC20.sol:MockERC20",
								"label": "_decimals",
								"offset": 20,
								"slot": "5",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"burn(uint256)": {
								"notice": "Burn tokens from caller’s balance"
							},
							"burnFrom(address,uint256)": {
								"notice": "Burn tokens from another account (requires allowance)"
							},
							"faucet(uint256)": {
								"notice": "Public faucet for testing (anyone can mint to themselves)"
							},
							"mint(address,uint256)": {
								"notice": "Mint new tokens (owner only)"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1638:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1648:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1656:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1671:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1681:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1594:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1615:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:2"
									},
									"scope": 799,
									"src": "1582:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1820:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1837:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1830:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1805:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:2"
									},
									"scope": 799,
									"src": "1760:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2024:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2041:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2034:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2009:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:2"
									},
									"scope": 799,
									"src": "1962:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2744:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2754:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2737:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:2"
									},
									"scope": 799,
									"src": "2688:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2864:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2881:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2874:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2776:22:2",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2812:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2823:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2855:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2855:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2854:9:2"
									},
									"scope": 799,
									"src": "2803:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3007:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3024:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3034:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3024:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3017:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2906:22:2",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2942:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2960:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "2952:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2952:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2951:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "2998:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2998:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2997:9:2"
									},
									"scope": 799,
									"src": "2933:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3319:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3337:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3329:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3329:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3345:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3345:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3329:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3377:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3384:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3388:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3367:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3367:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3367:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3411:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3404:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3055:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3253:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3270:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3262:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3282:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3274:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3274:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3261:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3313:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3313:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3312:6:2"
									},
									"scope": 799,
									"src": "3244:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3544:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3561:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3573:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3561:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3580:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3561:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3554:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3428:22:2",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3464:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3482:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3474:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3497:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3489:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3473:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3535:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3535:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3534:9:2"
									},
									"scope": 799,
									"src": "3455:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "3981:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3999:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "3991:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3991:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4007:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4007:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3991:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4038:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4045:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4054:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4029:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4029:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4029:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4077:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4070:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3601:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3911:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3927:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3919:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3919:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3944:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3936:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3918:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3975:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3975:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3974:6:2"
									},
									"scope": 799,
									"src": "3902:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4773:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4791:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4783:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4783:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4801:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4801:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4783:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4839:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4845:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4854:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4823:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4823:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4880:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4886:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4890:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4870:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4870:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4870:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4913:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "4906:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4094:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4689:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4710:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4702:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4702:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4724:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4716:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4716:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4736:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4728:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4728:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4701:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4767:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4767:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4766:6:2"
									},
									"scope": 799,
									"src": "4680:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5366:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5380:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5396:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5388:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5388:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5388:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5380:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5376:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5400:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5448:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5440:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5440:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5440:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5421:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5421:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5414:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5475:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5489:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5481:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5481:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5481:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5475:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5471:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5493:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5543:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5535:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5535:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5535:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5514:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5514:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5507:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5574:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5580:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5584:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5566:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5566:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5566:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "4930:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5306:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5324:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5316:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5316:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5338:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5330:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5330:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5350:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5342:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5315:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5366:0:2"
									},
									"scope": 799,
									"src": "5297:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "5987:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6001:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6017:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6009:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6009:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6009:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6001:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6175:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6197:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6189:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6189:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6211:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6221:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6211:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6189:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6244:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6258:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6244:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6240:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6265:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6315:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6321:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6334:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6290:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6290:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6283:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6368:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6475:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6485:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6475:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6493:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6507:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6493:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6475:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6475:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "5997:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6021:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6137:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6153:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6137:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6137:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6551:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6565:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6557:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6557:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6557:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6551:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6766:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6780:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6925:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "6935:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6925:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6942:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6925:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "6925:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6547:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6569:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6583:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6714:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6730:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6714:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6714:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "6996:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7002:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7006:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "6987:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6987:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "6982:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5603:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5921:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5937:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5929:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5929:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5951:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5943:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5943:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5963:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5955:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5955:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5928:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5987:0:2"
									},
									"scope": 799,
									"src": "5912:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7418:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7432:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7451:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7443:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7443:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7443:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7432:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7428:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7455:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7505:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7497:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7497:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7497:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7476:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7476:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7469:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7544:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7536:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7536:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7536:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7548:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7557:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7528:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7528:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7528:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7025:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7371:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7385:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7377:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7377:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7402:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7394:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7394:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7376:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7418:0:2"
									},
									"scope": 799,
									"src": "7362:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "7944:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "7958:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7977:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7969:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7969:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7969:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7958:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "7954:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "7981:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8029:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8021:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8021:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8021:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8002:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8002:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "7995:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8060:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8077:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8069:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8069:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8069:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8081:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8052:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8052:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8052:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7576:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7897:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7911:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7903:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7903:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7928:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7920:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7920:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7902:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7944:0:2"
									},
									"scope": 799,
									"src": "7888:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8704:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8723:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8730:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8739:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8746:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8714:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8714:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8714:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8100:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8639:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8656:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8648:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8648:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8671:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8663:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8663:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8688:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8680:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8680:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8647:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8704:0:2"
									},
									"scope": 799,
									"src": "8630:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9703:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9717:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9734:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9726:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9726:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9726:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9717:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9713:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9738:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9788:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9780:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9780:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9780:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9759:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9759:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9752:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9815:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9834:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9826:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9826:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9826:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9815:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9811:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9838:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9887:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9879:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9879:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9879:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9859:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9859:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9852:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "9910:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "9922:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9910:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "9929:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9910:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "9940:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9910:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "9910:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "9959:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "9955:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "9970:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "9998:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10005:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10014:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "9989:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9989:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "9984:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8764:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9614:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9631:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9623:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9623:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9646:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9638:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9638:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9663:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9655:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9655:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9675:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9670:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9670:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9622:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9703:0:2"
									},
									"scope": 799,
									"src": "9605:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10408:387:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10426:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10418:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10418:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10455:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10462:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10445:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10445:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10418:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10484:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10508:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10508:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10503:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10503:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10517:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10503:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10484:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10480:309:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10522:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10540:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10559:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10540:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10536:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10566:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10618:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10627:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10645:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10591:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10591:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10584:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10679:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10716:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10723:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10732:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10751:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10732:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10758:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10707:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10707:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10707:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10043:271:2",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10328:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10352:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10344:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10344:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10367:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10359:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10359:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10384:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10376:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10376:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10343:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10408:0:2"
									},
									"scope": 799,
									"src": "10319:476:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9691:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10693:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "215:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "397:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "406:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "428:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "448:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:3"
									},
									"src": "391:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "628:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "637:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "660:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "685:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:3"
									},
									"src": "622:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "822:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:3"
									},
									"scope": 877,
									"src": "776:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "932:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "972:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:3"
									},
									"scope": 877,
									"src": "913:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1223:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1235:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1268:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:3"
									},
									"scope": 877,
									"src": "1205:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1568:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1583:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1623:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:3"
									},
									"scope": 877,
									"src": "1549:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2327:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2344:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2377:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:3"
									},
									"scope": 877,
									"src": "2310:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2713:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2727:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2739:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2772:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:3"
									},
									"scope": 877,
									"src": "2691:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "205:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2675:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 903,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 903,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 903,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"MockERC20.sol": {
				"ast": {
					"absolutePath": "MockERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"MockERC20": [
							1051
						],
						"Ownable": [
							147
						]
					},
					"id": 1052,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 936,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1052,
							"sourceUnit": 800,
							"src": "217:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1052,
							"sourceUnit": 148,
							"src": "274:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 938,
										"name": "ERC20",
										"nameLocations": [
											"352:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "352:5:6"
									},
									"id": 939,
									"nodeType": "InheritanceSpecifier",
									"src": "352:5:6"
								},
								{
									"baseName": {
										"id": 940,
										"name": "Ownable",
										"nameLocations": [
											"359:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "359:7:6"
									},
									"id": 941,
									"nodeType": "InheritanceSpecifier",
									"src": "359:7:6"
								}
							],
							"canonicalName": "MockERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1051,
							"linearizedBaseContracts": [
								1051,
								147,
								799,
								189,
								903,
								877,
								933
							],
							"name": "MockERC20",
							"nameLocation": "339:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 943,
									"mutability": "mutable",
									"name": "_decimals",
									"nameLocation": "388:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 1051,
									"src": "374:23:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 942,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "374:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 977,
										"nodeType": "Block",
										"src": "756:134:6",
										"statements": [
											{
												"expression": {
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 963,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 943,
														"src": "767:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 964,
														"name": "decimals_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 949,
														"src": "779:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "767:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 966,
												"nodeType": "ExpressionStatement",
												"src": "767:21:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 967,
														"name": "initialSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "803:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 968,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "819:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "803:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 976,
												"nodeType": "IfStatement",
												"src": "799:84:6",
												"trueBody": {
													"id": 975,
													"nodeType": "Block",
													"src": "822:61:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 971,
																		"name": "initialOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 953,
																		"src": "843:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 972,
																		"name": "initialSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 951,
																		"src": "857:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 970,
																	"name": "_mint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 639,
																	"src": "837:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 973,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "837:34:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 974,
															"nodeType": "ExpressionStatement",
															"src": "837:34:6"
														}
													]
												}
											}
										]
									},
									"id": 978,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 956,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 945,
													"src": "720:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 957,
													"name": "symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 947,
													"src": "726:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 958,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 955,
												"name": "ERC20",
												"nameLocations": [
													"714:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "714:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "714:19:6"
										},
										{
											"arguments": [
												{
													"id": 960,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 953,
													"src": "742:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 961,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 959,
												"name": "Ownable",
												"nameLocations": [
													"734:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "734:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "734:21:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "582:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "568:18:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 944,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "568:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "611:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "597:20:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 946,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "597:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "decimals_",
												"nameLocation": "634:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "628:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 948,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "628:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "initialSupply",
												"nameLocation": "662:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "654:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "694:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "686:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "557:156:6"
									},
									"returnParameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "756:0:6"
									},
									"scope": 1051,
									"src": "546:344:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										363
									],
									"body": {
										"id": 986,
										"nodeType": "Block",
										"src": "1109:35:6",
										"statements": [
											{
												"expression": {
													"id": 984,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 943,
													"src": "1127:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 983,
												"id": 985,
												"nodeType": "Return",
												"src": "1120:16:6"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 987,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "1053:8:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 980,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1084:8:6"
									},
									"parameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1061:2:6"
									},
									"returnParameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "1102:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 981,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1102:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:7:6"
									},
									"scope": 1051,
									"src": "1044:100:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1002,
										"nodeType": "Block",
										"src": "1404:36:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 998,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "1421:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 999,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "1425:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 997,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "1415:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1415:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1001,
												"nodeType": "ExpressionStatement",
												"src": "1415:17:6"
											}
										]
									},
									"documentation": {
										"id": 988,
										"nodeType": "StructuredDocumentation",
										"src": "1297:40:6",
										"text": "@notice Mint new tokens (owner only)"
									},
									"functionSelector": "40c10f19",
									"id": 1003,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 995,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 994,
												"name": "onlyOwner",
												"nameLocations": [
													"1394:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1394:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1394:9:6"
										}
									],
									"name": "mint",
									"nameLocation": "1352:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1365:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "1357:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 989,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1357:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1377:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "1369:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1369:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1356:28:6"
									},
									"returnParameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:6"
									},
									"scope": 1051,
									"src": "1343:97:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1015,
										"nodeType": "Block",
										"src": "1639:44:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1010,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1656:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1011,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1660:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1656:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1012,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1006,
															"src": "1668:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1009,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "1650:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1650:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1014,
												"nodeType": "ExpressionStatement",
												"src": "1650:25:6"
											}
										]
									},
									"documentation": {
										"id": 1004,
										"nodeType": "StructuredDocumentation",
										"src": "1448:144:6",
										"text": "@notice Public faucet for testing (anyone can mint to themselves)\n @dev Use only in local/test deployments — remove for production"
									},
									"functionSelector": "57915897",
									"id": 1016,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "faucet",
									"nameLocation": "1607:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1622:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "1614:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1614:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1613:16:6"
									},
									"returnParameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1639:0:6"
									},
									"scope": 1051,
									"src": "1598:85:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1028,
										"nodeType": "Block",
										"src": "1928:44:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1023,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1945:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1024,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1949:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1945:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1025,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "1957:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1022,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "1939:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1939:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1027,
												"nodeType": "ExpressionStatement",
												"src": "1939:25:6"
											}
										]
									},
									"documentation": {
										"id": 1017,
										"nodeType": "StructuredDocumentation",
										"src": "1836:47:6",
										"text": "@notice Burn tokens from caller’s balance"
									},
									"functionSelector": "42966c68",
									"id": 1029,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "1898:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1911:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "1903:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1018,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1903:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1902:16:6"
									},
									"returnParameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1928:0:6"
									},
									"scope": 1051,
									"src": "1889:83:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1049,
										"nodeType": "Block",
										"src": "2111:96:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1038,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "2138:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1039,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2147:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1040,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2151:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2147:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1041,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1034,
															"src": "2159:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1037,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "2122:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2122:44:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1043,
												"nodeType": "ExpressionStatement",
												"src": "2122:44:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1045,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "2183:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1046,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1034,
															"src": "2192:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1044,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "2177:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2177:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1048,
												"nodeType": "ExpressionStatement",
												"src": "2177:22:6"
											}
										]
									},
									"documentation": {
										"id": 1030,
										"nodeType": "StructuredDocumentation",
										"src": "1980:65:6",
										"text": "@notice Burn tokens from another account (requires allowance)"
									},
									"functionSelector": "79cc6790",
									"id": 1050,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "2060:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2077:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "2069:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1031,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2094:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "2086:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1033,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2086:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:33:6"
									},
									"returnParameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2111:0:6"
									},
									"scope": 1051,
									"src": "2051:156:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1052,
							"src": "330:1880:6",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820
							]
						}
					],
					"src": "33:2179:6"
				},
				"id": 6
			}
		}
	}
}